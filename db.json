{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/embed.min.js","path":"js/embed.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/cloudTie/mobile.less","path":"css/cloudTie/mobile.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/cloudTie/pc.less","path":"css/cloudTie/pc.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/loader.js","path":"js/cloudTie/loader.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/loader.min.js","path":"js/cloudTie/loader.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/mobile.min.js","path":"js/cloudTie/mobile.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/embed.js","path":"js/embed.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/mobile.js","path":"js/cloudTie/mobile.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/pc.min.js","path":"js/cloudTie/pc.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/pc.js","path":"js/cloudTie/pc.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"1dd255b105e72f90ce02112ed09d1acec2a0b877","modified":1496716891333},{"_id":"source/error.html","hash":"4b08d157a3e9e36a15ae9877c2e5ad35169e71ea","modified":1496820546931},{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1496651257749},{"_id":"themes/indigo/README.md","hash":"15ab71102c10c65c4cf594693abdf644b1e4d92c","modified":1496651257749},{"_id":"themes/indigo/_config.yml","hash":"8fd0085737fcb912b5335db209a9a8234e6357a6","modified":1496917307035},{"_id":"themes/indigo/package.json","hash":"bcfdabbf7da683b54c94ff7e82b90886863dca6b","modified":1496738483592},{"_id":"source/404/index.md","hash":"50ca0f6faa820e1085eac050e450f18e30348bf6","modified":1496820675645},{"_id":"source/_posts/201706061118.md","hash":"364a3ef404ba37393f23451216f08427b63153cc","modified":1496902516948},{"_id":"source/_posts/201706061120.md","hash":"86b3bdcb45cdb598e26c2f61d30d1860798b7830","modified":1496902462565},{"_id":"source/_posts/201706061331.md","hash":"f7db3720851a01306bd474081a27397b73b66e02","modified":1496902505608},{"_id":"source/_posts/201706061512.md","hash":"2cc8ed9b5a18f404f3248b0b4ec644102d7bcca0","modified":1496902376466},{"_id":"source/_posts/201706061623.md","hash":"81e3eea34c72639d7d1ff2283c9e0861914c1c5d","modified":1496902472830},{"_id":"source/_posts/201706071532.md","hash":"cd0303596c2226a344d81ac9f8f588c94d4675b3","modified":1496902275934},{"_id":"source/_posts/201706071556.md","hash":"e8634521126b49063baa05c273831ac92cfaeb01","modified":1496902219985},{"_id":"source/_posts/201706081544.md","hash":"9fb7f9e78709174a1a359b0a9b43a34279a13d8d","modified":1497947199424},{"_id":"source/_posts/201706081557.md","hash":"8c8ad829e52c113256ad7d9c7b1574646b630ba6","modified":1496977428168},{"_id":"source/about/index.md","hash":"3371d03468b03c14037b3e1f250da4cbb4e74229","modified":1497435120486},{"_id":"source/categories/index.md","hash":"f82d1f803dd15023771ec7a91911578d1cb3dd63","modified":1496743594551},{"_id":"source/tags/index.md","hash":"cf8f90ad8dac53d5e6bb30339e6eaa9e7bede888","modified":1496743022884},{"_id":"themes/indigo/languages/en.yml","hash":"1957d2bfc3a4cef299f4f169b431e9b1128ba162","modified":1496651257751},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"01adb00445dbc7667da15b99a6af9620aa711e5a","modified":1496731176541},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1496651257754},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1496651257800},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1496651257800},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1496885796206},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1496651257801},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1496651257802},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1496651257803},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1496651257804},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1496651257804},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1496651257805},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1496651257806},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1496651257757},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1496651257757},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"59a895ec2a6fd725bc55d73cc23b88a49b8ed813","modified":1496731576056},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"e01d1987f1016c521a19355d38d35dc78d20f3da","modified":1496651257760},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"6156bf20791e46fc1c5872113276c1c1f5c13773","modified":1496651257761},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"58745bd3b21926014a98e18a35c9721e97fcb0c1","modified":1496651257762},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1496651257766},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"d39afaad6b0dd2a3ae27e6db3e9a6cd6014622fa","modified":1496651257767},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1496651257769},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"27f37ef30ea3651940be6f3f16f33ec492b252e5","modified":1496651257781},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"9b4dd97e7f558bb619d805ff6eb89abd8bc945ea","modified":1496651257797},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1496651257798},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1496651257799},{"_id":"source/_drafts/网站建设与开发/No利用阿里云搭建自己的代理服务器.md","hash":"12012e525d7847819d1b1186b3948a0c7bc95a49","modified":1496831608401},{"_id":"source/_drafts/网站建设与开发/搭建私人个性化博客.md","hash":"364a3ef404ba37393f23451216f08427b63153cc","modified":1496902171044},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"0fda54e2dcfdd496f06d07ffe46ceed948487c60","modified":1496728598182},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"5103ac74e961cd55cf1489502919d2b2da504242","modified":1493801728518},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1496651257887},{"_id":"themes/indigo/source/img/favicon.ico","hash":"0e716ac7f2df703d6926790ce5b1bc56864dc250","modified":1490233978000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1496651257888},{"_id":"themes/indigo/source/css/style.less","hash":"6e8609fa857be01f0206209a746c9872389c42c3","modified":1496651257883},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1496651257889},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"c018272bff91119300461c1ef242c317446b3a15","modified":1496728651805},{"_id":"themes/indigo/source/js/main.min.js","hash":"7355f5a169c02ff32af75b95237ef34e3756e9c8","modified":1496651257906},{"_id":"themes/indigo/source/js/main.js","hash":"5c51b53d59d5131bfa4e9b6a0af3557ee6dc6a85","modified":1496651257904},{"_id":"themes/indigo/source/js/search.js","hash":"c3f80dee3bab6bd4895b55b849085c8af7d1e647","modified":1496651257906},{"_id":"themes/indigo/source/js/search.min.js","hash":"c0c3d048af0d6b840f6f1dfda08911c7bfdb5dc1","modified":1496651257908},{"_id":"themes/indigo/source/img/brand.jpg","hash":"26d227d217fb2b863a5c505e13a7401903c8a028","modified":1470584516817},{"_id":"source/_drafts/Java/Struts2/Strust2_1_了解Struts2的基本使用步骤.md","hash":"7a3b0c8865060338d0c98fd76052c30c77e10b46","modified":1496976965676},{"_id":"source/_drafts/Java/Struts2/Struts2-2-了解Struts的原理.md","hash":"5864767a56f3d6d9a2789740525bab64c89228d6","modified":1496975676689},{"_id":"source/_drafts/Java/MVC/简单了解MVC框架.md","hash":"20733ac93dea4989dc3ad148df59fcd241a5a407","modified":1496912630377},{"_id":"themes/indigo/source/js/embed.min.js","hash":"bf39139ceccbd38a925bc1c434f6229df27b0e7c","modified":1496651257904},{"_id":"source/_drafts/前端开发/Hexo/Hexo中主题配置文件(_config.yml)详解.md","hash":"f7db3720851a01306bd474081a27397b73b66e02","modified":1496902498340},{"_id":"source/_drafts/前端开发/Hexo/Hexo中遇到的问题及解决.md","hash":"81e3eea34c72639d7d1ff2283c9e0861914c1c5d","modified":1496902453358},{"_id":"source/_drafts/前端开发/Hexo/Hexo帮助文档-官翻.md","hash":"2cc8ed9b5a18f404f3248b0b4ec644102d7bcca0","modified":1496902357951},{"_id":"source/_drafts/前端开发/Hexo/Hexo全局配置文件(_config.yml)详解.md","hash":"86b3bdcb45cdb598e26c2f61d30d1860798b7830","modified":1496902430878},{"_id":"source/_drafts/前端开发/Hexo/No文章页面布局优化设置.md","hash":"9130f961c98efb373b1b2207d404332e26742a7f","modified":1496890130215},{"_id":"source/_drafts/前端开发/Html/Html中符号的转义.md","hash":"151cd720a4a59bebdb92007f7ece0970d2619e5d","modified":1496975255552},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1496651257771},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1496651257772},{"_id":"themes/indigo/layout/_partial/plugins/duoshuo-count.ejs","hash":"de23dfaaaed783f6ade86084fb7bcee531dce4d0","modified":1496651257772},{"_id":"themes/indigo/layout/_partial/plugins/duoshuo-js.ejs","hash":"fe1117d6e3c8a52be00ecc758df2df4be91b13a5","modified":1496651257773},{"_id":"themes/indigo/layout/_partial/plugins/duoshuo.ejs","hash":"edc98c8015ab1deff32507d5f563f5cab0bd7f68","modified":1496651257774},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"23c101d45911eb0846533aaa2d409c43aa5e899a","modified":1496651257775},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5723d507eca4390e8e5d18c0770e7953b8c22f5a","modified":1496651257777},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1496651257778},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1496651257779},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1496651257779},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1496651257780},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1496801073724},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"8fbd0910828f1ab6eba728bdecc9811d623baae2","modified":1496651257779},{"_id":"themes/indigo/layout/_partial/plugins/wangyi-ygt.ejs","hash":"0540808912afbbd8dddbdd15b8d1b54426d8b221","modified":1496651257781},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1496651257782},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"5840e2234e751a993b4a0c67282b03e367a3ceb7","modified":1496651257783},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"968b27ca952d01b066cfe49fb670faf177d6b67e","modified":1496651257784},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1496651257785},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1496651257787},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1496651257793},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1496651257788},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"ce764334c94e198fde3d222eadedc8813f026fca","modified":1496651257794},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1496651257795},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1496651257795},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1496651257796},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1496651257796},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"b6123e895c16ace651f1832281ff655776d4068c","modified":1496651257796},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1496651257797},{"_id":"source/_drafts/开发工具/Git/Git的使用总结.md","hash":"e8634521126b49063baa05c273831ac92cfaeb01","modified":1496902037759},{"_id":"source/_drafts/开发工具/MarkDown/MarkDown的语法使用说明.md","hash":"cd0303596c2226a344d81ac9f8f588c94d4675b3","modified":1496902262658},{"_id":"themes/indigo/source/css/_duoshuo/common.less","hash":"49fdcf4bde1a9d2aa4db4d8d117f46b432cee8d0","modified":1496651257808},{"_id":"themes/indigo/source/css/_duoshuo/custom.less","hash":"b6b4caf08c3be67db5a14fc54241b61a815a5ffa","modified":1496651257809},{"_id":"themes/indigo/source/css/_duoshuo/dialog.less","hash":"61596d022ea489ec6a0dda9fe93c5c6479135da9","modified":1496651257810},{"_id":"themes/indigo/source/css/_duoshuo/embed.less","hash":"a09aeb68646e6309d737dddea237a2d160608bbf","modified":1496651257810},{"_id":"themes/indigo/source/css/_duoshuo/global.less","hash":"933874033bc487937ea34f6b05f1f94bd52ad758","modified":1496651257811},{"_id":"themes/indigo/source/css/_duoshuo/login.less","hash":"6a7962f817199802f91d32d4e9bb87098683d84c","modified":1496651257812},{"_id":"themes/indigo/source/css/_duoshuo/notify.less","hash":"de48d76de6b99d7aa3f176cb1345b5bd1a6e3ec0","modified":1496651257813},{"_id":"themes/indigo/source/css/_duoshuo/mixins.less","hash":"caf782f681fc97ecdab34bc34e16e3353bcd1eb6","modified":1496651257812},{"_id":"themes/indigo/source/css/_duoshuo/recent-comments.less","hash":"1e2a57b7dc9ca3ef46d9966b49d0a8e614920c0a","modified":1496651257813},{"_id":"themes/indigo/source/css/_duoshuo/recent-visitors.less","hash":"9494e2183ce7a7a3f5742e3ba42b3514312a5006","modified":1496651257814},{"_id":"themes/indigo/source/css/_duoshuo/share.less","hash":"4218e03b97d12b006dc01c78f02f76a1e0daafb7","modified":1496651257814},{"_id":"themes/indigo/source/css/_duoshuo/thread.less","hash":"2fb5b1105fd1863c2fc25fa5c9973748691b93e8","modified":1496651257816},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1496651257820},{"_id":"themes/indigo/source/css/_duoshuo/variables.less","hash":"2cf171e7465da213a28e3c271303916ceef9c8a2","modified":1496651257817},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"53f2eca8babd552b408cc2c27f94a922f6c6f3b2","modified":1497436205587},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1496651257823},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"9bed07c68b318fd4bfb5501ef7409e279d79b4f1","modified":1496892692333},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1496651257824},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"c075e2ee959ada91091281da98cf020c83930124","modified":1496651257825},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1496891907604},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1496651257826},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1496651257827},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"6322741b6db86db40411c4d1df269690e7f1ba0b","modified":1496892774531},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"15e2bcbdf2ffb44707e4c7d0b6ba166fe1598ac0","modified":1496651257827},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1496651257828},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1496651257828},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1496651257829},{"_id":"themes/indigo/source/css/cloudTie/_inputBox.less","hash":"3156898bbbbe0d897f475c03e1e6245e97399613","modified":1496651257832},{"_id":"themes/indigo/source/css/cloudTie/_joinCount.less","hash":"c1e5821189d17419869249cbd556d8da992fbfd3","modified":1496651257833},{"_id":"themes/indigo/source/css/cloudTie/_reset.less","hash":"9228ab9e7d92a3cd8cda340ae67f5b172863c835","modified":1496651257833},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1496651257829},{"_id":"themes/indigo/source/css/cloudTie/_share.less","hash":"9c95ca439e85fadbca00778463a9375fbeba9ad2","modified":1496651257834},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1496891790706},{"_id":"themes/indigo/source/css/cloudTie/mobile.less","hash":"0d68b7606a1b3c14a18a03ae3c80e4602f13c75b","modified":1496937842270},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"082896b966ed25b39c74e7b007b4f54c235685a4","modified":1496651257830},{"_id":"themes/indigo/source/css/cloudTie/pc.less","hash":"8038abcea49d6f74a6ff155cc565b4a675107ae6","modified":1496651257835},{"_id":"themes/indigo/source/js/cloudTie/loader.js","hash":"299d58e74946a2aeb8db74d3e4b6b5adfe694e15","modified":1496651257893},{"_id":"themes/indigo/source/js/cloudTie/loader.min.js","hash":"e73fcd885be2c4585f154861c9969e3c955d03e3","modified":1496651257894},{"_id":"themes/indigo/source/js/cloudTie/mobile.min.js","hash":"859e3efb15db88cedfd18f8523ecfd21f3a22324","modified":1496651257897},{"_id":"themes/indigo/source/js/embed.js","hash":"3ac650967aa0f74ec4d7ef5d8d168f7f199e31af","modified":1496651257902},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"c19f5e28365c7ba6fa938591a8021da7d603253d","modified":1496651257822},{"_id":"themes/indigo/source/js/cloudTie/mobile.js","hash":"67a0a31ee1e491635369b0401d629e97fccd4d94","modified":1496651257896},{"_id":"themes/indigo/source/js/cloudTie/pc.min.js","hash":"aea28510192fb36a36bf174716a39afd1ca20240","modified":1496651257900},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1496651257857},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1496651257860},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1496651257861},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1496651257862},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1496651257865},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1496651257865},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1496651257867},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1496651257870},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1496651257872},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1496651257871},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1496651257875},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1496651257877},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1496651257876},{"_id":"themes/indigo/source/js/cloudTie/pc.js","hash":"25d4ae345f8122f8c7e8e48959d37523dd1e4abb","modified":1496651257899},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1496651257882},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1496651257883},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1496651257859},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1496651257854},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1496651257864},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1496651257855},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1496651257869},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1496651257874},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1496651257880},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1496651257840},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1496651257842},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1496651257852},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1496651257848},{"_id":"public/atom.xml","hash":"eb70f16459c12608de8575de84f5c6fdbba6f7b2","modified":1497947359042},{"_id":"public/content.json","hash":"8f53cae37933f1851847d99fd8e42bfada62dfd5","modified":1497947359044},{"_id":"public/sitemap.xml","hash":"e8462ca3399bbdf7b70efb98071084760f8f407b","modified":1497947359042},{"_id":"public/error.html","hash":"ea288305d581a451a4fdbce9553fa3deae52ce2e","modified":1497435601119},{"_id":"public/404.html","hash":"ec2aa52b2b11b61dee605142e3bc14cfb6942e78","modified":1497435601120},{"_id":"public/about/index.html","hash":"0cc20cb85f85161fd3870849531ac8f0cbaeb7d1","modified":1497435601120},{"_id":"public/categories/前端开发/index.html","hash":"81e61fc4c22758a551257bc299e46c3844939a0c","modified":1497947362524},{"_id":"public/categories/网站建设与开发/index.html","hash":"520dc68e2f48ce027781b27d020acfca3cdb95d4","modified":1497947362852},{"_id":"public/categories/前端开发/Hexo/index.html","hash":"be6ef9f308dc4ff9f425e3839fae08a639c5808e","modified":1497947362855},{"_id":"public/categories/开发工具/index.html","hash":"7cf7ac67b124811f86b0da62ec236d9a2978117f","modified":1497947362855},{"_id":"public/categories/Java/index.html","hash":"19c1ff47cdae2c64d56623bdce569a6edcb920eb","modified":1497947362857},{"_id":"public/categories/开发工具/MarkDown/index.html","hash":"6616d0d2f4840efad5ced8a58f73a6099346233f","modified":1497947362855},{"_id":"public/categories/开发工具/Git/index.html","hash":"a070cbbcb4ad3f521f0338e9647f106f63080ce1","modified":1497947362856},{"_id":"public/categories/Java/Struts2/index.html","hash":"284865f13a6ebe04e5939b348f869b263446d73c","modified":1497947362856},{"_id":"public/categories/Java/MVC/index.html","hash":"4748624309e3cc0c44d366cdc6c8cb5237b934bf","modified":1497947362856},{"_id":"public/tags/MarkDown/index.html","hash":"0383ff90cc527f4a221929e013ac3384d91997f1","modified":1497947362856},{"_id":"public/tags/文本编辑/index.html","hash":"8783602e8d66ada364cc6369942dddaca0c9796d","modified":1497947362856},{"_id":"public/tags/Git/index.html","hash":"df3637ce39c1ad91f262424c11fa4b9ad323d3ea","modified":1497947362856},{"_id":"public/tags/Struts2/index.html","hash":"27f97f3dc945237cefac7e366a150cd688b0234a","modified":1497947362856},{"_id":"public/tags/Java开发框架/index.html","hash":"487b4d281c3d2f42e0014c5c4097810d634f865f","modified":1497947362856},{"_id":"public/tags/MVC/index.html","hash":"f95d2c1adf8aa14e88ee1c983624f6921cf8299c","modified":1497947362856},{"_id":"public/categories/index.html","hash":"40fa20cce1ddd575c052eca12857bd3876788ec8","modified":1497947362857},{"_id":"public/tags/index.html","hash":"5e6bb2c5b9cbe0f1d6ffc9378785676dc86dc222","modified":1497947362857},{"_id":"public/vanxinBlog/201706081557/index.html","hash":"943bbb0706fd23c99abc742c5ec9fc4fce7f397d","modified":1497947362857},{"_id":"public/vanxinBlog/201706081544/index.html","hash":"7ce3f0b5889fe9b9b9c61a6734ecc3977cebab6e","modified":1497947362857},{"_id":"public/vanxinBlog/201706071556/index.html","hash":"66203fa20d4baaaff02ed6878452e12dcc9d105c","modified":1497947362857},{"_id":"public/vanxinBlog/201706071532/index.html","hash":"2c57a9c6f1129e59ed9ac4b86a1faf012b9cebd1","modified":1497435601124},{"_id":"public/vanxinBlog/201706061623/index.html","hash":"d48b1567c0b0d6346073e6d405884468e4423c88","modified":1497435601125},{"_id":"public/vanxinBlog/201706061512/index.html","hash":"19654b319a9c23bfcd838543bff273327d7efab6","modified":1497435601125},{"_id":"public/vanxinBlog/201706061331/index.html","hash":"74ccf7416dee8537677126d938d15b2401565858","modified":1497435601125},{"_id":"public/vanxinBlog/201706061120/index.html","hash":"bc33be9218eec2278cb1abc14701dcd5c6bc1e4b","modified":1497435601125},{"_id":"public/vanxinBlog/201706061118/index.html","hash":"5e3940212e8fd4a7f74c795737ea63cdbc2ac627","modified":1497435601125},{"_id":"public/archives/index.html","hash":"67bf8a78b8e107446fcf117a21d9a0fb79bae1c6","modified":1497947362857},{"_id":"public/archives/2017/index.html","hash":"c8bf1a0d445df37406e2cd00cb391ed4d5bd47da","modified":1497947362857},{"_id":"public/archives/2017/06/index.html","hash":"fef18502db4c874cb2c86714fddde7cfccf32a32","modified":1497947362858},{"_id":"public/index.html","hash":"6f02104d7986774bca6cbc23789749dfb5a34a2c","modified":1497947362857},{"_id":"public/tags/Hexo/index.html","hash":"ad4d2ee602abab209796df22c65fbaaabbf29c40","modified":1497947362858},{"_id":"public/tags/Blog/index.html","hash":"e0c6590bbbe5ddaf47cd930f5dfca8a8e35028a4","modified":1497947362858},{"_id":"public/CNAME","hash":"1dd255b105e72f90ce02112ed09d1acec2a0b877","modified":1497435601204},{"_id":"public/img/alipay.jpg","hash":"0fda54e2dcfdd496f06d07ffe46ceed948487c60","modified":1497435601204},{"_id":"public/img/avatar.jpg","hash":"5103ac74e961cd55cf1489502919d2b2da504242","modified":1497435601205},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1497435601205},{"_id":"public/img/favicon.ico","hash":"0e716ac7f2df703d6926790ce5b1bc56864dc250","modified":1497435601205},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1497435601205},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1497435601206},{"_id":"public/img/wechat.jpg","hash":"c018272bff91119300461c1ef242c317446b3a15","modified":1497435601206},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1497435601206},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1497435601206},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1497435601206},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1497435601206},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1497435601207},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1497435601208},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1497435601479},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1497435601494},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1497435601497},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1497435601497},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1497435601498},{"_id":"public/img/brand.jpg","hash":"26d227d217fb2b863a5c505e13a7401903c8a028","modified":1497435601498},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1497435601499},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1497435601499},{"_id":"public/js/main.min.js","hash":"7355f5a169c02ff32af75b95237ef34e3756e9c8","modified":1497435601516},{"_id":"public/js/search.js","hash":"c3f80dee3bab6bd4895b55b849085c8af7d1e647","modified":1497435601516},{"_id":"public/js/cloudTie/loader.js","hash":"299d58e74946a2aeb8db74d3e4b6b5adfe694e15","modified":1497435601517},{"_id":"public/js/search.min.js","hash":"c0c3d048af0d6b840f6f1dfda08911c7bfdb5dc1","modified":1497435601517},{"_id":"public/js/cloudTie/loader.min.js","hash":"e73fcd885be2c4585f154861c9969e3c955d03e3","modified":1497435601517},{"_id":"public/js/main.js","hash":"5c51b53d59d5131bfa4e9b6a0af3557ee6dc6a85","modified":1497435601517},{"_id":"public/js/embed.min.js","hash":"bf39139ceccbd38a925bc1c434f6229df27b0e7c","modified":1497435601517},{"_id":"public/js/cloudTie/mobile.min.js","hash":"859e3efb15db88cedfd18f8523ecfd21f3a22324","modified":1497435601518},{"_id":"public/js/embed.js","hash":"3ac650967aa0f74ec4d7ef5d8d168f7f199e31af","modified":1497435601518},{"_id":"public/js/cloudTie/mobile.js","hash":"67a0a31ee1e491635369b0401d629e97fccd4d94","modified":1497435601518},{"_id":"public/js/cloudTie/pc.min.js","hash":"aea28510192fb36a36bf174716a39afd1ca20240","modified":1497435601518},{"_id":"public/js/cloudTie/pc.js","hash":"25d4ae345f8122f8c7e8e48959d37523dd1e4abb","modified":1497435601518},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1497435601518},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1497435601519},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1497435601519},{"_id":"public/css/cloudTie/mobile.css","hash":"1b3dd9263c84bdc017669bbbb128574265bb8143","modified":1497435601526},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1497435601624},{"_id":"public/css/cloudTie/pc.css","hash":"5020489bb2db5335e2a151b950f3bd20d22c2b16","modified":1497435602107},{"_id":"public/css/style.css","hash":"afadb26967f3e14f7c8561fa2e96539378d8067a","modified":1497435602776},{"_id":"source/_posts/20170614094101.md","hash":"64c69dbe0131811a57f28459e0d791e341e6baed","modified":1497435866397},{"_id":"source/_drafts/Java/Jsp_Servlet/request、session、application、page之间的区别.md","hash":"64c69dbe0131811a57f28459e0d791e341e6baed","modified":1497435812339},{"_id":"source/_posts/201706121037.md","hash":"a5cdac35c8b23cbba6e02ccb7ff905e0c760f4dd","modified":1497947258393},{"_id":"source/_posts/201706140941.md","hash":"64c69dbe0131811a57f28459e0d791e341e6baed","modified":1497435866397},{"_id":"source/_posts/201706150927.md","hash":"2af0e438a83abb2d3b312dee6eecc55649700b8b","modified":1497947331319},{"_id":"public/page/2/index.html","hash":"64b58e06831f20ea1c4b5fcffce4f846fb83ed18","modified":1497947362863},{"_id":"public/categories/Java/Strtus2/index.html","hash":"57fe0ac49ccbece20ffeba841ac7555b47d277d0","modified":1497947362863},{"_id":"public/categories/Java/Servlet/index.html","hash":"7d3f02d5adf19d4479be397512e3d25c4b83854e","modified":1497947362863},{"_id":"public/archives/2017/page/2/index.html","hash":"035c4033931c26efd1b0993d69f9ce30771036d7","modified":1497947362864},{"_id":"public/archives/page/2/index.html","hash":"67140a73c8c345cf71f8cb73a240499b88dcbb9e","modified":1497947362864},{"_id":"public/archives/2017/06/page/2/index.html","hash":"d12e00047a8c8f7173e27d3b2ef5d8641fba3c5b","modified":1497947362864},{"_id":"public/tags/Http请求/index.html","hash":"2d0f0d2029b4f30ae7404f718e965297d168b5aa","modified":1497947362864},{"_id":"public/tags/Servlet/index.html","hash":"e445d1e6d271b8be2c39bfc9c642c4d3fe903593","modified":1497947362864},{"_id":"public/vanxinBlog/201706121037/index.html","hash":"5765d9c7fa8211e9c92ec6b864a12cbdfa1bc57f","modified":1497947362864},{"_id":"public/vanxinBlog/201706150927/index.html","hash":"611e86cc40d87f793895a96684d6684095f41837","modified":1497947362864},{"_id":"public/vanxinBlog/201706140941/index.html","hash":"ca63ba03610b4356a25b02c2fd797387632d50a0","modified":1497947362864}],"Category":[{"name":"前端开发","_id":"cj3wuhoe900062whqf1nawf0q"},{"name":"网站建设与开发","_id":"cj3wuhofb000c2whq4ja0jd5d"},{"name":"Hexo","parent":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhoh8000n2whq6khc67sl"},{"name":"开发工具","_id":"cj3wuhohz000w2whqe8x2caux"},{"name":"Java","_id":"cj3wuhoik00162whqxfpnuqa1"},{"name":"MarkDown","parent":"cj3wuhohz000w2whqe8x2caux","_id":"cj3wuhokf001j2whqjp1m83wb"},{"name":"Git","parent":"cj3wuhohz000w2whqe8x2caux","_id":"cj3wuhokr001n2whqb0ek6nlh"},{"name":"Struts2","parent":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuhol4001t2whqrwlb37dr"},{"name":"MVC","parent":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuholl001x2whqftqzs0se"},{"name":"Servlet","parent":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wunq6g0002mghqid0opnq2"},{"name":"Strtus2","parent":"cj3wuhoik00162whqxfpnuqa1","_id":"cj45b6ig60004rchq2a2mv85b"}],"Data":[],"Page":[{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n","source":"error.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n","date":"2017-06-07T07:29:06.931Z","updated":"2017-06-07T07:29:06.931Z","path":"error.html","title":"","comments":1,"layout":"page","_id":"cj3wuho5j00002whqxknwr02b","content":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n"},{"title":"404 Not Found","toc":false,"reward":false,"share":false,"comments":0,"_content":"\n## 暂时未开发,此为指定错误页面待开发\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found\ntoc: false\nreward: false\nshare: false\ncomments: false\npermalink: /404\n---\n\n## 暂时未开发,此为指定错误页面待开发\n","date":"2017-06-07T07:31:15.645Z","updated":"2017-06-07T07:31:15.645Z","path":"/404.html","layout":"page","_id":"cj3wuho6u00012whqqnlym221","content":"<h2 id=\"暂时未开发-此为指定错误页面待开发\"><a href=\"#暂时未开发-此为指定错误页面待开发\" class=\"headerlink\" title=\"暂时未开发,此为指定错误页面待开发\"></a>暂时未开发,此为指定错误页面待开发</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"暂时未开发-此为指定错误页面待开发\"><a href=\"#暂时未开发-此为指定错误页面待开发\" class=\"headerlink\" title=\"暂时未开发,此为指定错误页面待开发\"></a>暂时未开发,此为指定错误页面待开发</h2>"},{"title":"关于","date":"2016-01-29T00:28:45.000Z","comments":0,"reward":false,"_content":"\n## 简要说明\n>- 找个窝自己娱乐一下 , 没有太多的时间来动手设计,简单点就这样凑合使用吧\n>- 有时间再好好学习下 重新整整,将所有遇到的问题以及配置的修改好好整理记录出来\n\n## 开发者日志\n>- 2017年6月7号\n - 修复部分链接失效问题\n - 开启网易云跟帖评论功能\n - 添加请求错误404页面(待具体,做个分类导航)\n>- 2017年6月8号\n - 开启百度流量统计\n - 优化文章页面布局(越改越丑(ˇˍˇ))\n - 优化首页文章显示\n - 修复页面样式本地和远程代码不同步,修改cdn默认值\n>- 2017年6月18号\n - 修复文章详情中头部部分内容不显示\n\n\n\n## 待开发功能\n>- 首页文章置顶功能\n>- 多级分类的实现(紧急)\n>- 页面布局的修改(文章页面布局以及代码框的优化)\n>- 网易云跟帖的样式的修改\n>- 首页动态滚动的实现\n>- 阿里云上代理服务器的搭建\n","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2016-01-29 08:28:45\ncomments: false\nreward: false\n---\n\n## 简要说明\n>- 找个窝自己娱乐一下 , 没有太多的时间来动手设计,简单点就这样凑合使用吧\n>- 有时间再好好学习下 重新整整,将所有遇到的问题以及配置的修改好好整理记录出来\n\n## 开发者日志\n>- 2017年6月7号\n - 修复部分链接失效问题\n - 开启网易云跟帖评论功能\n - 添加请求错误404页面(待具体,做个分类导航)\n>- 2017年6月8号\n - 开启百度流量统计\n - 优化文章页面布局(越改越丑(ˇˍˇ))\n - 优化首页文章显示\n - 修复页面样式本地和远程代码不同步,修改cdn默认值\n>- 2017年6月18号\n - 修复文章详情中头部部分内容不显示\n\n\n\n## 待开发功能\n>- 首页文章置顶功能\n>- 多级分类的实现(紧急)\n>- 页面布局的修改(文章页面布局以及代码框的优化)\n>- 网易云跟帖的样式的修改\n>- 首页动态滚动的实现\n>- 阿里云上代理服务器的搭建\n","updated":"2017-06-14T10:12:00.486Z","path":"about/index.html","layout":"page","_id":"cj3wuhocy00032whqfl57kos4","content":"<h2 id=\"简要说明\"><a href=\"#简要说明\" class=\"headerlink\" title=\"简要说明\"></a>简要说明</h2><blockquote>\n<ul>\n<li>找个窝自己娱乐一下 , 没有太多的时间来动手设计,简单点就这样凑合使用吧</li>\n<li>有时间再好好学习下 重新整整,将所有遇到的问题以及配置的修改好好整理记录出来</li>\n</ul>\n</blockquote>\n<h2 id=\"开发者日志\"><a href=\"#开发者日志\" class=\"headerlink\" title=\"开发者日志\"></a>开发者日志</h2><blockquote>\n<ul>\n<li>2017年6月7号<ul>\n<li>修复部分链接失效问题</li>\n<li>开启网易云跟帖评论功能</li>\n<li>添加请求错误404页面(待具体,做个分类导航)</li>\n</ul>\n</li>\n<li>2017年6月8号<ul>\n<li>开启百度流量统计</li>\n<li>优化文章页面布局(越改越丑(ˇˍˇ))</li>\n<li>优化首页文章显示</li>\n<li>修复页面样式本地和远程代码不同步,修改cdn默认值</li>\n</ul>\n</li>\n<li>2017年6月18号<ul>\n<li>修复文章详情中头部部分内容不显示</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"待开发功能\"><a href=\"#待开发功能\" class=\"headerlink\" title=\"待开发功能\"></a>待开发功能</h2><blockquote>\n<ul>\n<li>首页文章置顶功能</li>\n<li>多级分类的实现(紧急)</li>\n<li>页面布局的修改(文章页面布局以及代码框的优化)</li>\n<li>网易云跟帖的样式的修改</li>\n<li>首页动态滚动的实现</li>\n<li>阿里云上代理服务器的搭建</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简要说明\"><a href=\"#简要说明\" class=\"headerlink\" title=\"简要说明\"></a>简要说明</h2><blockquote>\n<ul>\n<li>找个窝自己娱乐一下 , 没有太多的时间来动手设计,简单点就这样凑合使用吧</li>\n<li>有时间再好好学习下 重新整整,将所有遇到的问题以及配置的修改好好整理记录出来</li>\n</ul>\n</blockquote>\n<h2 id=\"开发者日志\"><a href=\"#开发者日志\" class=\"headerlink\" title=\"开发者日志\"></a>开发者日志</h2><blockquote>\n<ul>\n<li>2017年6月7号<ul>\n<li>修复部分链接失效问题</li>\n<li>开启网易云跟帖评论功能</li>\n<li>添加请求错误404页面(待具体,做个分类导航)</li>\n</ul>\n</li>\n<li>2017年6月8号<ul>\n<li>开启百度流量统计</li>\n<li>优化文章页面布局(越改越丑(ˇˍˇ))</li>\n<li>优化首页文章显示</li>\n<li>修复页面样式本地和远程代码不同步,修改cdn默认值</li>\n</ul>\n</li>\n<li>2017年6月18号<ul>\n<li>修复文章详情中头部部分内容不显示</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"待开发功能\"><a href=\"#待开发功能\" class=\"headerlink\" title=\"待开发功能\"></a>待开发功能</h2><blockquote>\n<ul>\n<li>首页文章置顶功能</li>\n<li>多级分类的实现(紧急)</li>\n<li>页面布局的修改(文章页面布局以及代码框的优化)</li>\n<li>网易云跟帖的样式的修改</li>\n<li>首页动态滚动的实现</li>\n<li>阿里云上代理服务器的搭建</li>\n</ul>\n</blockquote>\n"},{"title":"categories","date":"2017-06-06T10:06:04.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-06-06 18:06:04\nlayout: categories\n---\n","updated":"2017-06-06T10:06:34.551Z","path":"categories/index.html","comments":1,"_id":"cj3wuhoe000052whqjylev77o","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"TagCloud","date":"2017-06-06T08:22:17.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: TagCloud\ndate: 2017-06-06 16:22:17\ntype: \"tags\"\nlayout: tags\n---\n","updated":"2017-06-06T09:57:02.884Z","path":"tags/index.html","comments":1,"_id":"cj3wuhof200092whqvfbtq1ki","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hexo全局配置文件(_config.yml)详解","date":"2017-06-06T03:20:59.000Z","_content":"## _config.yml :全局配置说明\n<!-- more -->\n```\n# Site 网站相关配置说明\n<!-- 博客站点标题,显示在首页上的 -->\ntitle: VanXin`s Blog\n<!-- 博客站点副标题 -->\nsubtitle: 记录工作学习中的点点滴滴\n<!-- 博客网站相关描述 -->\ndescription: 私人小站-专注于JavaWeb开发\n<!-- 博客站点关键字,便于网络检索 -->\nkeywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub\n<!-- 站点拥有者 -->\nauthor: VanXin\n<!-- 博客站点语言选项设置 -->\nlanguage: zh-CN\nemail: wangxinat163@163.com\n<!-- 时区设置 -->\ntimezone: Asia/Shanghai\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://www.icoder.xin\nroot: /\n<!-- 文件生成的对应链接地址 -->\n# permalink: :year/:month/:day/:title/\npermalink: vanxinBlog/:title/\npermalink_defaults:\n\n# Directory 文件存放位置相关配置\n<!-- 源文件存放位置 -->\nsource_dir: source\n<!-- 公开文件存放位置 :将生成静态网站在这里 -->\npublic_dir: public\n<!-- 标记目录存放位置 -->\ntag_dir: tags\n<!-- 归档文件目录 -->\narchive_dir: archives\n<!-- 分类目录 -->\ncategory_dir: categories\n<!-- 包括代码目录 -->\ncode_dir: downloads/code\n<!-- i18n目录 -->\ni18n_dir: :lang\n<!-- 路径不能呈现 -->\nskip_render:\n\n# Writing\n<!-- 文件默认生成格式 -->\nnew_post_name: :title.md # File name of new posts\n<!-- 默认布局 :发布文件存放在_post -->\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: MMM D YYYY\n<!-- YYYY-MM-DD -->\ntime_format: HH:mm:ss\n\n# Pagination :分页\n## Set per_page to 0 to disable pagination\nper_page: 15\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n<!-- 使用主题 -->\ntheme: indigo_VanXin\n# theme: casual\nexclude_generator:\n<!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 -->\n<!-- exclude\tHexo过程将忽略文件列表下 -->\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n\n# Archives\n## 2: Enable pagination\n## 1: Disable pagination\n## 0: Fully Disable\narchive: 2\ncategory: 2\ntag: 2\n\n# Server\n## Hexo uses Connect as a server\n## You can customize the logger format as defined in\n## http://www.senchalabs.org/connect/logger.html\nport: 4000\nserver_ip: localhost\nlogger: false\nlogger_format: dev\n\n```\n","source":"_posts/201706061120.md","raw":"---\ntitle: Hexo全局配置文件(_config.yml)详解\ndate: 2017-06-06 11:20:59\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\n---\n## _config.yml :全局配置说明\n<!-- more -->\n```\n# Site 网站相关配置说明\n<!-- 博客站点标题,显示在首页上的 -->\ntitle: VanXin`s Blog\n<!-- 博客站点副标题 -->\nsubtitle: 记录工作学习中的点点滴滴\n<!-- 博客网站相关描述 -->\ndescription: 私人小站-专注于JavaWeb开发\n<!-- 博客站点关键字,便于网络检索 -->\nkeywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub\n<!-- 站点拥有者 -->\nauthor: VanXin\n<!-- 博客站点语言选项设置 -->\nlanguage: zh-CN\nemail: wangxinat163@163.com\n<!-- 时区设置 -->\ntimezone: Asia/Shanghai\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://www.icoder.xin\nroot: /\n<!-- 文件生成的对应链接地址 -->\n# permalink: :year/:month/:day/:title/\npermalink: vanxinBlog/:title/\npermalink_defaults:\n\n# Directory 文件存放位置相关配置\n<!-- 源文件存放位置 -->\nsource_dir: source\n<!-- 公开文件存放位置 :将生成静态网站在这里 -->\npublic_dir: public\n<!-- 标记目录存放位置 -->\ntag_dir: tags\n<!-- 归档文件目录 -->\narchive_dir: archives\n<!-- 分类目录 -->\ncategory_dir: categories\n<!-- 包括代码目录 -->\ncode_dir: downloads/code\n<!-- i18n目录 -->\ni18n_dir: :lang\n<!-- 路径不能呈现 -->\nskip_render:\n\n# Writing\n<!-- 文件默认生成格式 -->\nnew_post_name: :title.md # File name of new posts\n<!-- 默认布局 :发布文件存放在_post -->\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: MMM D YYYY\n<!-- YYYY-MM-DD -->\ntime_format: HH:mm:ss\n\n# Pagination :分页\n## Set per_page to 0 to disable pagination\nper_page: 15\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n<!-- 使用主题 -->\ntheme: indigo_VanXin\n# theme: casual\nexclude_generator:\n<!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 -->\n<!-- exclude\tHexo过程将忽略文件列表下 -->\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n\n# Archives\n## 2: Enable pagination\n## 1: Disable pagination\n## 0: Fully Disable\narchive: 2\ncategory: 2\ntag: 2\n\n# Server\n## Hexo uses Connect as a server\n## You can customize the logger format as defined in\n## http://www.senchalabs.org/connect/logger.html\nport: 4000\nserver_ip: localhost\nlogger: false\nlogger_format: dev\n\n```\n","slug":"201706061120","published":1,"updated":"2017-06-08T06:14:22.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoce00022whqv0ek4dyh","content":"<h2 id=\"config-yml-全局配置说明\"><a href=\"#config-yml-全局配置说明\" class=\"headerlink\" title=\"_config.yml :全局配置说明\"></a>_config.yml :全局配置说明</h2><a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Site 网站相关配置说明</div><div class=\"line\">&lt;!-- 博客站点标题,显示在首页上的 --&gt;</div><div class=\"line\">title: VanXin`s Blog</div><div class=\"line\">&lt;!-- 博客站点副标题 --&gt;</div><div class=\"line\">subtitle: 记录工作学习中的点点滴滴</div><div class=\"line\">&lt;!-- 博客网站相关描述 --&gt;</div><div class=\"line\">description: 私人小站-专注于JavaWeb开发</div><div class=\"line\">&lt;!-- 博客站点关键字,便于网络检索 --&gt;</div><div class=\"line\">keywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub</div><div class=\"line\">&lt;!-- 站点拥有者 --&gt;</div><div class=\"line\">author: VanXin</div><div class=\"line\">&lt;!-- 博客站点语言选项设置 --&gt;</div><div class=\"line\">language: zh-CN</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\">&lt;!-- 时区设置 --&gt;</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class=\"line\">url: http://www.icoder.xin</div><div class=\"line\">root: /</div><div class=\"line\">&lt;!-- 文件生成的对应链接地址 --&gt;</div><div class=\"line\"># permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink: vanxinBlog/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory 文件存放位置相关配置</div><div class=\"line\">&lt;!-- 源文件存放位置 --&gt;</div><div class=\"line\">source_dir: source</div><div class=\"line\">&lt;!-- 公开文件存放位置 :将生成静态网站在这里 --&gt;</div><div class=\"line\">public_dir: public</div><div class=\"line\">&lt;!-- 标记目录存放位置 --&gt;</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">&lt;!-- 归档文件目录 --&gt;</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">&lt;!-- 分类目录 --&gt;</div><div class=\"line\">category_dir: categories</div><div class=\"line\">&lt;!-- 包括代码目录 --&gt;</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">&lt;!-- i18n目录 --&gt;</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">&lt;!-- 路径不能呈现 --&gt;</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">&lt;!-- 文件默认生成格式 --&gt;</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">&lt;!-- 默认布局 :发布文件存放在_post --&gt;</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: false</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: MMM D YYYY</div><div class=\"line\">&lt;!-- YYYY-MM-DD --&gt;</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination :分页</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 15</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">&lt;!-- 使用主题 --&gt;</div><div class=\"line\">theme: indigo_VanXin</div><div class=\"line\"># theme: casual</div><div class=\"line\">exclude_generator:</div><div class=\"line\">&lt;!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 --&gt;</div><div class=\"line\">&lt;!-- exclude\tHexo过程将忽略文件列表下 --&gt;</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\"># Archives</div><div class=\"line\">## 2: Enable pagination</div><div class=\"line\">## 1: Disable pagination</div><div class=\"line\">## 0: Fully Disable</div><div class=\"line\">archive: 2</div><div class=\"line\">category: 2</div><div class=\"line\">tag: 2</div><div class=\"line\"></div><div class=\"line\"># Server</div><div class=\"line\">## Hexo uses Connect as a server</div><div class=\"line\">## You can customize the logger format as defined in</div><div class=\"line\">## http://www.senchalabs.org/connect/logger.html</div><div class=\"line\">port: 4000</div><div class=\"line\">server_ip: localhost</div><div class=\"line\">logger: false</div><div class=\"line\">logger_format: dev</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"config-yml-全局配置说明\"><a href=\"#config-yml-全局配置说明\" class=\"headerlink\" title=\"_config.yml :全局配置说明\"></a>_config.yml :全局配置说明</h2>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Site 网站相关配置说明</div><div class=\"line\">&lt;!-- 博客站点标题,显示在首页上的 --&gt;</div><div class=\"line\">title: VanXin`s Blog</div><div class=\"line\">&lt;!-- 博客站点副标题 --&gt;</div><div class=\"line\">subtitle: 记录工作学习中的点点滴滴</div><div class=\"line\">&lt;!-- 博客网站相关描述 --&gt;</div><div class=\"line\">description: 私人小站-专注于JavaWeb开发</div><div class=\"line\">&lt;!-- 博客站点关键字,便于网络检索 --&gt;</div><div class=\"line\">keywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub</div><div class=\"line\">&lt;!-- 站点拥有者 --&gt;</div><div class=\"line\">author: VanXin</div><div class=\"line\">&lt;!-- 博客站点语言选项设置 --&gt;</div><div class=\"line\">language: zh-CN</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\">&lt;!-- 时区设置 --&gt;</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class=\"line\">url: http://www.icoder.xin</div><div class=\"line\">root: /</div><div class=\"line\">&lt;!-- 文件生成的对应链接地址 --&gt;</div><div class=\"line\"># permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink: vanxinBlog/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory 文件存放位置相关配置</div><div class=\"line\">&lt;!-- 源文件存放位置 --&gt;</div><div class=\"line\">source_dir: source</div><div class=\"line\">&lt;!-- 公开文件存放位置 :将生成静态网站在这里 --&gt;</div><div class=\"line\">public_dir: public</div><div class=\"line\">&lt;!-- 标记目录存放位置 --&gt;</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">&lt;!-- 归档文件目录 --&gt;</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">&lt;!-- 分类目录 --&gt;</div><div class=\"line\">category_dir: categories</div><div class=\"line\">&lt;!-- 包括代码目录 --&gt;</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">&lt;!-- i18n目录 --&gt;</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">&lt;!-- 路径不能呈现 --&gt;</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">&lt;!-- 文件默认生成格式 --&gt;</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">&lt;!-- 默认布局 :发布文件存放在_post --&gt;</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: false</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: MMM D YYYY</div><div class=\"line\">&lt;!-- YYYY-MM-DD --&gt;</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination :分页</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 15</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">&lt;!-- 使用主题 --&gt;</div><div class=\"line\">theme: indigo_VanXin</div><div class=\"line\"># theme: casual</div><div class=\"line\">exclude_generator:</div><div class=\"line\">&lt;!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 --&gt;</div><div class=\"line\">&lt;!-- exclude\tHexo过程将忽略文件列表下 --&gt;</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\"># Archives</div><div class=\"line\">## 2: Enable pagination</div><div class=\"line\">## 1: Disable pagination</div><div class=\"line\">## 0: Fully Disable</div><div class=\"line\">archive: 2</div><div class=\"line\">category: 2</div><div class=\"line\">tag: 2</div><div class=\"line\"></div><div class=\"line\"># Server</div><div class=\"line\">## Hexo uses Connect as a server</div><div class=\"line\">## You can customize the logger format as defined in</div><div class=\"line\">## http://www.senchalabs.org/connect/logger.html</div><div class=\"line\">port: 4000</div><div class=\"line\">server_ip: localhost</div><div class=\"line\">logger: false</div><div class=\"line\">logger_format: dev</div></pre></td></tr></table></figure>"},{"title":"搭建个人个性化博客","date":"2017-06-06T03:18:24.000Z","_content":"\n>- 利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站\n<!-- more -->\n\n## 需要知识\n>- git的简单使用\n>- nodeJs的简单使用\n>- Hexo的了解及简单命令的使用\n\n## 开始搭建个人博客\n>- 注册Github\n>  - 注册github配置一个sshKeys->设置中的sshkeys粘贴id_rsa.pub中的内容就行\n```\n//查看本地的ssh密钥\n$ cd ~/.ssh\n$ ls\n$ cat ~/.ssh/id_rsa.pub\n//不存在则创建一个\n$ SSH Key :$ ssh-keygen -t rsa -C \"wangxinat@foxmail.com\"\n//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件\n//测试配置是否成功\n$ ssh -T git@github.com\n//查看远程仓库信息\n$ git remote [-v]\n```\n>  - 创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io\n> - 本地使用hexo搭建静态博客\n>  - 在指定文件夹使用git搭建\n```\nhexo init vanxinBlog //初始化本地仓库\ncd vanxinBlog\nnpm install //进行npm的安装\nhexo s //开启服务即可本地进行访问localhost:4000\n//接下来配置远程仓库,生成静态html文件部署到github\n'//配置全局配置文件_config.yml\ntitle: VanXin`sBlog\nsubtitle: test Hexo\ndescription: This is my first Web Blog\nauthor: VanXin\nlanguage: zh-CN\ntimezone: Asia/Shanghai\ndeploy:\n  type: git\n  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n'\nhexo g //生成静态文件\nhexo d //将本地仓库与github上关联,此处报错not found gut\n//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d\n```\n> - 至此博客搭建成功\n\n## Hexo相关配置\n详细说明见Hexo的学习\n## Git的相关使用\n详细见Git的使用说明\n","source":"_posts/201706061118.md","raw":"---\ntitle: 搭建个人个性化博客\ndate: 2017-06-06 11:18:24\ntags: \n- Hexo\n- Blog\ncategories: \n- 网站建设与开发\n---\n\n>- 利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站\n<!-- more -->\n\n## 需要知识\n>- git的简单使用\n>- nodeJs的简单使用\n>- Hexo的了解及简单命令的使用\n\n## 开始搭建个人博客\n>- 注册Github\n>  - 注册github配置一个sshKeys->设置中的sshkeys粘贴id_rsa.pub中的内容就行\n```\n//查看本地的ssh密钥\n$ cd ~/.ssh\n$ ls\n$ cat ~/.ssh/id_rsa.pub\n//不存在则创建一个\n$ SSH Key :$ ssh-keygen -t rsa -C \"wangxinat@foxmail.com\"\n//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件\n//测试配置是否成功\n$ ssh -T git@github.com\n//查看远程仓库信息\n$ git remote [-v]\n```\n>  - 创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io\n> - 本地使用hexo搭建静态博客\n>  - 在指定文件夹使用git搭建\n```\nhexo init vanxinBlog //初始化本地仓库\ncd vanxinBlog\nnpm install //进行npm的安装\nhexo s //开启服务即可本地进行访问localhost:4000\n//接下来配置远程仓库,生成静态html文件部署到github\n'//配置全局配置文件_config.yml\ntitle: VanXin`sBlog\nsubtitle: test Hexo\ndescription: This is my first Web Blog\nauthor: VanXin\nlanguage: zh-CN\ntimezone: Asia/Shanghai\ndeploy:\n  type: git\n  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n'\nhexo g //生成静态文件\nhexo d //将本地仓库与github上关联,此处报错not found gut\n//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d\n```\n> - 至此博客搭建成功\n\n## Hexo相关配置\n详细说明见Hexo的学习\n## Git的相关使用\n详细见Git的使用说明\n","slug":"201706061118","published":1,"updated":"2017-06-08T06:15:16.948Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhod100042whqjibwg86l","content":"<blockquote>\n<ul>\n<li>利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站<a id=\"more\"></a>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"需要知识\"><a href=\"#需要知识\" class=\"headerlink\" title=\"需要知识\"></a>需要知识</h2><blockquote>\n<ul>\n<li>git的简单使用</li>\n<li>nodeJs的简单使用</li>\n<li>Hexo的了解及简单命令的使用</li>\n</ul>\n</blockquote>\n<h2 id=\"开始搭建个人博客\"><a href=\"#开始搭建个人博客\" class=\"headerlink\" title=\"开始搭建个人博客\"></a>开始搭建个人博客</h2><blockquote>\n<ul>\n<li><p>注册Github</p>\n<ul>\n<li><p>注册github配置一个sshKeys-&gt;设置中的sshkeys粘贴id_rsa.pub中的内容就行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//查看本地的ssh密钥</div><div class=\"line\">$ cd ~/.ssh</div><div class=\"line\">$ ls</div><div class=\"line\">$ cat ~/.ssh/id_rsa.pub</div><div class=\"line\">//不存在则创建一个</div><div class=\"line\">$ SSH Key :$ ssh-keygen -t rsa -C &quot;wangxinat@foxmail.com&quot;</div><div class=\"line\">//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件</div><div class=\"line\">//测试配置是否成功</div><div class=\"line\">$ ssh -T git@github.com</div><div class=\"line\">//查看远程仓库信息</div><div class=\"line\">$ git remote [-v]</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io</p>\n</li>\n</ul>\n</li>\n<li><p>本地使用hexo搭建静态博客</p>\n<ul>\n<li>在指定文件夹使用git搭建<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init vanxinBlog //初始化本地仓库</div><div class=\"line\">cd vanxinBlog</div><div class=\"line\">npm install //进行npm的安装</div><div class=\"line\">hexo s //开启服务即可本地进行访问localhost:4000</div><div class=\"line\">//接下来配置远程仓库,生成静态html文件部署到github</div><div class=\"line\">&apos;//配置全局配置文件_config.yml</div><div class=\"line\">title: VanXin`sBlog</div><div class=\"line\">subtitle: test Hexo</div><div class=\"line\">description: This is my first Web Blog</div><div class=\"line\">author: VanXin</div><div class=\"line\">language: zh-CN</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">&apos;</div><div class=\"line\">hexo g //生成静态文件</div><div class=\"line\">hexo d //将本地仓库与github上关联,此处报错not found gut</div><div class=\"line\">//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>至此博客搭建成功</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"Hexo相关配置\"><a href=\"#Hexo相关配置\" class=\"headerlink\" title=\"Hexo相关配置\"></a>Hexo相关配置</h2><p>详细说明见Hexo的学习</p>\n<h2 id=\"Git的相关使用\"><a href=\"#Git的相关使用\" class=\"headerlink\" title=\"Git的相关使用\"></a>Git的相关使用</h2><p>详细见Git的使用说明</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<ul>\n<li>利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站","more":"</li>\n</ul>\n</blockquote>\n<h2 id=\"需要知识\"><a href=\"#需要知识\" class=\"headerlink\" title=\"需要知识\"></a>需要知识</h2><blockquote>\n<ul>\n<li>git的简单使用</li>\n<li>nodeJs的简单使用</li>\n<li>Hexo的了解及简单命令的使用</li>\n</ul>\n</blockquote>\n<h2 id=\"开始搭建个人博客\"><a href=\"#开始搭建个人博客\" class=\"headerlink\" title=\"开始搭建个人博客\"></a>开始搭建个人博客</h2><blockquote>\n<ul>\n<li><p>注册Github</p>\n<ul>\n<li><p>注册github配置一个sshKeys-&gt;设置中的sshkeys粘贴id_rsa.pub中的内容就行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//查看本地的ssh密钥</div><div class=\"line\">$ cd ~/.ssh</div><div class=\"line\">$ ls</div><div class=\"line\">$ cat ~/.ssh/id_rsa.pub</div><div class=\"line\">//不存在则创建一个</div><div class=\"line\">$ SSH Key :$ ssh-keygen -t rsa -C &quot;wangxinat@foxmail.com&quot;</div><div class=\"line\">//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件</div><div class=\"line\">//测试配置是否成功</div><div class=\"line\">$ ssh -T git@github.com</div><div class=\"line\">//查看远程仓库信息</div><div class=\"line\">$ git remote [-v]</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io</p>\n</li>\n</ul>\n</li>\n<li><p>本地使用hexo搭建静态博客</p>\n<ul>\n<li>在指定文件夹使用git搭建<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init vanxinBlog //初始化本地仓库</div><div class=\"line\">cd vanxinBlog</div><div class=\"line\">npm install //进行npm的安装</div><div class=\"line\">hexo s //开启服务即可本地进行访问localhost:4000</div><div class=\"line\">//接下来配置远程仓库,生成静态html文件部署到github</div><div class=\"line\">&apos;//配置全局配置文件_config.yml</div><div class=\"line\">title: VanXin`sBlog</div><div class=\"line\">subtitle: test Hexo</div><div class=\"line\">description: This is my first Web Blog</div><div class=\"line\">author: VanXin</div><div class=\"line\">language: zh-CN</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">&apos;</div><div class=\"line\">hexo g //生成静态文件</div><div class=\"line\">hexo d //将本地仓库与github上关联,此处报错not found gut</div><div class=\"line\">//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>至此博客搭建成功</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"Hexo相关配置\"><a href=\"#Hexo相关配置\" class=\"headerlink\" title=\"Hexo相关配置\"></a>Hexo相关配置</h2><p>详细说明见Hexo的学习</p>\n<h2 id=\"Git的相关使用\"><a href=\"#Git的相关使用\" class=\"headerlink\" title=\"Git的相关使用\"></a>Git的相关使用</h2><p>详细见Git的使用说明</p>"},{"title":"Hexo中主题配置文件(_config.yml)详解","date":"2017-06-06T05:31:30.000Z","_content":"# 主题相关配置说明 :以indigo主题为例\n<!-- more -->\n>- 供参考,有时间再修改\n\n```\nmenu:\n  home:\n    text: 主页\n    url: /\n  archives:\n    text: 归档\n    url: /archives\n  tags:\n    text: 标签\n    url: /tags\n  th-list:\n    text: 分类\n    url: /categories\n  github:\n    url: https://github.com/wangxinat\n    target: _blank\n  weibo:\n    text: 微博\n    url: http://www.weibo.com/wangxinat\n    target: _blank\n  link:\n    text: other\n    url: /custom\n\n# 你的头像url\navatar: /img/avatar.jpg\n# avatar link 点击头像链接\navatar_link: /\n# 头像背景图\nbrand: /img/brand.jpg\n# favicon\nfavicon: /img/favicon.ico\n\n# email\nemail: wangxinat163@163.com\n\n# 设置 Android L Chrome 浏览器状态栏颜色\ncolor: '#3F51B5'\n\n# 页面标题\ntags_title: Tags\narchives_title: Archives\ncategories_title: Categories\n\n# 文章截断\nexcerpt_render: false\nexcerpt_length: 200\nexcerpt_link: 阅读全文...\nmathjax: false\narchive_yearly: true\n\n# 是否显示文章最后更新时间\nshow_last_updated: true\n\n# 是否开启分享\nshare: true\n\n# 是否开启打赏，关闭 reward: false\nreward:\n  title: 感谢打赏~\n  wechat: /img/wechat.jpg     #微信，关闭设为 false\n  alipay: /img/alipay.jpg     #支付宝，关闭设为 false\n\n# 是否开启搜索\nsearch: true\n\n# 是否大屏幕下文章页隐藏导航\nhideMenu: true\n\n# 是否开启toc\n# toc: false\ntoc:\n  list_number: true  # 是否显示数字排序\n\n# 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io\npostMessage: <a href=\"<%- url_for(page.path).replace(/index\\.html$/, '') %>\" target=\"_self\" rel=\"external\"><%- page.permalink.replace(/index\\.html$/, '') %>待开发</a>\n\n# 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447\ncnzz: false\n\n# 百度统计，如要开启，改为你的 key\nbaidu_tongji: false\n\n# 腾讯分析，如要开启，输入站点id\ntajs: false\n\n# google\ngoogle_analytics: false\ngoogle_site_verification: false\n\n# less\nless:\n  compress: true\n  paths:\n    - source/css/style.less\n\n# 以下评论插件开启一个即可\n# 是否开启多说评论，填写你在多说创建的站点二级域名\nduoshuo: false\n# 是否开启多说评论计数（该服务不稳定）\nduoshuo_count: false\n# 使用 disqus 时关闭多说评论\ndisqus_shortname: false\n# 是否开启友言评论, 填写友言用户id\nuyan_uid: 2135775\n# 是否开启网易云跟帖， 填写app sdk中的app key\nwangyi_ygt: false\n# 是否使用 gitment，https://github.com/imsun/gitment\ngitment: false\n# gitment:\n#   owner:\n#   repo:\n#   client_id:\n#   client_secret:\n\n# 规范网址\n# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径\n# https://support.google.com/webmasters/answer/139066\n# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net\ncanonical: false\n\n# 版权起始年份\nsince_year: 2017\n\n# 用户页面中作者相关的描述性文字，如不需要设为 false\nabout: 用户页面中作者相关的描述性文字，如不需要设为 false\n\n# “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/\nvisit_counter:\n  site_uv: 站点总访客数：\n  site_pv: 站点总访问量：\n\n# 动态定义title\ntitle_change:\n  normal: (つェ⊂)HaHa!真棒!\n  leave: Welcome Come Here\n\n# 设置为 true 发布后将使用 unpkg cdn\ncdn: true\n\n# 设置为 true 将使用 lightbox render 图片\nlightbox: true\n```\n","source":"_posts/201706061331.md","raw":"---\ntitle: Hexo中主题配置文件(_config.yml)详解\ndate: 2017-06-06 13:31:30\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\n---\n# 主题相关配置说明 :以indigo主题为例\n<!-- more -->\n>- 供参考,有时间再修改\n\n```\nmenu:\n  home:\n    text: 主页\n    url: /\n  archives:\n    text: 归档\n    url: /archives\n  tags:\n    text: 标签\n    url: /tags\n  th-list:\n    text: 分类\n    url: /categories\n  github:\n    url: https://github.com/wangxinat\n    target: _blank\n  weibo:\n    text: 微博\n    url: http://www.weibo.com/wangxinat\n    target: _blank\n  link:\n    text: other\n    url: /custom\n\n# 你的头像url\navatar: /img/avatar.jpg\n# avatar link 点击头像链接\navatar_link: /\n# 头像背景图\nbrand: /img/brand.jpg\n# favicon\nfavicon: /img/favicon.ico\n\n# email\nemail: wangxinat163@163.com\n\n# 设置 Android L Chrome 浏览器状态栏颜色\ncolor: '#3F51B5'\n\n# 页面标题\ntags_title: Tags\narchives_title: Archives\ncategories_title: Categories\n\n# 文章截断\nexcerpt_render: false\nexcerpt_length: 200\nexcerpt_link: 阅读全文...\nmathjax: false\narchive_yearly: true\n\n# 是否显示文章最后更新时间\nshow_last_updated: true\n\n# 是否开启分享\nshare: true\n\n# 是否开启打赏，关闭 reward: false\nreward:\n  title: 感谢打赏~\n  wechat: /img/wechat.jpg     #微信，关闭设为 false\n  alipay: /img/alipay.jpg     #支付宝，关闭设为 false\n\n# 是否开启搜索\nsearch: true\n\n# 是否大屏幕下文章页隐藏导航\nhideMenu: true\n\n# 是否开启toc\n# toc: false\ntoc:\n  list_number: true  # 是否显示数字排序\n\n# 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io\npostMessage: <a href=\"<%- url_for(page.path).replace(/index\\.html$/, '') %>\" target=\"_self\" rel=\"external\"><%- page.permalink.replace(/index\\.html$/, '') %>待开发</a>\n\n# 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447\ncnzz: false\n\n# 百度统计，如要开启，改为你的 key\nbaidu_tongji: false\n\n# 腾讯分析，如要开启，输入站点id\ntajs: false\n\n# google\ngoogle_analytics: false\ngoogle_site_verification: false\n\n# less\nless:\n  compress: true\n  paths:\n    - source/css/style.less\n\n# 以下评论插件开启一个即可\n# 是否开启多说评论，填写你在多说创建的站点二级域名\nduoshuo: false\n# 是否开启多说评论计数（该服务不稳定）\nduoshuo_count: false\n# 使用 disqus 时关闭多说评论\ndisqus_shortname: false\n# 是否开启友言评论, 填写友言用户id\nuyan_uid: 2135775\n# 是否开启网易云跟帖， 填写app sdk中的app key\nwangyi_ygt: false\n# 是否使用 gitment，https://github.com/imsun/gitment\ngitment: false\n# gitment:\n#   owner:\n#   repo:\n#   client_id:\n#   client_secret:\n\n# 规范网址\n# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径\n# https://support.google.com/webmasters/answer/139066\n# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net\ncanonical: false\n\n# 版权起始年份\nsince_year: 2017\n\n# 用户页面中作者相关的描述性文字，如不需要设为 false\nabout: 用户页面中作者相关的描述性文字，如不需要设为 false\n\n# “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/\nvisit_counter:\n  site_uv: 站点总访客数：\n  site_pv: 站点总访问量：\n\n# 动态定义title\ntitle_change:\n  normal: (つェ⊂)HaHa!真棒!\n  leave: Welcome Come Here\n\n# 设置为 true 发布后将使用 unpkg cdn\ncdn: true\n\n# 设置为 true 将使用 lightbox render 图片\nlightbox: true\n```\n","slug":"201706061331","published":1,"updated":"2017-06-08T06:15:05.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoem00082whqc1xthyyb","content":"<h1 id=\"主题相关配置说明-以indigo主题为例\"><a href=\"#主题相关配置说明-以indigo主题为例\" class=\"headerlink\" title=\"主题相关配置说明 :以indigo主题为例\"></a>主题相关配置说明 :以indigo主题为例</h1><a id=\"more\"></a>\n<blockquote>\n<ul>\n<li>供参考,有时间再修改</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:</div><div class=\"line\">  home:</div><div class=\"line\">    text: 主页</div><div class=\"line\">    url: /</div><div class=\"line\">  archives:</div><div class=\"line\">    text: 归档</div><div class=\"line\">    url: /archives</div><div class=\"line\">  tags:</div><div class=\"line\">    text: 标签</div><div class=\"line\">    url: /tags</div><div class=\"line\">  th-list:</div><div class=\"line\">    text: 分类</div><div class=\"line\">    url: /categories</div><div class=\"line\">  github:</div><div class=\"line\">    url: https://github.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  weibo:</div><div class=\"line\">    text: 微博</div><div class=\"line\">    url: http://www.weibo.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  link:</div><div class=\"line\">    text: other</div><div class=\"line\">    url: /custom</div><div class=\"line\"></div><div class=\"line\"># 你的头像url</div><div class=\"line\">avatar: /img/avatar.jpg</div><div class=\"line\"># avatar link 点击头像链接</div><div class=\"line\">avatar_link: /</div><div class=\"line\"># 头像背景图</div><div class=\"line\">brand: /img/brand.jpg</div><div class=\"line\"># favicon</div><div class=\"line\">favicon: /img/favicon.ico</div><div class=\"line\"></div><div class=\"line\"># email</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\"></div><div class=\"line\"># 设置 Android L Chrome 浏览器状态栏颜色</div><div class=\"line\">color: &apos;#3F51B5&apos;</div><div class=\"line\"></div><div class=\"line\"># 页面标题</div><div class=\"line\">tags_title: Tags</div><div class=\"line\">archives_title: Archives</div><div class=\"line\">categories_title: Categories</div><div class=\"line\"></div><div class=\"line\"># 文章截断</div><div class=\"line\">excerpt_render: false</div><div class=\"line\">excerpt_length: 200</div><div class=\"line\">excerpt_link: 阅读全文...</div><div class=\"line\">mathjax: false</div><div class=\"line\">archive_yearly: true</div><div class=\"line\"></div><div class=\"line\"># 是否显示文章最后更新时间</div><div class=\"line\">show_last_updated: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启分享</div><div class=\"line\">share: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启打赏，关闭 reward: false</div><div class=\"line\">reward:</div><div class=\"line\">  title: 感谢打赏~</div><div class=\"line\">  wechat: /img/wechat.jpg     #微信，关闭设为 false</div><div class=\"line\">  alipay: /img/alipay.jpg     #支付宝，关闭设为 false</div><div class=\"line\"></div><div class=\"line\"># 是否开启搜索</div><div class=\"line\">search: true</div><div class=\"line\"></div><div class=\"line\"># 是否大屏幕下文章页隐藏导航</div><div class=\"line\">hideMenu: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启toc</div><div class=\"line\"># toc: false</div><div class=\"line\">toc:</div><div class=\"line\">  list_number: true  # 是否显示数字排序</div><div class=\"line\"></div><div class=\"line\"># 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io</div><div class=\"line\">postMessage: &lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_self&quot; rel=&quot;external&quot;&gt;&lt;%- page.permalink.replace(/index\\.html$/, &apos;&apos;) %&gt;待开发&lt;/a&gt;</div><div class=\"line\"></div><div class=\"line\"># 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447</div><div class=\"line\">cnzz: false</div><div class=\"line\"></div><div class=\"line\"># 百度统计，如要开启，改为你的 key</div><div class=\"line\">baidu_tongji: false</div><div class=\"line\"></div><div class=\"line\"># 腾讯分析，如要开启，输入站点id</div><div class=\"line\">tajs: false</div><div class=\"line\"></div><div class=\"line\"># google</div><div class=\"line\">google_analytics: false</div><div class=\"line\">google_site_verification: false</div><div class=\"line\"></div><div class=\"line\"># less</div><div class=\"line\">less:</div><div class=\"line\">  compress: true</div><div class=\"line\">  paths:</div><div class=\"line\">    - source/css/style.less</div><div class=\"line\"></div><div class=\"line\"># 以下评论插件开启一个即可</div><div class=\"line\"># 是否开启多说评论，填写你在多说创建的站点二级域名</div><div class=\"line\">duoshuo: false</div><div class=\"line\"># 是否开启多说评论计数（该服务不稳定）</div><div class=\"line\">duoshuo_count: false</div><div class=\"line\"># 使用 disqus 时关闭多说评论</div><div class=\"line\">disqus_shortname: false</div><div class=\"line\"># 是否开启友言评论, 填写友言用户id</div><div class=\"line\">uyan_uid: 2135775</div><div class=\"line\"># 是否开启网易云跟帖， 填写app sdk中的app key</div><div class=\"line\">wangyi_ygt: false</div><div class=\"line\"># 是否使用 gitment，https://github.com/imsun/gitment</div><div class=\"line\">gitment: false</div><div class=\"line\"># gitment:</div><div class=\"line\">#   owner:</div><div class=\"line\">#   repo:</div><div class=\"line\">#   client_id:</div><div class=\"line\">#   client_secret:</div><div class=\"line\"></div><div class=\"line\"># 规范网址</div><div class=\"line\"># 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径</div><div class=\"line\"># https://support.google.com/webmasters/answer/139066</div><div class=\"line\"># 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net</div><div class=\"line\">canonical: false</div><div class=\"line\"></div><div class=\"line\"># 版权起始年份</div><div class=\"line\">since_year: 2017</div><div class=\"line\"></div><div class=\"line\"># 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\">about: 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\"></div><div class=\"line\"># “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/</div><div class=\"line\">visit_counter:</div><div class=\"line\">  site_uv: 站点总访客数：</div><div class=\"line\">  site_pv: 站点总访问量：</div><div class=\"line\"></div><div class=\"line\"># 动态定义title</div><div class=\"line\">title_change:</div><div class=\"line\">  normal: (つェ⊂)HaHa!真棒!</div><div class=\"line\">  leave: Welcome Come Here</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 发布后将使用 unpkg cdn</div><div class=\"line\">cdn: true</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 将使用 lightbox render 图片</div><div class=\"line\">lightbox: true</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"主题相关配置说明-以indigo主题为例\"><a href=\"#主题相关配置说明-以indigo主题为例\" class=\"headerlink\" title=\"主题相关配置说明 :以indigo主题为例\"></a>主题相关配置说明 :以indigo主题为例</h1>","more":"<blockquote>\n<ul>\n<li>供参考,有时间再修改</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:</div><div class=\"line\">  home:</div><div class=\"line\">    text: 主页</div><div class=\"line\">    url: /</div><div class=\"line\">  archives:</div><div class=\"line\">    text: 归档</div><div class=\"line\">    url: /archives</div><div class=\"line\">  tags:</div><div class=\"line\">    text: 标签</div><div class=\"line\">    url: /tags</div><div class=\"line\">  th-list:</div><div class=\"line\">    text: 分类</div><div class=\"line\">    url: /categories</div><div class=\"line\">  github:</div><div class=\"line\">    url: https://github.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  weibo:</div><div class=\"line\">    text: 微博</div><div class=\"line\">    url: http://www.weibo.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  link:</div><div class=\"line\">    text: other</div><div class=\"line\">    url: /custom</div><div class=\"line\"></div><div class=\"line\"># 你的头像url</div><div class=\"line\">avatar: /img/avatar.jpg</div><div class=\"line\"># avatar link 点击头像链接</div><div class=\"line\">avatar_link: /</div><div class=\"line\"># 头像背景图</div><div class=\"line\">brand: /img/brand.jpg</div><div class=\"line\"># favicon</div><div class=\"line\">favicon: /img/favicon.ico</div><div class=\"line\"></div><div class=\"line\"># email</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\"></div><div class=\"line\"># 设置 Android L Chrome 浏览器状态栏颜色</div><div class=\"line\">color: &apos;#3F51B5&apos;</div><div class=\"line\"></div><div class=\"line\"># 页面标题</div><div class=\"line\">tags_title: Tags</div><div class=\"line\">archives_title: Archives</div><div class=\"line\">categories_title: Categories</div><div class=\"line\"></div><div class=\"line\"># 文章截断</div><div class=\"line\">excerpt_render: false</div><div class=\"line\">excerpt_length: 200</div><div class=\"line\">excerpt_link: 阅读全文...</div><div class=\"line\">mathjax: false</div><div class=\"line\">archive_yearly: true</div><div class=\"line\"></div><div class=\"line\"># 是否显示文章最后更新时间</div><div class=\"line\">show_last_updated: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启分享</div><div class=\"line\">share: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启打赏，关闭 reward: false</div><div class=\"line\">reward:</div><div class=\"line\">  title: 感谢打赏~</div><div class=\"line\">  wechat: /img/wechat.jpg     #微信，关闭设为 false</div><div class=\"line\">  alipay: /img/alipay.jpg     #支付宝，关闭设为 false</div><div class=\"line\"></div><div class=\"line\"># 是否开启搜索</div><div class=\"line\">search: true</div><div class=\"line\"></div><div class=\"line\"># 是否大屏幕下文章页隐藏导航</div><div class=\"line\">hideMenu: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启toc</div><div class=\"line\"># toc: false</div><div class=\"line\">toc:</div><div class=\"line\">  list_number: true  # 是否显示数字排序</div><div class=\"line\"></div><div class=\"line\"># 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io</div><div class=\"line\">postMessage: &lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_self&quot; rel=&quot;external&quot;&gt;&lt;%- page.permalink.replace(/index\\.html$/, &apos;&apos;) %&gt;待开发&lt;/a&gt;</div><div class=\"line\"></div><div class=\"line\"># 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447</div><div class=\"line\">cnzz: false</div><div class=\"line\"></div><div class=\"line\"># 百度统计，如要开启，改为你的 key</div><div class=\"line\">baidu_tongji: false</div><div class=\"line\"></div><div class=\"line\"># 腾讯分析，如要开启，输入站点id</div><div class=\"line\">tajs: false</div><div class=\"line\"></div><div class=\"line\"># google</div><div class=\"line\">google_analytics: false</div><div class=\"line\">google_site_verification: false</div><div class=\"line\"></div><div class=\"line\"># less</div><div class=\"line\">less:</div><div class=\"line\">  compress: true</div><div class=\"line\">  paths:</div><div class=\"line\">    - source/css/style.less</div><div class=\"line\"></div><div class=\"line\"># 以下评论插件开启一个即可</div><div class=\"line\"># 是否开启多说评论，填写你在多说创建的站点二级域名</div><div class=\"line\">duoshuo: false</div><div class=\"line\"># 是否开启多说评论计数（该服务不稳定）</div><div class=\"line\">duoshuo_count: false</div><div class=\"line\"># 使用 disqus 时关闭多说评论</div><div class=\"line\">disqus_shortname: false</div><div class=\"line\"># 是否开启友言评论, 填写友言用户id</div><div class=\"line\">uyan_uid: 2135775</div><div class=\"line\"># 是否开启网易云跟帖， 填写app sdk中的app key</div><div class=\"line\">wangyi_ygt: false</div><div class=\"line\"># 是否使用 gitment，https://github.com/imsun/gitment</div><div class=\"line\">gitment: false</div><div class=\"line\"># gitment:</div><div class=\"line\">#   owner:</div><div class=\"line\">#   repo:</div><div class=\"line\">#   client_id:</div><div class=\"line\">#   client_secret:</div><div class=\"line\"></div><div class=\"line\"># 规范网址</div><div class=\"line\"># 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径</div><div class=\"line\"># https://support.google.com/webmasters/answer/139066</div><div class=\"line\"># 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net</div><div class=\"line\">canonical: false</div><div class=\"line\"></div><div class=\"line\"># 版权起始年份</div><div class=\"line\">since_year: 2017</div><div class=\"line\"></div><div class=\"line\"># 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\">about: 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\"></div><div class=\"line\"># “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/</div><div class=\"line\">visit_counter:</div><div class=\"line\">  site_uv: 站点总访客数：</div><div class=\"line\">  site_pv: 站点总访问量：</div><div class=\"line\"></div><div class=\"line\"># 动态定义title</div><div class=\"line\">title_change:</div><div class=\"line\">  normal: (つェ⊂)HaHa!真棒!</div><div class=\"line\">  leave: Welcome Come Here</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 发布后将使用 unpkg cdn</div><div class=\"line\">cdn: true</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 将使用 lightbox render 图片</div><div class=\"line\">lightbox: true</div></pre></td></tr></table></figure>"},{"title":"Hexo帮助文档-官翻","date":"2017-06-06T07:12:34.000Z","keywords":"Hexo, Blog","description":"记录Hexo的学习以及使用中的问题","_content":">- 记录Hexo的学习以及使用中的问题\n<!-- more -->\n\n# 开始使用\n\n## 概述\n\n### 什么是Hexo?\n- Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n\n### Hexo的安装\n- 安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题\n\n#### 安装前提\n- 安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：\n>- [Node.js](http://www.icoder.xin \"Node.js的学习使用\")\n>- [Git](http://www.icoder.xin \"Git的学习使用\")\n- 在gitbash中使用使用 npm 即可完成 Hexo 的安装\n>- $ npm install -g hexo-cli\n\n## 建站\n- 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n- 新建完成后，指定文件夹的目录如下：\n```\n.\n├── _config.yml ->全局配置文件\n├── package.json\n├── scaffolds ->模板文件夹\n├── source ->源文件存放处\n|   ├── _drafts ->草稿\n|   └── _posts ->正式发布文件\n└── themes ->主题存放处\n```\n\n### 全局配置文件\n- [_config.yml](http://www.icoderxin \"Hexo的全局配置文件\") :网站的配置信息，您可以在此配置大部分的参数\n\n### 应用程序信息\n- package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除\n```\npackage.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### 模板文件夹\n- 模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n- Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改\n\n### 资源文件夹\n### 主题文件夹\n","source":"_posts/201706061512.md","raw":"---\ntitle: Hexo帮助文档-官翻\ndate: 2017-06-06 15:12:34\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\nkeywords: Hexo, Blog\ndescription: 记录Hexo的学习以及使用中的问题\n---\n>- 记录Hexo的学习以及使用中的问题\n<!-- more -->\n\n# 开始使用\n\n## 概述\n\n### 什么是Hexo?\n- Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n\n### Hexo的安装\n- 安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题\n\n#### 安装前提\n- 安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：\n>- [Node.js](http://www.icoder.xin \"Node.js的学习使用\")\n>- [Git](http://www.icoder.xin \"Git的学习使用\")\n- 在gitbash中使用使用 npm 即可完成 Hexo 的安装\n>- $ npm install -g hexo-cli\n\n## 建站\n- 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n- 新建完成后，指定文件夹的目录如下：\n```\n.\n├── _config.yml ->全局配置文件\n├── package.json\n├── scaffolds ->模板文件夹\n├── source ->源文件存放处\n|   ├── _drafts ->草稿\n|   └── _posts ->正式发布文件\n└── themes ->主题存放处\n```\n\n### 全局配置文件\n- [_config.yml](http://www.icoderxin \"Hexo的全局配置文件\") :网站的配置信息，您可以在此配置大部分的参数\n\n### 应用程序信息\n- package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除\n```\npackage.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### 模板文件夹\n- 模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n- Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改\n\n### 资源文件夹\n### 主题文件夹\n","slug":"201706061512","published":1,"updated":"2017-06-08T06:12:56.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhof5000a2whq8e975fc2","content":"<blockquote>\n<ul>\n<li>记录Hexo的学习以及使用中的问题<a id=\"more\"></a>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><h3 id=\"什么是Hexo\"><a href=\"#什么是Hexo\" class=\"headerlink\" title=\"什么是Hexo?\"></a>什么是Hexo?</h3><ul>\n<li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</li>\n</ul>\n<h3 id=\"Hexo的安装\"><a href=\"#Hexo的安装\" class=\"headerlink\" title=\"Hexo的安装\"></a>Hexo的安装</h3><ul>\n<li>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题</li>\n</ul>\n<h4 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h4><ul>\n<li>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：<blockquote>\n<ul>\n<li><a href=\"http://www.icoder.xin\" title=\"Node.js的学习使用\">Node.js</a></li>\n<li><a href=\"http://www.icoder.xin\" title=\"Git的学习使用\">Git</a></li>\n</ul>\n</blockquote>\n</li>\n<li>在gitbash中使用使用 npm 即可完成 Hexo 的安装<blockquote>\n<ul>\n<li>$ npm install -g hexo-cli</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><ul>\n<li><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ cd &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml -&gt;全局配置文件</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds -&gt;模板文件夹</div><div class=\"line\">├── source -&gt;源文件存放处</div><div class=\"line\">|   ├── _drafts -&gt;草稿</div><div class=\"line\">|   └── _posts -&gt;正式发布文件</div><div class=\"line\">└── themes -&gt;主题存放处</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"全局配置文件\"><a href=\"#全局配置文件\" class=\"headerlink\" title=\"全局配置文件\"></a>全局配置文件</h3><ul>\n<li><a href=\"http://www.icoderxin\" title=\"Hexo的全局配置文件\" target=\"_blank\" rel=\"external\">_config.yml</a> :网站的配置信息，您可以在此配置大部分的参数</li>\n</ul>\n<h3 id=\"应用程序信息\"><a href=\"#应用程序信息\" class=\"headerlink\" title=\"应用程序信息\"></a>应用程序信息</h3><ul>\n<li>package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">package.json</div><div class=\"line\">&#123;</div><div class=\"line\">  &quot;name&quot;: &quot;hexo-site&quot;,</div><div class=\"line\">  &quot;version&quot;: &quot;0.0.0&quot;,</div><div class=\"line\">  &quot;private&quot;: true,</div><div class=\"line\">  &quot;hexo&quot;: &#123;</div><div class=\"line\">    &quot;version&quot;: &quot;&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;hexo&quot;: &quot;^3.0.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-archive&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-category&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-index&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-tag&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-stylus&quot;: &quot;^0.2.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-marked&quot;: &quot;^0.2.4&quot;,</div><div class=\"line\">    &quot;hexo-server&quot;: &quot;^0.1.2&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"模板文件夹\"><a href=\"#模板文件夹\" class=\"headerlink\" title=\"模板文件夹\"></a>模板文件夹</h3><ul>\n<li>模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。</li>\n<li>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改</li>\n</ul>\n<h3 id=\"资源文件夹\"><a href=\"#资源文件夹\" class=\"headerlink\" title=\"资源文件夹\"></a>资源文件夹</h3><h3 id=\"主题文件夹\"><a href=\"#主题文件夹\" class=\"headerlink\" title=\"主题文件夹\"></a>主题文件夹</h3>","site":{"data":{}},"excerpt":"<blockquote>\n<ul>\n<li>记录Hexo的学习以及使用中的问题","more":"</li>\n</ul>\n</blockquote>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><h3 id=\"什么是Hexo\"><a href=\"#什么是Hexo\" class=\"headerlink\" title=\"什么是Hexo?\"></a>什么是Hexo?</h3><ul>\n<li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</li>\n</ul>\n<h3 id=\"Hexo的安装\"><a href=\"#Hexo的安装\" class=\"headerlink\" title=\"Hexo的安装\"></a>Hexo的安装</h3><ul>\n<li>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题</li>\n</ul>\n<h4 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h4><ul>\n<li>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：<blockquote>\n<ul>\n<li><a href=\"http://www.icoder.xin\" title=\"Node.js的学习使用\">Node.js</a></li>\n<li><a href=\"http://www.icoder.xin\" title=\"Git的学习使用\">Git</a></li>\n</ul>\n</blockquote>\n</li>\n<li>在gitbash中使用使用 npm 即可完成 Hexo 的安装<blockquote>\n<ul>\n<li>$ npm install -g hexo-cli</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><ul>\n<li><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ cd &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml -&gt;全局配置文件</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds -&gt;模板文件夹</div><div class=\"line\">├── source -&gt;源文件存放处</div><div class=\"line\">|   ├── _drafts -&gt;草稿</div><div class=\"line\">|   └── _posts -&gt;正式发布文件</div><div class=\"line\">└── themes -&gt;主题存放处</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"全局配置文件\"><a href=\"#全局配置文件\" class=\"headerlink\" title=\"全局配置文件\"></a>全局配置文件</h3><ul>\n<li><a href=\"http://www.icoderxin\" title=\"Hexo的全局配置文件\" target=\"_blank\" rel=\"external\">_config.yml</a> :网站的配置信息，您可以在此配置大部分的参数</li>\n</ul>\n<h3 id=\"应用程序信息\"><a href=\"#应用程序信息\" class=\"headerlink\" title=\"应用程序信息\"></a>应用程序信息</h3><ul>\n<li>package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">package.json</div><div class=\"line\">&#123;</div><div class=\"line\">  &quot;name&quot;: &quot;hexo-site&quot;,</div><div class=\"line\">  &quot;version&quot;: &quot;0.0.0&quot;,</div><div class=\"line\">  &quot;private&quot;: true,</div><div class=\"line\">  &quot;hexo&quot;: &#123;</div><div class=\"line\">    &quot;version&quot;: &quot;&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;hexo&quot;: &quot;^3.0.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-archive&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-category&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-index&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-tag&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-stylus&quot;: &quot;^0.2.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-marked&quot;: &quot;^0.2.4&quot;,</div><div class=\"line\">    &quot;hexo-server&quot;: &quot;^0.1.2&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"模板文件夹\"><a href=\"#模板文件夹\" class=\"headerlink\" title=\"模板文件夹\"></a>模板文件夹</h3><ul>\n<li>模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。</li>\n<li>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改</li>\n</ul>\n<h3 id=\"资源文件夹\"><a href=\"#资源文件夹\" class=\"headerlink\" title=\"资源文件夹\"></a>资源文件夹</h3><h3 id=\"主题文件夹\"><a href=\"#主题文件夹\" class=\"headerlink\" title=\"主题文件夹\"></a>主题文件夹</h3>"},{"title":"MarkDown的语法使用说明","keywords":"Blog,txtEdit","date":"2017-06-07T07:32:29.000Z","description":"记录MarkDown在使用过程中常用的语法","_content":"记录MarkDown在使用过程中常用的语法\n<!-- more -->\n>- 插入图片 :!{}(http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[]\n>- 插入链接 :{VanXin}(http://www.icoder.xin \"悬浮说明\")把{}改为[]\n","source":"_posts/201706071532.md","raw":"---\ntitle: MarkDown的语法使用说明\ncategories: \n- 开发工具\n- MarkDown\nkeywords: 'Blog,txtEdit'\ndate: 2017-06-07 15:32:29\ntags: \n- MarkDown\n- 文本编辑\ndescription: 记录MarkDown在使用过程中常用的语法\n---\n记录MarkDown在使用过程中常用的语法\n<!-- more -->\n>- 插入图片 :!{}(http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[]\n>- 插入链接 :{VanXin}(http://www.icoder.xin \"悬浮说明\")把{}改为[]\n","slug":"201706071532","published":1,"updated":"2017-06-08T06:11:15.934Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhof7000b2whqmz966deu","content":"<p>记录MarkDown在使用过程中常用的语法<br><a id=\"more\"></a></p>\n<blockquote>\n<ul>\n<li>插入图片 :!{}(<a href=\"http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[\" target=\"_blank\" rel=\"external\">http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[</a>]</li>\n<li>插入链接 :{VanXin}(<a href=\"http://www.icoder.xin\">http://www.icoder.xin</a> “悬浮说明”)把{}改为[]</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>记录MarkDown在使用过程中常用的语法<br>","more":"</p>\n<blockquote>\n<ul>\n<li>插入图片 :!{}(<a href=\"http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[\" target=\"_blank\" rel=\"external\">http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[</a>]</li>\n<li>插入链接 :{VanXin}(<a href=\"http://www.icoder.xin\">http://www.icoder.xin</a> “悬浮说明”)把{}改为[]</li>\n</ul>\n</blockquote>"},{"title":"Git的使用总结","keywords":"Blog,Git","date":"2017-06-07T07:56:16.000Z","description":"在使用Git的过程中的一些总结","_content":">- 在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的\n<!-- more -->\n\n## gitbash中一些指令别名的设置\n```\n$ git config --global alias.st status //将status指定快捷键st\n$ git config --global alias.co checkout //将checkout指定快捷键co\n$ git config --global alias.ci commit //将commit指定快捷键ci\n$ git config --global alias.br branch //将branch指定快捷键br\n$ git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit\"\n```\n","source":"_posts/201706071556.md","raw":"---\ntitle: Git的使用总结\ncategories: \n- 开发工具\n- Git\nkeywords: 'Blog,Git'\ndate: 2017-06-07 15:56:16\ntags: \n- Git\ndescription: 在使用Git的过程中的一些总结\n---\n>- 在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的\n<!-- more -->\n\n## gitbash中一些指令别名的设置\n```\n$ git config --global alias.st status //将status指定快捷键st\n$ git config --global alias.co checkout //将checkout指定快捷键co\n$ git config --global alias.ci commit //将commit指定快捷键ci\n$ git config --global alias.br branch //将branch指定快捷键br\n$ git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit\"\n```\n","slug":"201706071556","published":1,"updated":"2017-06-08T06:10:19.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhofg000e2whqvm2wbhmn","content":"<blockquote>\n<ul>\n<li>在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的<a id=\"more\"></a>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"gitbash中一些指令别名的设置\"><a href=\"#gitbash中一些指令别名的设置\" class=\"headerlink\" title=\"gitbash中一些指令别名的设置\"></a>gitbash中一些指令别名的设置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global alias.st status //将status指定快捷键st</div><div class=\"line\">$ git config --global alias.co checkout //将checkout指定快捷键co</div><div class=\"line\">$ git config --global alias.ci commit //将commit指定快捷键ci</div><div class=\"line\">$ git config --global alias.br branch //将branch指定快捷键br</div><div class=\"line\">$ git config --global alias.lg &quot;log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<ul>\n<li>在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的","more":"</li>\n</ul>\n</blockquote>\n<h2 id=\"gitbash中一些指令别名的设置\"><a href=\"#gitbash中一些指令别名的设置\" class=\"headerlink\" title=\"gitbash中一些指令别名的设置\"></a>gitbash中一些指令别名的设置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global alias.st status //将status指定快捷键st</div><div class=\"line\">$ git config --global alias.co checkout //将checkout指定快捷键co</div><div class=\"line\">$ git config --global alias.ci commit //将commit指定快捷键ci</div><div class=\"line\">$ git config --global alias.br branch //将branch指定快捷键br</div><div class=\"line\">$ git config --global alias.lg &quot;log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div></pre></td></tr></table></figure>"},{"title":"Strust2开发实践_简单了解","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","date":"2017-06-08T07:44:13.000Z","description":"Struts2的学习以及开发实践","_content":"> 了解Struts2的原理以及开发流程\n<!-- more -->\n\n## Struts2简介\n### Struts2\n>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层\n- 轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包\n- MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程\n\n### 对比Servlet\n\n####\n> **优点**\n1. 业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度\n2. 提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型\n\n>**缺点**\n1. 执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率\n\n## Struts2开发实践\n\n### 需要的基本lib包\n![](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png) ![struts2_2.4](http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png)\n\n### 具体开发流程\n ![](http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg )\n\n#### 在web.xml中配置前端控制器\n```\n<!-- Struts2前端控制器 -->\n<filter>\n    <filter-name>struts2</filter-name>\n<!-- StrutsPrepareAndExecuteFilter.init()方法会加载struts.xml配置文件 -->\n    <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>struts2</filter-name>\n    <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n#### 创建struts.xml\n> - 必须放置于src文件夹下,且名称必须为:struts.xml\n- 在struts.cml中配置请求与Action的关系\n- 在action中通过result设置转发的页面\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n        \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"\n        \"http://struts.apache.org/dtds/struts-2.5.dtd\">\n<struts>\n    <!-- package :包,用于对Action进行封装.\n        1. name :包名,根元素下可以有多个包,彼此之间不能重名\n        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下\n        3. namespace :命名空间,用于规定Action的访问路径,必须以\"/\"开头,可以限定接收action的请求地址\n    -->\n    <package name=\"struts2Demo\" namespace=\"/struts2Demo\" extends=\"struts-default\">\n        <!-- action :业务控制器.用于注册业务控制器组件(类)\n            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名\n            2. class :业务控制器组件,指定业务控制器对应的类\n            3. method :方法,用于指定访问当前action时要调用的方法\n            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action\n        -->\n        <action name=\"hello\" class=\"com.study.struts2Demo.action.HelloAction\" method=\"hello\">\n            <!-- result :输出组件,用于转发重定向,直接输出\n                1. name :名臣一个action下可以有多个result,彼此之间不能重名\n                2. 默认做转发,元素内设置转发的页面\n            -->\n            <result name=\"success\">\n                /pages/hello.jsp\n            </result>\n        </action>\n    </package>\n</struts>\n```\n\n#### 编写业务控制器Action\n> - 创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类\n - 方法是public\n - 返回值是String\n - 参数列表为空\n - 编写业务方法\n   - 返回的字符串与struts.xml-->action-->result的name属性匹配,即 :根据此返回值可以找到对应的result\n\n#### 编写Jsp页面\n","source":"_posts/201706081544.md","raw":"---\ntitle: Strust2开发实践_简单了解\ntags:\n  - Struts2\n  - Java开发框架\ncategories:\n  - Java\n  - Struts2\nkeywords: 'Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程'\ndate: 2017-06-08 15:44:13\ndescription: Struts2的学习以及开发实践\n---\n> 了解Struts2的原理以及开发流程\n<!-- more -->\n\n## Struts2简介\n### Struts2\n>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层\n- 轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包\n- MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程\n\n### 对比Servlet\n\n####\n> **优点**\n1. 业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度\n2. 提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型\n\n>**缺点**\n1. 执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率\n\n## Struts2开发实践\n\n### 需要的基本lib包\n![](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png) ![struts2_2.4](http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png)\n\n### 具体开发流程\n ![](http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg )\n\n#### 在web.xml中配置前端控制器\n```\n<!-- Struts2前端控制器 -->\n<filter>\n    <filter-name>struts2</filter-name>\n<!-- StrutsPrepareAndExecuteFilter.init()方法会加载struts.xml配置文件 -->\n    <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>struts2</filter-name>\n    <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n#### 创建struts.xml\n> - 必须放置于src文件夹下,且名称必须为:struts.xml\n- 在struts.cml中配置请求与Action的关系\n- 在action中通过result设置转发的页面\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n        \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"\n        \"http://struts.apache.org/dtds/struts-2.5.dtd\">\n<struts>\n    <!-- package :包,用于对Action进行封装.\n        1. name :包名,根元素下可以有多个包,彼此之间不能重名\n        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下\n        3. namespace :命名空间,用于规定Action的访问路径,必须以\"/\"开头,可以限定接收action的请求地址\n    -->\n    <package name=\"struts2Demo\" namespace=\"/struts2Demo\" extends=\"struts-default\">\n        <!-- action :业务控制器.用于注册业务控制器组件(类)\n            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名\n            2. class :业务控制器组件,指定业务控制器对应的类\n            3. method :方法,用于指定访问当前action时要调用的方法\n            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action\n        -->\n        <action name=\"hello\" class=\"com.study.struts2Demo.action.HelloAction\" method=\"hello\">\n            <!-- result :输出组件,用于转发重定向,直接输出\n                1. name :名臣一个action下可以有多个result,彼此之间不能重名\n                2. 默认做转发,元素内设置转发的页面\n            -->\n            <result name=\"success\">\n                /pages/hello.jsp\n            </result>\n        </action>\n    </package>\n</struts>\n```\n\n#### 编写业务控制器Action\n> - 创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类\n - 方法是public\n - 返回值是String\n - 参数列表为空\n - 编写业务方法\n   - 返回的字符串与struts.xml-->action-->result的name属性匹配,即 :根据此返回值可以找到对应的result\n\n#### 编写Jsp页面\n","slug":"201706081544","published":1,"updated":"2017-06-20T08:26:39.424Z","_id":"cj3wuhofs000f2whqt6fc03gg","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>了解Struts2的原理以及开发流程<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"Struts2简介\"><a href=\"#Struts2简介\" class=\"headerlink\" title=\"Struts2简介\"></a>Struts2简介</h2><h3 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h3><blockquote>\n<p>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层</p>\n<ul>\n<li>轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包</li>\n<li>MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程</li>\n</ul>\n</blockquote>\n<h3 id=\"对比Servlet\"><a href=\"#对比Servlet\" class=\"headerlink\" title=\"对比Servlet\"></a>对比Servlet</h3><p>####</p>\n<blockquote>\n<p><strong>优点</strong></p>\n<ol>\n<li>业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度</li>\n<li>提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型</li>\n</ol>\n<p><strong>缺点</strong></p>\n<ol>\n<li>执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率</li>\n</ol>\n</blockquote>\n<h2 id=\"Struts2开发实践\"><a href=\"#Struts2开发实践\" class=\"headerlink\" title=\"Struts2开发实践\"></a>Struts2开发实践</h2><h3 id=\"需要的基本lib包\"><a href=\"#需要的基本lib包\" class=\"headerlink\" title=\"需要的基本lib包\"></a>需要的基本lib包</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png\" alt=\"](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png) ![struts2_2.4\" title=\"\">\n                </div>\n                <div class=\"image-caption\">](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png) ![struts2_2.4</div>\n            </figure>\n<h3 id=\"具体开发流程\"><a href=\"#具体开发流程\" class=\"headerlink\" title=\"具体开发流程\"></a>具体开发流程</h3> <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h4 id=\"在web-xml中配置前端控制器\"><a href=\"#在web-xml中配置前端控制器\" class=\"headerlink\" title=\"在web.xml中配置前端控制器\"></a>在web.xml中配置前端控制器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Struts2前端控制器 --&gt;</div><div class=\"line\">&lt;filter&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">&lt;!-- StrutsPrepareAndExecuteFilter.init()方法会加载struts.xml配置文件 --&gt;</div><div class=\"line\">    &lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</div><div class=\"line\">&lt;/filter&gt;</div><div class=\"line\">&lt;filter-mapping&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"创建struts-xml\"><a href=\"#创建struts-xml\" class=\"headerlink\" title=\"创建struts.xml\"></a>创建struts.xml</h4><blockquote>\n<ul>\n<li>必须放置于src文件夹下,且名称必须为:struts.xml</li>\n<li>在struts.cml中配置请求与Action的关系</li>\n<li>在action中通过result设置转发的页面<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">        &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;</div><div class=\"line\">        &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&gt;</div><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">    &lt;!-- package :包,用于对Action进行封装.</div><div class=\"line\">        1. name :包名,根元素下可以有多个包,彼此之间不能重名</div><div class=\"line\">        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下</div><div class=\"line\">        3. namespace :命名空间,用于规定Action的访问路径,必须以&quot;/&quot;开头,可以限定接收action的请求地址</div><div class=\"line\">    --&gt;</div><div class=\"line\">    &lt;package name=&quot;struts2Demo&quot; namespace=&quot;/struts2Demo&quot; extends=&quot;struts-default&quot;&gt;</div><div class=\"line\">        &lt;!-- action :业务控制器.用于注册业务控制器组件(类)</div><div class=\"line\">            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名</div><div class=\"line\">            2. class :业务控制器组件,指定业务控制器对应的类</div><div class=\"line\">            3. method :方法,用于指定访问当前action时要调用的方法</div><div class=\"line\">            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action</div><div class=\"line\">        --&gt;</div><div class=\"line\">        &lt;action name=&quot;hello&quot; class=&quot;com.study.struts2Demo.action.HelloAction&quot; method=&quot;hello&quot;&gt;</div><div class=\"line\">            &lt;!-- result :输出组件,用于转发重定向,直接输出</div><div class=\"line\">                1. name :名臣一个action下可以有多个result,彼此之间不能重名</div><div class=\"line\">                2. 默认做转发,元素内设置转发的页面</div><div class=\"line\">            --&gt;</div><div class=\"line\">            &lt;result name=&quot;success&quot;&gt;</div><div class=\"line\">                /pages/hello.jsp</div><div class=\"line\">            &lt;/result&gt;</div><div class=\"line\">        &lt;/action&gt;</div><div class=\"line\">    &lt;/package&gt;</div><div class=\"line\">&lt;/struts&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写业务控制器Action\"><a href=\"#编写业务控制器Action\" class=\"headerlink\" title=\"编写业务控制器Action\"></a>编写业务控制器Action</h4><blockquote>\n<ul>\n<li>创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类<ul>\n<li>方法是public</li>\n<li>返回值是String</li>\n<li>参数列表为空</li>\n<li>编写业务方法<ul>\n<li>返回的字符串与struts.xml–&gt;action–&gt;result的name属性匹配,即 :根据此返回值可以找到对应的result</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写Jsp页面\"><a href=\"#编写Jsp页面\" class=\"headerlink\" title=\"编写Jsp页面\"></a>编写Jsp页面</h4>","site":{"data":{}},"excerpt":"<blockquote>\n<p>了解Struts2的原理以及开发流程<br>","more":"</p>\n</blockquote>\n<h2 id=\"Struts2简介\"><a href=\"#Struts2简介\" class=\"headerlink\" title=\"Struts2简介\"></a>Struts2简介</h2><h3 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h3><blockquote>\n<p>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层</p>\n<ul>\n<li>轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包</li>\n<li>MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程</li>\n</ul>\n</blockquote>\n<h3 id=\"对比Servlet\"><a href=\"#对比Servlet\" class=\"headerlink\" title=\"对比Servlet\"></a>对比Servlet</h3><p>####</p>\n<blockquote>\n<p><strong>优点</strong></p>\n<ol>\n<li>业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度</li>\n<li>提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型</li>\n</ol>\n<p><strong>缺点</strong></p>\n<ol>\n<li>执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率</li>\n</ol>\n</blockquote>\n<h2 id=\"Struts2开发实践\"><a href=\"#Struts2开发实践\" class=\"headerlink\" title=\"Struts2开发实践\"></a>Struts2开发实践</h2><h3 id=\"需要的基本lib包\"><a href=\"#需要的基本lib包\" class=\"headerlink\" title=\"需要的基本lib包\"></a>需要的基本lib包</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png\" alt=\"](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png) ![struts2_2.4\" title=\"\">\n                </div>\n                <div class=\"image-caption\">](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png) ![struts2_2.4</div>\n            </figure>\n<h3 id=\"具体开发流程\"><a href=\"#具体开发流程\" class=\"headerlink\" title=\"具体开发流程\"></a>具体开发流程</h3> <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h4 id=\"在web-xml中配置前端控制器\"><a href=\"#在web-xml中配置前端控制器\" class=\"headerlink\" title=\"在web.xml中配置前端控制器\"></a>在web.xml中配置前端控制器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Struts2前端控制器 --&gt;</div><div class=\"line\">&lt;filter&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">&lt;!-- StrutsPrepareAndExecuteFilter.init()方法会加载struts.xml配置文件 --&gt;</div><div class=\"line\">    &lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</div><div class=\"line\">&lt;/filter&gt;</div><div class=\"line\">&lt;filter-mapping&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"创建struts-xml\"><a href=\"#创建struts-xml\" class=\"headerlink\" title=\"创建struts.xml\"></a>创建struts.xml</h4><blockquote>\n<ul>\n<li>必须放置于src文件夹下,且名称必须为:struts.xml</li>\n<li>在struts.cml中配置请求与Action的关系</li>\n<li>在action中通过result设置转发的页面<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">        &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;</div><div class=\"line\">        &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&gt;</div><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">    &lt;!-- package :包,用于对Action进行封装.</div><div class=\"line\">        1. name :包名,根元素下可以有多个包,彼此之间不能重名</div><div class=\"line\">        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下</div><div class=\"line\">        3. namespace :命名空间,用于规定Action的访问路径,必须以&quot;/&quot;开头,可以限定接收action的请求地址</div><div class=\"line\">    --&gt;</div><div class=\"line\">    &lt;package name=&quot;struts2Demo&quot; namespace=&quot;/struts2Demo&quot; extends=&quot;struts-default&quot;&gt;</div><div class=\"line\">        &lt;!-- action :业务控制器.用于注册业务控制器组件(类)</div><div class=\"line\">            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名</div><div class=\"line\">            2. class :业务控制器组件,指定业务控制器对应的类</div><div class=\"line\">            3. method :方法,用于指定访问当前action时要调用的方法</div><div class=\"line\">            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action</div><div class=\"line\">        --&gt;</div><div class=\"line\">        &lt;action name=&quot;hello&quot; class=&quot;com.study.struts2Demo.action.HelloAction&quot; method=&quot;hello&quot;&gt;</div><div class=\"line\">            &lt;!-- result :输出组件,用于转发重定向,直接输出</div><div class=\"line\">                1. name :名臣一个action下可以有多个result,彼此之间不能重名</div><div class=\"line\">                2. 默认做转发,元素内设置转发的页面</div><div class=\"line\">            --&gt;</div><div class=\"line\">            &lt;result name=&quot;success&quot;&gt;</div><div class=\"line\">                /pages/hello.jsp</div><div class=\"line\">            &lt;/result&gt;</div><div class=\"line\">        &lt;/action&gt;</div><div class=\"line\">    &lt;/package&gt;</div><div class=\"line\">&lt;/struts&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写业务控制器Action\"><a href=\"#编写业务控制器Action\" class=\"headerlink\" title=\"编写业务控制器Action\"></a>编写业务控制器Action</h4><blockquote>\n<ul>\n<li>创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类<ul>\n<li>方法是public</li>\n<li>返回值是String</li>\n<li>参数列表为空</li>\n<li>编写业务方法<ul>\n<li>返回的字符串与struts.xml–&gt;action–&gt;result的name属性匹配,即 :根据此返回值可以找到对应的result</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写Jsp页面\"><a href=\"#编写Jsp页面\" class=\"headerlink\" title=\"编写Jsp页面\"></a>编写Jsp页面</h4>"},{"title":"简单了解MVC框架","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","date":"2017-06-08T07:57:48.000Z","description":null,"_content":"> 简单了解下MVC设计模式以及在各种情境下的应用\n<!-- more -->\n\n## MVC简介\n>- (模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层\n>- (视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP\n>- (控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程\n\n## MVC的作用\n>- 将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式\n\n## MVC的几种实践应用\n### Servlet中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png)\n### Spring中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png)\n### Struts2中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png)\n","source":"_posts/201706081557.md","raw":"---\ntitle: 简单了解MVC框架\ntags:\n  - MVC\n  - Java开发框架\ncategories:\n  - Java\n  - MVC\nkeywords: 'Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程'\ndate: 2017-06-08 15:57:48\ndescription:\n---\n> 简单了解下MVC设计模式以及在各种情境下的应用\n<!-- more -->\n\n## MVC简介\n>- (模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层\n>- (视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP\n>- (控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程\n\n## MVC的作用\n>- 将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式\n\n## MVC的几种实践应用\n### Servlet中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png)\n### Spring中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png)\n### Struts2中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png)\n","slug":"201706081557","published":1,"updated":"2017-06-09T03:03:48.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoga000i2whq3atwooha","content":"<blockquote>\n<p>简单了解下MVC设计模式以及在各种情境下的应用<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"MVC简介\"><a href=\"#MVC简介\" class=\"headerlink\" title=\"MVC简介\"></a>MVC简介</h2><blockquote>\n<ul>\n<li>(模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层</li>\n<li>(视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP</li>\n<li>(控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的作用\"><a href=\"#MVC的作用\" class=\"headerlink\" title=\"MVC的作用\"></a>MVC的作用</h2><blockquote>\n<ul>\n<li>将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的几种实践应用\"><a href=\"#MVC的几种实践应用\" class=\"headerlink\" title=\"MVC的几种实践应用\"></a>MVC的几种实践应用</h2><h3 id=\"Servlet中实现MVC\"><a href=\"#Servlet中实现MVC\" class=\"headerlink\" title=\"Servlet中实现MVC\"></a>Servlet中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Spring中实现MVC\"><a href=\"#Spring中实现MVC\" class=\"headerlink\" title=\"Spring中实现MVC\"></a>Spring中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Struts2中实现MVC\"><a href=\"#Struts2中实现MVC\" class=\"headerlink\" title=\"Struts2中实现MVC\"></a>Struts2中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>简单了解下MVC设计模式以及在各种情境下的应用<br>","more":"</p>\n</blockquote>\n<h2 id=\"MVC简介\"><a href=\"#MVC简介\" class=\"headerlink\" title=\"MVC简介\"></a>MVC简介</h2><blockquote>\n<ul>\n<li>(模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层</li>\n<li>(视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP</li>\n<li>(控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的作用\"><a href=\"#MVC的作用\" class=\"headerlink\" title=\"MVC的作用\"></a>MVC的作用</h2><blockquote>\n<ul>\n<li>将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的几种实践应用\"><a href=\"#MVC的几种实践应用\" class=\"headerlink\" title=\"MVC的几种实践应用\"></a>MVC的几种实践应用</h2><h3 id=\"Servlet中实现MVC\"><a href=\"#Servlet中实现MVC\" class=\"headerlink\" title=\"Servlet中实现MVC\"></a>Servlet中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Spring中实现MVC\"><a href=\"#Spring中实现MVC\" class=\"headerlink\" title=\"Spring中实现MVC\"></a>Spring中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Struts2中实现MVC\"><a href=\"#Struts2中实现MVC\" class=\"headerlink\" title=\"Struts2中实现MVC\"></a>Struts2中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>"},{"title":"Hexo中遇到的问题及解决","comments":1,"keywords":"Blog,Hexo","date":"2017-06-06T08:23:14.000Z","description":"Hexo中遇到的问题及解决","_content":"- Hexo中遇到的问题及解决\n<!-- more -->\n\n## 分类和标签云失效\n\n### 标签的链接设置\n```\nhexo new page \"tags\"\n编辑tags.md,页面的类型设置为 tags\ntitle: TagCloud\ndate: 2017-06-06 16:22:17\ntype: \"tags\"\nlayout: tags\n```\n\n### 分类的链接设置\n ```\n hexo new page \"tags\"\n 编辑tags.md,页面的类型设置为 tags\n title: categories\n date: 2017-06-06 18:06:04\n layout: categories\n ```\n\n## 评论系统的开启\n>- 不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论\n>- 在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖\n![](http://or5qwkb5l.bkt.clouddn.com/comments.png \"\")\n\n## 指定404错误页面\n>- 方法一 :直接在source下创建404.html自定义跳转地址\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n```\n>- 方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)\n```\n---\ntitle: 404 Not Found\ntoc: false\nreward: false\nshare: false\ncomments: false\npermalink: /404\n---\n```\n","source":"_posts/201706061623.md","raw":"---\ntitle: Hexo中遇到的问题及解决\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\ncomments: true\nkeywords: 'Blog,Hexo'\ndate: 2017-06-06 16:23:14\ndescription: Hexo中遇到的问题及解决\n---\n- Hexo中遇到的问题及解决\n<!-- more -->\n\n## 分类和标签云失效\n\n### 标签的链接设置\n```\nhexo new page \"tags\"\n编辑tags.md,页面的类型设置为 tags\ntitle: TagCloud\ndate: 2017-06-06 16:22:17\ntype: \"tags\"\nlayout: tags\n```\n\n### 分类的链接设置\n ```\n hexo new page \"tags\"\n 编辑tags.md,页面的类型设置为 tags\n title: categories\n date: 2017-06-06 18:06:04\n layout: categories\n ```\n\n## 评论系统的开启\n>- 不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论\n>- 在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖\n![](http://or5qwkb5l.bkt.clouddn.com/comments.png \"\")\n\n## 指定404错误页面\n>- 方法一 :直接在source下创建404.html自定义跳转地址\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n```\n>- 方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)\n```\n---\ntitle: 404 Not Found\ntoc: false\nreward: false\nshare: false\ncomments: false\npermalink: /404\n---\n```\n","slug":"201706061623","published":1,"updated":"2017-06-08T06:14:32.830Z","layout":"post","photos":[],"link":"","_id":"cj3wuhogp000k2whqjn3bv8lj","content":"<ul>\n<li>Hexo中遇到的问题及解决<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"分类和标签云失效\"><a href=\"#分类和标签云失效\" class=\"headerlink\" title=\"分类和标签云失效\"></a>分类和标签云失效</h2><h3 id=\"标签的链接设置\"><a href=\"#标签的链接设置\" class=\"headerlink\" title=\"标签的链接设置\"></a>标签的链接设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: TagCloud</div><div class=\"line\">date: 2017-06-06 16:22:17</div><div class=\"line\">type: &quot;tags&quot;</div><div class=\"line\">layout: tags</div></pre></td></tr></table></figure>\n<h3 id=\"分类的链接设置\"><a href=\"#分类的链接设置\" class=\"headerlink\" title=\"分类的链接设置\"></a>分类的链接设置</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: categories</div><div class=\"line\">date: 2017-06-06 18:06:04</div><div class=\"line\">layout: categories</div></pre></td></tr></table></figure>\n<h2 id=\"评论系统的开启\"><a href=\"#评论系统的开启\" class=\"headerlink\" title=\"评论系统的开启\"></a>评论系统的开启</h2><blockquote>\n<ul>\n<li>不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论</li>\n<li>在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/comments.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"指定404错误页面\"><a href=\"#指定404错误页面\" class=\"headerlink\" title=\"指定404错误页面\"></a>指定404错误页面</h2><blockquote>\n<ul>\n<li><p>方法一 :直接在source下创建404.html自定义跳转地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">  &lt;head&gt;]</div><div class=\"line\">  \t&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">  \t&lt;title&gt;404&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">  \t&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.icoder.xin&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 404 Not Found</div><div class=\"line\">toc: false</div><div class=\"line\">reward: false</div><div class=\"line\">share: false</div><div class=\"line\">comments: false</div><div class=\"line\">permalink: /404</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"<ul>\n<li>Hexo中遇到的问题及解决","more":"</li>\n</ul>\n<h2 id=\"分类和标签云失效\"><a href=\"#分类和标签云失效\" class=\"headerlink\" title=\"分类和标签云失效\"></a>分类和标签云失效</h2><h3 id=\"标签的链接设置\"><a href=\"#标签的链接设置\" class=\"headerlink\" title=\"标签的链接设置\"></a>标签的链接设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: TagCloud</div><div class=\"line\">date: 2017-06-06 16:22:17</div><div class=\"line\">type: &quot;tags&quot;</div><div class=\"line\">layout: tags</div></pre></td></tr></table></figure>\n<h3 id=\"分类的链接设置\"><a href=\"#分类的链接设置\" class=\"headerlink\" title=\"分类的链接设置\"></a>分类的链接设置</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: categories</div><div class=\"line\">date: 2017-06-06 18:06:04</div><div class=\"line\">layout: categories</div></pre></td></tr></table></figure>\n<h2 id=\"评论系统的开启\"><a href=\"#评论系统的开启\" class=\"headerlink\" title=\"评论系统的开启\"></a>评论系统的开启</h2><blockquote>\n<ul>\n<li>不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论</li>\n<li>在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/comments.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"指定404错误页面\"><a href=\"#指定404错误页面\" class=\"headerlink\" title=\"指定404错误页面\"></a>指定404错误页面</h2><blockquote>\n<ul>\n<li><p>方法一 :直接在source下创建404.html自定义跳转地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">  &lt;head&gt;]</div><div class=\"line\">  \t&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">  \t&lt;title&gt;404&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">  \t&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.icoder.xin&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 404 Not Found</div><div class=\"line\">toc: false</div><div class=\"line\">reward: false</div><div class=\"line\">share: false</div><div class=\"line\">comments: false</div><div class=\"line\">permalink: /404</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>"},{"title":"利用阿里云搭建自己的代理服务器","keywords":"Blog,","date":"2017-06-07T10:29:37.000Z","description":null,"_content":"\n<!-- more -->\n","source":"_drafts/网站建设与开发/No利用阿里云搭建自己的代理服务器.md","raw":"---\ntitle: 利用阿里云搭建自己的代理服务器\ncategories: [网站建设与开发]\nkeywords: 'Blog,'\ndate: 2017-06-07 18:29:37\ntags:\ndescription:\n---\n\n<!-- more -->\n","slug":"网站建设与开发/No利用阿里云搭建自己的代理服务器","published":0,"updated":"2017-06-07T10:33:28.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhon700252whqlezhvljr","content":"<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"","more":""},{"title":"搭建个人个性化博客","date":"2017-06-06T03:18:24.000Z","_content":"\n>- 利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站\n<!-- more -->\n\n## 需要知识\n>- git的简单使用\n>- nodeJs的简单使用\n>- Hexo的了解及简单命令的使用\n\n## 开始搭建个人博客\n>- 注册Github\n>  - 注册github配置一个sshKeys->设置中的sshkeys粘贴id_rsa.pub中的内容就行\n```\n//查看本地的ssh密钥\n$ cd ~/.ssh\n$ ls\n$ cat ~/.ssh/id_rsa.pub\n//不存在则创建一个\n$ SSH Key :$ ssh-keygen -t rsa -C \"wangxinat@foxmail.com\"\n//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件\n//测试配置是否成功\n$ ssh -T git@github.com\n//查看远程仓库信息\n$ git remote [-v]\n```\n>  - 创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io\n> - 本地使用hexo搭建静态博客\n>  - 在指定文件夹使用git搭建\n```\nhexo init vanxinBlog //初始化本地仓库\ncd vanxinBlog\nnpm install //进行npm的安装\nhexo s //开启服务即可本地进行访问localhost:4000\n//接下来配置远程仓库,生成静态html文件部署到github\n'//配置全局配置文件_config.yml\ntitle: VanXin`sBlog\nsubtitle: test Hexo\ndescription: This is my first Web Blog\nauthor: VanXin\nlanguage: zh-CN\ntimezone: Asia/Shanghai\ndeploy:\n  type: git\n  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n'\nhexo g //生成静态文件\nhexo d //将本地仓库与github上关联,此处报错not found gut\n//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d\n```\n> - 至此博客搭建成功\n\n## Hexo相关配置\n详细说明见Hexo的学习\n## Git的相关使用\n详细见Git的使用说明\n","source":"_drafts/网站建设与开发/搭建私人个性化博客.md","raw":"---\ntitle: 搭建个人个性化博客\ndate: 2017-06-06 11:18:24\ntags: \n- Hexo\n- Blog\ncategories: \n- 网站建设与开发\n---\n\n>- 利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站\n<!-- more -->\n\n## 需要知识\n>- git的简单使用\n>- nodeJs的简单使用\n>- Hexo的了解及简单命令的使用\n\n## 开始搭建个人博客\n>- 注册Github\n>  - 注册github配置一个sshKeys->设置中的sshkeys粘贴id_rsa.pub中的内容就行\n```\n//查看本地的ssh密钥\n$ cd ~/.ssh\n$ ls\n$ cat ~/.ssh/id_rsa.pub\n//不存在则创建一个\n$ SSH Key :$ ssh-keygen -t rsa -C \"wangxinat@foxmail.com\"\n//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件\n//测试配置是否成功\n$ ssh -T git@github.com\n//查看远程仓库信息\n$ git remote [-v]\n```\n>  - 创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io\n> - 本地使用hexo搭建静态博客\n>  - 在指定文件夹使用git搭建\n```\nhexo init vanxinBlog //初始化本地仓库\ncd vanxinBlog\nnpm install //进行npm的安装\nhexo s //开启服务即可本地进行访问localhost:4000\n//接下来配置远程仓库,生成静态html文件部署到github\n'//配置全局配置文件_config.yml\ntitle: VanXin`sBlog\nsubtitle: test Hexo\ndescription: This is my first Web Blog\nauthor: VanXin\nlanguage: zh-CN\ntimezone: Asia/Shanghai\ndeploy:\n  type: git\n  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n'\nhexo g //生成静态文件\nhexo d //将本地仓库与github上关联,此处报错not found gut\n//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d\n```\n> - 至此博客搭建成功\n\n## Hexo相关配置\n详细说明见Hexo的学习\n## Git的相关使用\n详细见Git的使用说明\n","slug":"网站建设与开发/搭建私人个性化博客","published":0,"updated":"2017-06-08T06:09:31.044Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhono00262whq7rndhi70","content":"<blockquote>\n<ul>\n<li>利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站<a id=\"more\"></a>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"需要知识\"><a href=\"#需要知识\" class=\"headerlink\" title=\"需要知识\"></a>需要知识</h2><blockquote>\n<ul>\n<li>git的简单使用</li>\n<li>nodeJs的简单使用</li>\n<li>Hexo的了解及简单命令的使用</li>\n</ul>\n</blockquote>\n<h2 id=\"开始搭建个人博客\"><a href=\"#开始搭建个人博客\" class=\"headerlink\" title=\"开始搭建个人博客\"></a>开始搭建个人博客</h2><blockquote>\n<ul>\n<li><p>注册Github</p>\n<ul>\n<li><p>注册github配置一个sshKeys-&gt;设置中的sshkeys粘贴id_rsa.pub中的内容就行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//查看本地的ssh密钥</div><div class=\"line\">$ cd ~/.ssh</div><div class=\"line\">$ ls</div><div class=\"line\">$ cat ~/.ssh/id_rsa.pub</div><div class=\"line\">//不存在则创建一个</div><div class=\"line\">$ SSH Key :$ ssh-keygen -t rsa -C &quot;wangxinat@foxmail.com&quot;</div><div class=\"line\">//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件</div><div class=\"line\">//测试配置是否成功</div><div class=\"line\">$ ssh -T git@github.com</div><div class=\"line\">//查看远程仓库信息</div><div class=\"line\">$ git remote [-v]</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io</p>\n</li>\n</ul>\n</li>\n<li><p>本地使用hexo搭建静态博客</p>\n<ul>\n<li>在指定文件夹使用git搭建<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init vanxinBlog //初始化本地仓库</div><div class=\"line\">cd vanxinBlog</div><div class=\"line\">npm install //进行npm的安装</div><div class=\"line\">hexo s //开启服务即可本地进行访问localhost:4000</div><div class=\"line\">//接下来配置远程仓库,生成静态html文件部署到github</div><div class=\"line\">&apos;//配置全局配置文件_config.yml</div><div class=\"line\">title: VanXin`sBlog</div><div class=\"line\">subtitle: test Hexo</div><div class=\"line\">description: This is my first Web Blog</div><div class=\"line\">author: VanXin</div><div class=\"line\">language: zh-CN</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">&apos;</div><div class=\"line\">hexo g //生成静态文件</div><div class=\"line\">hexo d //将本地仓库与github上关联,此处报错not found gut</div><div class=\"line\">//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>至此博客搭建成功</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"Hexo相关配置\"><a href=\"#Hexo相关配置\" class=\"headerlink\" title=\"Hexo相关配置\"></a>Hexo相关配置</h2><p>详细说明见Hexo的学习</p>\n<h2 id=\"Git的相关使用\"><a href=\"#Git的相关使用\" class=\"headerlink\" title=\"Git的相关使用\"></a>Git的相关使用</h2><p>详细见Git的使用说明</p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<ul>\n<li>利用GithubPage和Hexo快速搭建一个属于自己私有的博客网站","more":"</li>\n</ul>\n</blockquote>\n<h2 id=\"需要知识\"><a href=\"#需要知识\" class=\"headerlink\" title=\"需要知识\"></a>需要知识</h2><blockquote>\n<ul>\n<li>git的简单使用</li>\n<li>nodeJs的简单使用</li>\n<li>Hexo的了解及简单命令的使用</li>\n</ul>\n</blockquote>\n<h2 id=\"开始搭建个人博客\"><a href=\"#开始搭建个人博客\" class=\"headerlink\" title=\"开始搭建个人博客\"></a>开始搭建个人博客</h2><blockquote>\n<ul>\n<li><p>注册Github</p>\n<ul>\n<li><p>注册github配置一个sshKeys-&gt;设置中的sshkeys粘贴id_rsa.pub中的内容就行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">//查看本地的ssh密钥</div><div class=\"line\">$ cd ~/.ssh</div><div class=\"line\">$ ls</div><div class=\"line\">$ cat ~/.ssh/id_rsa.pub</div><div class=\"line\">//不存在则创建一个</div><div class=\"line\">$ SSH Key :$ ssh-keygen -t rsa -C &quot;wangxinat@foxmail.com&quot;</div><div class=\"line\">//在.ssh目录中有github_rsa  github_rsa.pub  id_rsa  id_rsa.pub四个文件</div><div class=\"line\">//测试配置是否成功</div><div class=\"line\">$ ssh -T git@github.com</div><div class=\"line\">//查看远程仓库信息</div><div class=\"line\">$ git remote [-v]</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建一个新的仓库 :指定仓库名 = vanxinBlog.github.io</p>\n</li>\n</ul>\n</li>\n<li><p>本地使用hexo搭建静态博客</p>\n<ul>\n<li>在指定文件夹使用git搭建<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init vanxinBlog //初始化本地仓库</div><div class=\"line\">cd vanxinBlog</div><div class=\"line\">npm install //进行npm的安装</div><div class=\"line\">hexo s //开启服务即可本地进行访问localhost:4000</div><div class=\"line\">//接下来配置远程仓库,生成静态html文件部署到github</div><div class=\"line\">&apos;//配置全局配置文件_config.yml</div><div class=\"line\">title: VanXin`sBlog</div><div class=\"line\">subtitle: test Hexo</div><div class=\"line\">description: This is my first Web Blog</div><div class=\"line\">author: VanXin</div><div class=\"line\">language: zh-CN</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repo: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\">&apos;</div><div class=\"line\">hexo g //生成静态文件</div><div class=\"line\">hexo d //将本地仓库与github上关联,此处报错not found gut</div><div class=\"line\">//解决报错 :npm install hexo-deployer-git –save 即可执行hexo d</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>至此博客搭建成功</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"Hexo相关配置\"><a href=\"#Hexo相关配置\" class=\"headerlink\" title=\"Hexo相关配置\"></a>Hexo相关配置</h2><p>详细说明见Hexo的学习</p>\n<h2 id=\"Git的相关使用\"><a href=\"#Git的相关使用\" class=\"headerlink\" title=\"Git的相关使用\"></a>Git的相关使用</h2><p>详细见Git的使用说明</p>"},{"title":"Strust2开发实践_1","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","date":"2017-06-08T07:44:13.000Z","description":"Struts2的学习以及开发实践","_content":"> 了解Struts2的原理以及开发流程\n<!-- more -->\n\n## Struts2简介\n### Struts2\n>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层\n- 轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包\n- MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程\n\n### 对比Servlet\n\n#### 优点\n>  \n1. 业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度\n2. 提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型\n\n#### 缺点\n> 执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率\n\n## Struts2开发实践\n\n### 需要的基本lib包\n![](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png)\n![struts2_2.4](http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png)\n\n### 具体开发流程\n ![](http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg )\n\n#### 在web.xml中配置前端控制器\n```\n<!-- Struts2前端控制器 -->\n<filter>\n    <filter-name>struts2</filter-name>\n    <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>struts2</filter-name>\n    <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n#### 创建struts.xml\n> - 必须放置于src文件夹下,且名称必须为:struts.xml\n- 在struts.cml中配置请求与Action的关系\n- 在action中通过result设置转发的页面\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n        \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"\n        \"http://struts.apache.org/dtds/struts-2.5.dtd\">\n<struts>\n    <!-- package :包,用于对Action进行封装.\n        1. name :包名,根元素下可以有多个包,彼此之间不能重名\n        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下\n        3. namespace :命名空间,用于规定Action的访问路径,必须以\"/\"开头,可以限定接收action的请求地址\n    -->\n    <package name=\"struts2Demo\" namespace=\"/struts2Demo\" extends=\"struts-default\">\n        <!-- action :业务控制器.用于注册业务控制器组件(类)\n            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名\n            2. class :业务控制器组件,指定业务控制器对应的类\n            3. method :方法,用于指定访问当前action时要调用的方法\n            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action\n        -->\n        <action name=\"hello\" class=\"com.study.struts2Demo.action.HelloAction\" method=\"hello\">\n            <!-- result :输出组件,用于转发重定向,直接输出\n                1. name :名臣一个action下可以有多个result,彼此之间不能重名\n                2. 默认做转发,元素内设置转发的页面\n            -->\n            <result name=\"success\">\n                /pages/hello.jsp\n            </result>\n        </action>\n    </package>\n</struts>\n```\n\n#### 编写业务控制器Action\n> - 创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类\n - 方法是public\n - 返回值是String\n - 参数列表为空\n - 编写业务方法\n   - 返回的字符串与struts.xml-->action-->result的name属性匹配,即 :根据此返回值可以找到对应的result\n\n#### 编写Jsp页面\n","source":"_drafts/Java/Struts2/Strust2_1_了解Struts2的基本使用步骤.md","raw":"---\ntitle: Strust2开发实践_1\ntags:\n  - Struts2\n  - Java开发框架\ncategories:\n  - Java\n  - Struts2\nkeywords: 'Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程'\ndate: 2017-06-08 15:44:13\ndescription: Struts2的学习以及开发实践\n---\n> 了解Struts2的原理以及开发流程\n<!-- more -->\n\n## Struts2简介\n### Struts2\n>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层\n- 轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包\n- MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程\n\n### 对比Servlet\n\n#### 优点\n>  \n1. 业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度\n2. 提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型\n\n#### 缺点\n> 执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率\n\n## Struts2开发实践\n\n### 需要的基本lib包\n![](http://or5qwkb5l.bkt.clouddn.com/struts_libs.png)\n![struts2_2.4](http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png)\n\n### 具体开发流程\n ![](http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg )\n\n#### 在web.xml中配置前端控制器\n```\n<!-- Struts2前端控制器 -->\n<filter>\n    <filter-name>struts2</filter-name>\n    <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>\n</filter>\n<filter-mapping>\n    <filter-name>struts2</filter-name>\n    <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n\n#### 创建struts.xml\n> - 必须放置于src文件夹下,且名称必须为:struts.xml\n- 在struts.cml中配置请求与Action的关系\n- 在action中通过result设置转发的页面\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE struts PUBLIC\n        \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"\n        \"http://struts.apache.org/dtds/struts-2.5.dtd\">\n<struts>\n    <!-- package :包,用于对Action进行封装.\n        1. name :包名,根元素下可以有多个包,彼此之间不能重名\n        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下\n        3. namespace :命名空间,用于规定Action的访问路径,必须以\"/\"开头,可以限定接收action的请求地址\n    -->\n    <package name=\"struts2Demo\" namespace=\"/struts2Demo\" extends=\"struts-default\">\n        <!-- action :业务控制器.用于注册业务控制器组件(类)\n            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名\n            2. class :业务控制器组件,指定业务控制器对应的类\n            3. method :方法,用于指定访问当前action时要调用的方法\n            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action\n        -->\n        <action name=\"hello\" class=\"com.study.struts2Demo.action.HelloAction\" method=\"hello\">\n            <!-- result :输出组件,用于转发重定向,直接输出\n                1. name :名臣一个action下可以有多个result,彼此之间不能重名\n                2. 默认做转发,元素内设置转发的页面\n            -->\n            <result name=\"success\">\n                /pages/hello.jsp\n            </result>\n        </action>\n    </package>\n</struts>\n```\n\n#### 编写业务控制器Action\n> - 创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类\n - 方法是public\n - 返回值是String\n - 参数列表为空\n - 编写业务方法\n   - 返回的字符串与struts.xml-->action-->result的name属性匹配,即 :根据此返回值可以找到对应的result\n\n#### 编写Jsp页面\n","slug":"Java/Struts2/Strust2_1_了解Struts2的基本使用步骤","published":0,"updated":"2017-06-09T02:56:05.676Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoog002b2whq9urrffmc","content":"<blockquote>\n<p>了解Struts2的原理以及开发流程<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"Struts2简介\"><a href=\"#Struts2简介\" class=\"headerlink\" title=\"Struts2简介\"></a>Struts2简介</h2><h3 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h3><blockquote>\n<p>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层</p>\n<ul>\n<li>轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包</li>\n<li>MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程</li>\n</ul>\n</blockquote>\n<h3 id=\"对比Servlet\"><a href=\"#对比Servlet\" class=\"headerlink\" title=\"对比Servlet\"></a>对比Servlet</h3><h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><blockquote>\n<ol>\n<li>业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度</li>\n<li>提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型</li>\n</ol>\n</blockquote>\n<h4 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><blockquote>\n<p>执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率</p>\n</blockquote>\n<h2 id=\"Struts2开发实践\"><a href=\"#Struts2开发实践\" class=\"headerlink\" title=\"Struts2开发实践\"></a>Struts2开发实践</h2><h3 id=\"需要的基本lib包\"><a href=\"#需要的基本lib包\" class=\"headerlink\" title=\"需要的基本lib包\"></a>需要的基本lib包</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts_libs.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png\" alt=\"struts2_2.4\" title=\"\">\n                </div>\n                <div class=\"image-caption\">struts2_2.4</div>\n            </figure>\n<h3 id=\"具体开发流程\"><a href=\"#具体开发流程\" class=\"headerlink\" title=\"具体开发流程\"></a>具体开发流程</h3> <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h4 id=\"在web-xml中配置前端控制器\"><a href=\"#在web-xml中配置前端控制器\" class=\"headerlink\" title=\"在web.xml中配置前端控制器\"></a>在web.xml中配置前端控制器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Struts2前端控制器 --&gt;</div><div class=\"line\">&lt;filter&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">    &lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</div><div class=\"line\">&lt;/filter&gt;</div><div class=\"line\">&lt;filter-mapping&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"创建struts-xml\"><a href=\"#创建struts-xml\" class=\"headerlink\" title=\"创建struts.xml\"></a>创建struts.xml</h4><blockquote>\n<ul>\n<li>必须放置于src文件夹下,且名称必须为:struts.xml</li>\n<li>在struts.cml中配置请求与Action的关系</li>\n<li>在action中通过result设置转发的页面<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">        &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;</div><div class=\"line\">        &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&gt;</div><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">    &lt;!-- package :包,用于对Action进行封装.</div><div class=\"line\">        1. name :包名,根元素下可以有多个包,彼此之间不能重名</div><div class=\"line\">        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下</div><div class=\"line\">        3. namespace :命名空间,用于规定Action的访问路径,必须以&quot;/&quot;开头,可以限定接收action的请求地址</div><div class=\"line\">    --&gt;</div><div class=\"line\">    &lt;package name=&quot;struts2Demo&quot; namespace=&quot;/struts2Demo&quot; extends=&quot;struts-default&quot;&gt;</div><div class=\"line\">        &lt;!-- action :业务控制器.用于注册业务控制器组件(类)</div><div class=\"line\">            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名</div><div class=\"line\">            2. class :业务控制器组件,指定业务控制器对应的类</div><div class=\"line\">            3. method :方法,用于指定访问当前action时要调用的方法</div><div class=\"line\">            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action</div><div class=\"line\">        --&gt;</div><div class=\"line\">        &lt;action name=&quot;hello&quot; class=&quot;com.study.struts2Demo.action.HelloAction&quot; method=&quot;hello&quot;&gt;</div><div class=\"line\">            &lt;!-- result :输出组件,用于转发重定向,直接输出</div><div class=\"line\">                1. name :名臣一个action下可以有多个result,彼此之间不能重名</div><div class=\"line\">                2. 默认做转发,元素内设置转发的页面</div><div class=\"line\">            --&gt;</div><div class=\"line\">            &lt;result name=&quot;success&quot;&gt;</div><div class=\"line\">                /pages/hello.jsp</div><div class=\"line\">            &lt;/result&gt;</div><div class=\"line\">        &lt;/action&gt;</div><div class=\"line\">    &lt;/package&gt;</div><div class=\"line\">&lt;/struts&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写业务控制器Action\"><a href=\"#编写业务控制器Action\" class=\"headerlink\" title=\"编写业务控制器Action\"></a>编写业务控制器Action</h4><blockquote>\n<ul>\n<li>创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类<ul>\n<li>方法是public</li>\n<li>返回值是String</li>\n<li>参数列表为空</li>\n<li>编写业务方法<ul>\n<li>返回的字符串与struts.xml–&gt;action–&gt;result的name属性匹配,即 :根据此返回值可以找到对应的result</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写Jsp页面\"><a href=\"#编写Jsp页面\" class=\"headerlink\" title=\"编写Jsp页面\"></a>编写Jsp页面</h4>","site":{"data":{}},"excerpt":"<blockquote>\n<p>了解Struts2的原理以及开发流程<br>","more":"</p>\n</blockquote>\n<h2 id=\"Struts2简介\"><a href=\"#Struts2简介\" class=\"headerlink\" title=\"Struts2简介\"></a>Struts2简介</h2><h3 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h3><blockquote>\n<p>轻量级的MVC框架,主要解决了请求分发的问题,重心在控制层和表现层</p>\n<ul>\n<li>轻量级 :低侵入性,与业务代码的耦合性很低.即 :业务代码中基本不需要import它的包</li>\n<li>MVC框架 :Struts2实现了MVC,并提供一系列API,采用模式化方式简化业务开发过程</li>\n</ul>\n</blockquote>\n<h3 id=\"对比Servlet\"><a href=\"#对比Servlet\" class=\"headerlink\" title=\"对比Servlet\"></a>对比Servlet</h3><h4 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h4><blockquote>\n<ol>\n<li>业务代码解耦,适合团队开发,将请求发给不同的处理类,从而降低了业务代码的耦合程度</li>\n<li>提升开发效率,提供了一系列API,大大提升项目的开发效率。如 :使用拦截器自动给请求参数转型</li>\n</ol>\n</blockquote>\n<h4 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h4><blockquote>\n<p>执行效率偏低,需要使用反射、解析XML等技术手段，会降低执行效率</p>\n</blockquote>\n<h2 id=\"Struts2开发实践\"><a href=\"#Struts2开发实践\" class=\"headerlink\" title=\"Struts2开发实践\"></a>Struts2开发实践</h2><h3 id=\"需要的基本lib包\"><a href=\"#需要的基本lib包\" class=\"headerlink\" title=\"需要的基本lib包\"></a>需要的基本lib包</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts_libs.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_2.4_libs.png\" alt=\"struts2_2.4\" title=\"\">\n                </div>\n                <div class=\"image-caption\">struts2_2.4</div>\n            </figure>\n<h3 id=\"具体开发流程\"><a href=\"#具体开发流程\" class=\"headerlink\" title=\"具体开发流程\"></a>具体开发流程</h3> <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/struts2_request.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h4 id=\"在web-xml中配置前端控制器\"><a href=\"#在web-xml中配置前端控制器\" class=\"headerlink\" title=\"在web.xml中配置前端控制器\"></a>在web.xml中配置前端控制器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Struts2前端控制器 --&gt;</div><div class=\"line\">&lt;filter&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">    &lt;filter-class&gt;org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</div><div class=\"line\">&lt;/filter&gt;</div><div class=\"line\">&lt;filter-mapping&gt;</div><div class=\"line\">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</div><div class=\"line\">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"创建struts-xml\"><a href=\"#创建struts-xml\" class=\"headerlink\" title=\"创建struts.xml\"></a>创建struts.xml</h4><blockquote>\n<ul>\n<li>必须放置于src文件夹下,且名称必须为:struts.xml</li>\n<li>在struts.cml中配置请求与Action的关系</li>\n<li>在action中通过result设置转发的页面<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">        &quot;-//Apache Software Foundation//DTD Struts Configuration 2.5//EN&quot;</div><div class=\"line\">        &quot;http://struts.apache.org/dtds/struts-2.5.dtd&quot;&gt;</div><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">    &lt;!-- package :包,用于对Action进行封装.</div><div class=\"line\">        1. name :包名,根元素下可以有多个包,彼此之间不能重名</div><div class=\"line\">        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下</div><div class=\"line\">        3. namespace :命名空间,用于规定Action的访问路径,必须以&quot;/&quot;开头,可以限定接收action的请求地址</div><div class=\"line\">    --&gt;</div><div class=\"line\">    &lt;package name=&quot;struts2Demo&quot; namespace=&quot;/struts2Demo&quot; extends=&quot;struts-default&quot;&gt;</div><div class=\"line\">        &lt;!-- action :业务控制器.用于注册业务控制器组件(类)</div><div class=\"line\">            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名</div><div class=\"line\">            2. class :业务控制器组件,指定业务控制器对应的类</div><div class=\"line\">            3. method :方法,用于指定访问当前action时要调用的方法</div><div class=\"line\">            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action</div><div class=\"line\">        --&gt;</div><div class=\"line\">        &lt;action name=&quot;hello&quot; class=&quot;com.study.struts2Demo.action.HelloAction&quot; method=&quot;hello&quot;&gt;</div><div class=\"line\">            &lt;!-- result :输出组件,用于转发重定向,直接输出</div><div class=\"line\">                1. name :名臣一个action下可以有多个result,彼此之间不能重名</div><div class=\"line\">                2. 默认做转发,元素内设置转发的页面</div><div class=\"line\">            --&gt;</div><div class=\"line\">            &lt;result name=&quot;success&quot;&gt;</div><div class=\"line\">                /pages/hello.jsp</div><div class=\"line\">            &lt;/result&gt;</div><div class=\"line\">        &lt;/action&gt;</div><div class=\"line\">    &lt;/package&gt;</div><div class=\"line\">&lt;/struts&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写业务控制器Action\"><a href=\"#编写业务控制器Action\" class=\"headerlink\" title=\"编写业务控制器Action\"></a>编写业务控制器Action</h4><blockquote>\n<ul>\n<li>创建业务控制器组件,命名规则:XxxAction,该组件满足是一个JavaBean的规范类<ul>\n<li>方法是public</li>\n<li>返回值是String</li>\n<li>参数列表为空</li>\n<li>编写业务方法<ul>\n<li>返回的字符串与struts.xml–&gt;action–&gt;result的name属性匹配,即 :根据此返回值可以找到对应的result</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h4 id=\"编写Jsp页面\"><a href=\"#编写Jsp页面\" class=\"headerlink\" title=\"编写Jsp页面\"></a>编写Jsp页面</h4>"},{"title":"Struts2_2_了解Struts的原理","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","date":"2017-06-08T07:44:13.000Z","description":"Struts2的学习以及开发实践","_content":"> 学习Struts2的内部原理\n<!-- more -->\n\n## Struts2中的参数传递\n\n### VakueStack值栈\n![](http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg)\n>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问\n\n#### 访问valueStack\n>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试\n\n-  输出栈顶 &lt;s:property/&gt;\n```\nValueStack栈顶的变化\n      默认情况下栈顶为Action\n      循环过程中栈顶为循环变量\n          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象\n          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值\n```\n- 访问Context对象 :输出context对象数据\n```\nOGNL表达式以\"#\"开头\n以key来访问context对象的值,通过\"#key\"获取context中某属性的\n值\n```\n","source":"_drafts/Java/Struts2/Struts2-2-了解Struts的原理.md","raw":"---\ntitle: Struts2_2_了解Struts的原理\ntags:\n  - Struts2\n  - Java开发框架\n  - ValueStack\n  - OGNL\ncategories:\n  - Java\n  - Struts2\nkeywords: 'Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程'\ndate: 2017-06-08 15:44:13\ndescription: Struts2的学习以及开发实践\n---\n> 学习Struts2的内部原理\n<!-- more -->\n\n## Struts2中的参数传递\n\n### VakueStack值栈\n![](http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg)\n>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问\n\n#### 访问valueStack\n>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试\n\n-  输出栈顶 &lt;s:property/&gt;\n```\nValueStack栈顶的变化\n      默认情况下栈顶为Action\n      循环过程中栈顶为循环变量\n          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象\n          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值\n```\n- 访问Context对象 :输出context对象数据\n```\nOGNL表达式以\"#\"开头\n以key来访问context对象的值,通过\"#key\"获取context中某属性的\n值\n```\n","slug":"Java/Struts2/Struts2-2-了解Struts的原理","published":0,"updated":"2017-06-09T02:34:36.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhooj002c2whq1ow51duo","content":"<blockquote>\n<p>学习Struts2的内部原理<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"Struts2中的参数传递\"><a href=\"#Struts2中的参数传递\" class=\"headerlink\" title=\"Struts2中的参数传递\"></a>Struts2中的参数传递</h2><h3 id=\"VakueStack值栈\"><a href=\"#VakueStack值栈\" class=\"headerlink\" title=\"VakueStack值栈\"></a>VakueStack值栈</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问</p>\n</blockquote>\n<h4 id=\"访问valueStack\"><a href=\"#访问valueStack\" class=\"headerlink\" title=\"访问valueStack\"></a>访问valueStack</h4><blockquote>\n<p>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试</p>\n</blockquote>\n<ul>\n<li><p>输出栈顶 &lt;s:property/&gt;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ValueStack栈顶的变化</div><div class=\"line\">      默认情况下栈顶为Action</div><div class=\"line\">      循环过程中栈顶为循环变量</div><div class=\"line\">          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象</div><div class=\"line\">          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值</div></pre></td></tr></table></figure>\n</li>\n<li><p>访问Context对象 :输出context对象数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">OGNL表达式以&quot;#&quot;开头</div><div class=\"line\">以key来访问context对象的值,通过&quot;#key&quot;获取context中某属性的</div><div class=\"line\">值</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>学习Struts2的内部原理<br>","more":"</p>\n</blockquote>\n<h2 id=\"Struts2中的参数传递\"><a href=\"#Struts2中的参数传递\" class=\"headerlink\" title=\"Struts2中的参数传递\"></a>Struts2中的参数传递</h2><h3 id=\"VakueStack值栈\"><a href=\"#VakueStack值栈\" class=\"headerlink\" title=\"VakueStack值栈\"></a>VakueStack值栈</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问</p>\n</blockquote>\n<h4 id=\"访问valueStack\"><a href=\"#访问valueStack\" class=\"headerlink\" title=\"访问valueStack\"></a>访问valueStack</h4><blockquote>\n<p>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试</p>\n</blockquote>\n<ul>\n<li><p>输出栈顶 &lt;s:property/&gt;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ValueStack栈顶的变化</div><div class=\"line\">      默认情况下栈顶为Action</div><div class=\"line\">      循环过程中栈顶为循环变量</div><div class=\"line\">          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象</div><div class=\"line\">          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值</div></pre></td></tr></table></figure>\n</li>\n<li><p>访问Context对象 :输出context对象数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">OGNL表达式以&quot;#&quot;开头</div><div class=\"line\">以key来访问context对象的值,通过&quot;#key&quot;获取context中某属性的</div><div class=\"line\">值</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"简单了解MVC框架","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","date":"2017-06-08T07:57:48.000Z","description":null,"_content":"> 简单了解下MVC设计模式以及在各种情境下的应用\n<!-- more -->\n\n## MVC简介\n>- (模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层\n>- (视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP\n>- (控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程\n\n## MVC的作用\n>- 将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式\n\n## MVC的几种实践应用\n### Servlet中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png)\n### Spring中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png)\n### Struts2中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png)\n","source":"_drafts/Java/MVC/简单了解MVC框架.md","raw":"---\ntitle: 简单了解MVC框架\ntags:\n  - MVC\n  - Java开发框架\ncategories:\n  - Java\n  - MVC\nkeywords: 'Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程'\ndate: 2017-06-08 15:57:48\ndescription:\n---\n> 简单了解下MVC设计模式以及在各种情境下的应用\n<!-- more -->\n\n## MVC简介\n>- (模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层\n>- (视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP\n>- (控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程\n\n## MVC的作用\n>- 将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式\n\n## MVC的几种实践应用\n### Servlet中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png)\n### Spring中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png)\n### Struts2中实现MVC\n![](http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png)\n","slug":"Java/MVC/简单了解MVC框架","published":0,"updated":"2017-06-08T09:03:50.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoox002e2whqm6xienhx","content":"<blockquote>\n<p>简单了解下MVC设计模式以及在各种情境下的应用<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"MVC简介\"><a href=\"#MVC简介\" class=\"headerlink\" title=\"MVC简介\"></a>MVC简介</h2><blockquote>\n<ul>\n<li>(模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层</li>\n<li>(视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP</li>\n<li>(控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的作用\"><a href=\"#MVC的作用\" class=\"headerlink\" title=\"MVC的作用\"></a>MVC的作用</h2><blockquote>\n<ul>\n<li>将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的几种实践应用\"><a href=\"#MVC的几种实践应用\" class=\"headerlink\" title=\"MVC的几种实践应用\"></a>MVC的几种实践应用</h2><h3 id=\"Servlet中实现MVC\"><a href=\"#Servlet中实现MVC\" class=\"headerlink\" title=\"Servlet中实现MVC\"></a>Servlet中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Spring中实现MVC\"><a href=\"#Spring中实现MVC\" class=\"headerlink\" title=\"Spring中实现MVC\"></a>Spring中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Struts2中实现MVC\"><a href=\"#Struts2中实现MVC\" class=\"headerlink\" title=\"Struts2中实现MVC\"></a>Struts2中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>简单了解下MVC设计模式以及在各种情境下的应用<br>","more":"</p>\n</blockquote>\n<h2 id=\"MVC简介\"><a href=\"#MVC简介\" class=\"headerlink\" title=\"MVC简介\"></a>MVC简介</h2><blockquote>\n<ul>\n<li>(模型)M-Model :模型:业务逻辑和业务数据的处理,包括实体类 DAO层 Service业务层</li>\n<li>(视图)V-View :视图层 负责界面和用户交互,不包含业务逻辑的JSP</li>\n<li>(控制器)C-Controller :控制层:模型层和视图层之间的桥梁  用于控制业务流程</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的作用\"><a href=\"#MVC的作用\" class=\"headerlink\" title=\"MVC的作用\"></a>MVC的作用</h2><blockquote>\n<ul>\n<li>将M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式</li>\n</ul>\n</blockquote>\n<h2 id=\"MVC的几种实践应用\"><a href=\"#MVC的几种实践应用\" class=\"headerlink\" title=\"MVC的几种实践应用\"></a>MVC的几种实践应用</h2><h3 id=\"Servlet中实现MVC\"><a href=\"#Servlet中实现MVC\" class=\"headerlink\" title=\"Servlet中实现MVC\"></a>Servlet中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Servlet_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Spring中实现MVC\"><a href=\"#Spring中实现MVC\" class=\"headerlink\" title=\"Spring中实现MVC\"></a>Spring中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Spring_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Struts2中实现MVC\"><a href=\"#Struts2中实现MVC\" class=\"headerlink\" title=\"Struts2中实现MVC\"></a>Struts2中实现MVC</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/Struts2_MVC.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>"},{"title":"Hexo中主题配置文件(_config.yml)详解","date":"2017-06-06T05:31:30.000Z","_content":"# 主题相关配置说明 :以indigo主题为例\n<!-- more -->\n>- 供参考,有时间再修改\n\n```\nmenu:\n  home:\n    text: 主页\n    url: /\n  archives:\n    text: 归档\n    url: /archives\n  tags:\n    text: 标签\n    url: /tags\n  th-list:\n    text: 分类\n    url: /categories\n  github:\n    url: https://github.com/wangxinat\n    target: _blank\n  weibo:\n    text: 微博\n    url: http://www.weibo.com/wangxinat\n    target: _blank\n  link:\n    text: other\n    url: /custom\n\n# 你的头像url\navatar: /img/avatar.jpg\n# avatar link 点击头像链接\navatar_link: /\n# 头像背景图\nbrand: /img/brand.jpg\n# favicon\nfavicon: /img/favicon.ico\n\n# email\nemail: wangxinat163@163.com\n\n# 设置 Android L Chrome 浏览器状态栏颜色\ncolor: '#3F51B5'\n\n# 页面标题\ntags_title: Tags\narchives_title: Archives\ncategories_title: Categories\n\n# 文章截断\nexcerpt_render: false\nexcerpt_length: 200\nexcerpt_link: 阅读全文...\nmathjax: false\narchive_yearly: true\n\n# 是否显示文章最后更新时间\nshow_last_updated: true\n\n# 是否开启分享\nshare: true\n\n# 是否开启打赏，关闭 reward: false\nreward:\n  title: 感谢打赏~\n  wechat: /img/wechat.jpg     #微信，关闭设为 false\n  alipay: /img/alipay.jpg     #支付宝，关闭设为 false\n\n# 是否开启搜索\nsearch: true\n\n# 是否大屏幕下文章页隐藏导航\nhideMenu: true\n\n# 是否开启toc\n# toc: false\ntoc:\n  list_number: true  # 是否显示数字排序\n\n# 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io\npostMessage: <a href=\"<%- url_for(page.path).replace(/index\\.html$/, '') %>\" target=\"_self\" rel=\"external\"><%- page.permalink.replace(/index\\.html$/, '') %>待开发</a>\n\n# 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447\ncnzz: false\n\n# 百度统计，如要开启，改为你的 key\nbaidu_tongji: false\n\n# 腾讯分析，如要开启，输入站点id\ntajs: false\n\n# google\ngoogle_analytics: false\ngoogle_site_verification: false\n\n# less\nless:\n  compress: true\n  paths:\n    - source/css/style.less\n\n# 以下评论插件开启一个即可\n# 是否开启多说评论，填写你在多说创建的站点二级域名\nduoshuo: false\n# 是否开启多说评论计数（该服务不稳定）\nduoshuo_count: false\n# 使用 disqus 时关闭多说评论\ndisqus_shortname: false\n# 是否开启友言评论, 填写友言用户id\nuyan_uid: 2135775\n# 是否开启网易云跟帖， 填写app sdk中的app key\nwangyi_ygt: false\n# 是否使用 gitment，https://github.com/imsun/gitment\ngitment: false\n# gitment:\n#   owner:\n#   repo:\n#   client_id:\n#   client_secret:\n\n# 规范网址\n# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径\n# https://support.google.com/webmasters/answer/139066\n# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net\ncanonical: false\n\n# 版权起始年份\nsince_year: 2017\n\n# 用户页面中作者相关的描述性文字，如不需要设为 false\nabout: 用户页面中作者相关的描述性文字，如不需要设为 false\n\n# “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/\nvisit_counter:\n  site_uv: 站点总访客数：\n  site_pv: 站点总访问量：\n\n# 动态定义title\ntitle_change:\n  normal: (つェ⊂)HaHa!真棒!\n  leave: Welcome Come Here\n\n# 设置为 true 发布后将使用 unpkg cdn\ncdn: true\n\n# 设置为 true 将使用 lightbox render 图片\nlightbox: true\n```\n","source":"_drafts/前端开发/Hexo/Hexo中主题配置文件(_config.yml)详解.md","raw":"---\ntitle: Hexo中主题配置文件(_config.yml)详解\ndate: 2017-06-06 13:31:30\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\n---\n# 主题相关配置说明 :以indigo主题为例\n<!-- more -->\n>- 供参考,有时间再修改\n\n```\nmenu:\n  home:\n    text: 主页\n    url: /\n  archives:\n    text: 归档\n    url: /archives\n  tags:\n    text: 标签\n    url: /tags\n  th-list:\n    text: 分类\n    url: /categories\n  github:\n    url: https://github.com/wangxinat\n    target: _blank\n  weibo:\n    text: 微博\n    url: http://www.weibo.com/wangxinat\n    target: _blank\n  link:\n    text: other\n    url: /custom\n\n# 你的头像url\navatar: /img/avatar.jpg\n# avatar link 点击头像链接\navatar_link: /\n# 头像背景图\nbrand: /img/brand.jpg\n# favicon\nfavicon: /img/favicon.ico\n\n# email\nemail: wangxinat163@163.com\n\n# 设置 Android L Chrome 浏览器状态栏颜色\ncolor: '#3F51B5'\n\n# 页面标题\ntags_title: Tags\narchives_title: Archives\ncategories_title: Categories\n\n# 文章截断\nexcerpt_render: false\nexcerpt_length: 200\nexcerpt_link: 阅读全文...\nmathjax: false\narchive_yearly: true\n\n# 是否显示文章最后更新时间\nshow_last_updated: true\n\n# 是否开启分享\nshare: true\n\n# 是否开启打赏，关闭 reward: false\nreward:\n  title: 感谢打赏~\n  wechat: /img/wechat.jpg     #微信，关闭设为 false\n  alipay: /img/alipay.jpg     #支付宝，关闭设为 false\n\n# 是否开启搜索\nsearch: true\n\n# 是否大屏幕下文章页隐藏导航\nhideMenu: true\n\n# 是否开启toc\n# toc: false\ntoc:\n  list_number: true  # 是否显示数字排序\n\n# 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io\npostMessage: <a href=\"<%- url_for(page.path).replace(/index\\.html$/, '') %>\" target=\"_self\" rel=\"external\"><%- page.permalink.replace(/index\\.html$/, '') %>待开发</a>\n\n# 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447\ncnzz: false\n\n# 百度统计，如要开启，改为你的 key\nbaidu_tongji: false\n\n# 腾讯分析，如要开启，输入站点id\ntajs: false\n\n# google\ngoogle_analytics: false\ngoogle_site_verification: false\n\n# less\nless:\n  compress: true\n  paths:\n    - source/css/style.less\n\n# 以下评论插件开启一个即可\n# 是否开启多说评论，填写你在多说创建的站点二级域名\nduoshuo: false\n# 是否开启多说评论计数（该服务不稳定）\nduoshuo_count: false\n# 使用 disqus 时关闭多说评论\ndisqus_shortname: false\n# 是否开启友言评论, 填写友言用户id\nuyan_uid: 2135775\n# 是否开启网易云跟帖， 填写app sdk中的app key\nwangyi_ygt: false\n# 是否使用 gitment，https://github.com/imsun/gitment\ngitment: false\n# gitment:\n#   owner:\n#   repo:\n#   client_id:\n#   client_secret:\n\n# 规范网址\n# 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径\n# https://support.google.com/webmasters/answer/139066\n# 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net\ncanonical: false\n\n# 版权起始年份\nsince_year: 2017\n\n# 用户页面中作者相关的描述性文字，如不需要设为 false\nabout: 用户页面中作者相关的描述性文字，如不需要设为 false\n\n# “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/\nvisit_counter:\n  site_uv: 站点总访客数：\n  site_pv: 站点总访问量：\n\n# 动态定义title\ntitle_change:\n  normal: (つェ⊂)HaHa!真棒!\n  leave: Welcome Come Here\n\n# 设置为 true 发布后将使用 unpkg cdn\ncdn: true\n\n# 设置为 true 将使用 lightbox render 图片\nlightbox: true\n```\n","slug":"前端开发/Hexo/Hexo中主题配置文件(_config.yml)详解","published":0,"updated":"2017-06-08T06:14:58.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhopn002h2whqt3eifg7m","content":"<h1 id=\"主题相关配置说明-以indigo主题为例\"><a href=\"#主题相关配置说明-以indigo主题为例\" class=\"headerlink\" title=\"主题相关配置说明 :以indigo主题为例\"></a>主题相关配置说明 :以indigo主题为例</h1><a id=\"more\"></a>\n<blockquote>\n<ul>\n<li>供参考,有时间再修改</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:</div><div class=\"line\">  home:</div><div class=\"line\">    text: 主页</div><div class=\"line\">    url: /</div><div class=\"line\">  archives:</div><div class=\"line\">    text: 归档</div><div class=\"line\">    url: /archives</div><div class=\"line\">  tags:</div><div class=\"line\">    text: 标签</div><div class=\"line\">    url: /tags</div><div class=\"line\">  th-list:</div><div class=\"line\">    text: 分类</div><div class=\"line\">    url: /categories</div><div class=\"line\">  github:</div><div class=\"line\">    url: https://github.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  weibo:</div><div class=\"line\">    text: 微博</div><div class=\"line\">    url: http://www.weibo.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  link:</div><div class=\"line\">    text: other</div><div class=\"line\">    url: /custom</div><div class=\"line\"></div><div class=\"line\"># 你的头像url</div><div class=\"line\">avatar: /img/avatar.jpg</div><div class=\"line\"># avatar link 点击头像链接</div><div class=\"line\">avatar_link: /</div><div class=\"line\"># 头像背景图</div><div class=\"line\">brand: /img/brand.jpg</div><div class=\"line\"># favicon</div><div class=\"line\">favicon: /img/favicon.ico</div><div class=\"line\"></div><div class=\"line\"># email</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\"></div><div class=\"line\"># 设置 Android L Chrome 浏览器状态栏颜色</div><div class=\"line\">color: &apos;#3F51B5&apos;</div><div class=\"line\"></div><div class=\"line\"># 页面标题</div><div class=\"line\">tags_title: Tags</div><div class=\"line\">archives_title: Archives</div><div class=\"line\">categories_title: Categories</div><div class=\"line\"></div><div class=\"line\"># 文章截断</div><div class=\"line\">excerpt_render: false</div><div class=\"line\">excerpt_length: 200</div><div class=\"line\">excerpt_link: 阅读全文...</div><div class=\"line\">mathjax: false</div><div class=\"line\">archive_yearly: true</div><div class=\"line\"></div><div class=\"line\"># 是否显示文章最后更新时间</div><div class=\"line\">show_last_updated: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启分享</div><div class=\"line\">share: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启打赏，关闭 reward: false</div><div class=\"line\">reward:</div><div class=\"line\">  title: 感谢打赏~</div><div class=\"line\">  wechat: /img/wechat.jpg     #微信，关闭设为 false</div><div class=\"line\">  alipay: /img/alipay.jpg     #支付宝，关闭设为 false</div><div class=\"line\"></div><div class=\"line\"># 是否开启搜索</div><div class=\"line\">search: true</div><div class=\"line\"></div><div class=\"line\"># 是否大屏幕下文章页隐藏导航</div><div class=\"line\">hideMenu: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启toc</div><div class=\"line\"># toc: false</div><div class=\"line\">toc:</div><div class=\"line\">  list_number: true  # 是否显示数字排序</div><div class=\"line\"></div><div class=\"line\"># 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io</div><div class=\"line\">postMessage: &lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_self&quot; rel=&quot;external&quot;&gt;&lt;%- page.permalink.replace(/index\\.html$/, &apos;&apos;) %&gt;待开发&lt;/a&gt;</div><div class=\"line\"></div><div class=\"line\"># 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447</div><div class=\"line\">cnzz: false</div><div class=\"line\"></div><div class=\"line\"># 百度统计，如要开启，改为你的 key</div><div class=\"line\">baidu_tongji: false</div><div class=\"line\"></div><div class=\"line\"># 腾讯分析，如要开启，输入站点id</div><div class=\"line\">tajs: false</div><div class=\"line\"></div><div class=\"line\"># google</div><div class=\"line\">google_analytics: false</div><div class=\"line\">google_site_verification: false</div><div class=\"line\"></div><div class=\"line\"># less</div><div class=\"line\">less:</div><div class=\"line\">  compress: true</div><div class=\"line\">  paths:</div><div class=\"line\">    - source/css/style.less</div><div class=\"line\"></div><div class=\"line\"># 以下评论插件开启一个即可</div><div class=\"line\"># 是否开启多说评论，填写你在多说创建的站点二级域名</div><div class=\"line\">duoshuo: false</div><div class=\"line\"># 是否开启多说评论计数（该服务不稳定）</div><div class=\"line\">duoshuo_count: false</div><div class=\"line\"># 使用 disqus 时关闭多说评论</div><div class=\"line\">disqus_shortname: false</div><div class=\"line\"># 是否开启友言评论, 填写友言用户id</div><div class=\"line\">uyan_uid: 2135775</div><div class=\"line\"># 是否开启网易云跟帖， 填写app sdk中的app key</div><div class=\"line\">wangyi_ygt: false</div><div class=\"line\"># 是否使用 gitment，https://github.com/imsun/gitment</div><div class=\"line\">gitment: false</div><div class=\"line\"># gitment:</div><div class=\"line\">#   owner:</div><div class=\"line\">#   repo:</div><div class=\"line\">#   client_id:</div><div class=\"line\">#   client_secret:</div><div class=\"line\"></div><div class=\"line\"># 规范网址</div><div class=\"line\"># 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径</div><div class=\"line\"># https://support.google.com/webmasters/answer/139066</div><div class=\"line\"># 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net</div><div class=\"line\">canonical: false</div><div class=\"line\"></div><div class=\"line\"># 版权起始年份</div><div class=\"line\">since_year: 2017</div><div class=\"line\"></div><div class=\"line\"># 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\">about: 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\"></div><div class=\"line\"># “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/</div><div class=\"line\">visit_counter:</div><div class=\"line\">  site_uv: 站点总访客数：</div><div class=\"line\">  site_pv: 站点总访问量：</div><div class=\"line\"></div><div class=\"line\"># 动态定义title</div><div class=\"line\">title_change:</div><div class=\"line\">  normal: (つェ⊂)HaHa!真棒!</div><div class=\"line\">  leave: Welcome Come Here</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 发布后将使用 unpkg cdn</div><div class=\"line\">cdn: true</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 将使用 lightbox render 图片</div><div class=\"line\">lightbox: true</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"主题相关配置说明-以indigo主题为例\"><a href=\"#主题相关配置说明-以indigo主题为例\" class=\"headerlink\" title=\"主题相关配置说明 :以indigo主题为例\"></a>主题相关配置说明 :以indigo主题为例</h1>","more":"<blockquote>\n<ul>\n<li>供参考,有时间再修改</li>\n</ul>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div></pre></td><td class=\"code\"><pre><div class=\"line\">menu:</div><div class=\"line\">  home:</div><div class=\"line\">    text: 主页</div><div class=\"line\">    url: /</div><div class=\"line\">  archives:</div><div class=\"line\">    text: 归档</div><div class=\"line\">    url: /archives</div><div class=\"line\">  tags:</div><div class=\"line\">    text: 标签</div><div class=\"line\">    url: /tags</div><div class=\"line\">  th-list:</div><div class=\"line\">    text: 分类</div><div class=\"line\">    url: /categories</div><div class=\"line\">  github:</div><div class=\"line\">    url: https://github.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  weibo:</div><div class=\"line\">    text: 微博</div><div class=\"line\">    url: http://www.weibo.com/wangxinat</div><div class=\"line\">    target: _blank</div><div class=\"line\">  link:</div><div class=\"line\">    text: other</div><div class=\"line\">    url: /custom</div><div class=\"line\"></div><div class=\"line\"># 你的头像url</div><div class=\"line\">avatar: /img/avatar.jpg</div><div class=\"line\"># avatar link 点击头像链接</div><div class=\"line\">avatar_link: /</div><div class=\"line\"># 头像背景图</div><div class=\"line\">brand: /img/brand.jpg</div><div class=\"line\"># favicon</div><div class=\"line\">favicon: /img/favicon.ico</div><div class=\"line\"></div><div class=\"line\"># email</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\"></div><div class=\"line\"># 设置 Android L Chrome 浏览器状态栏颜色</div><div class=\"line\">color: &apos;#3F51B5&apos;</div><div class=\"line\"></div><div class=\"line\"># 页面标题</div><div class=\"line\">tags_title: Tags</div><div class=\"line\">archives_title: Archives</div><div class=\"line\">categories_title: Categories</div><div class=\"line\"></div><div class=\"line\"># 文章截断</div><div class=\"line\">excerpt_render: false</div><div class=\"line\">excerpt_length: 200</div><div class=\"line\">excerpt_link: 阅读全文...</div><div class=\"line\">mathjax: false</div><div class=\"line\">archive_yearly: true</div><div class=\"line\"></div><div class=\"line\"># 是否显示文章最后更新时间</div><div class=\"line\">show_last_updated: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启分享</div><div class=\"line\">share: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启打赏，关闭 reward: false</div><div class=\"line\">reward:</div><div class=\"line\">  title: 感谢打赏~</div><div class=\"line\">  wechat: /img/wechat.jpg     #微信，关闭设为 false</div><div class=\"line\">  alipay: /img/alipay.jpg     #支付宝，关闭设为 false</div><div class=\"line\"></div><div class=\"line\"># 是否开启搜索</div><div class=\"line\">search: true</div><div class=\"line\"></div><div class=\"line\"># 是否大屏幕下文章页隐藏导航</div><div class=\"line\">hideMenu: true</div><div class=\"line\"></div><div class=\"line\"># 是否开启toc</div><div class=\"line\"># toc: false</div><div class=\"line\">toc:</div><div class=\"line\">  list_number: true  # 是否显示数字排序</div><div class=\"line\"></div><div class=\"line\"># 文章页留言内容，hexo中所有变量及辅助函数等均可调用，具体请查阅 hexo.io</div><div class=\"line\">postMessage: &lt;a href=&quot;&lt;%- url_for(page.path).replace(/index\\.html$/, &apos;&apos;) %&gt;&quot; target=&quot;_self&quot; rel=&quot;external&quot;&gt;&lt;%- page.permalink.replace(/index\\.html$/, &apos;&apos;) %&gt;待开发&lt;/a&gt;</div><div class=\"line\"></div><div class=\"line\"># 站长统计，如要开启，输入CNZZ站点id，如 cnzz: 1255152447</div><div class=\"line\">cnzz: false</div><div class=\"line\"></div><div class=\"line\"># 百度统计，如要开启，改为你的 key</div><div class=\"line\">baidu_tongji: false</div><div class=\"line\"></div><div class=\"line\"># 腾讯分析，如要开启，输入站点id</div><div class=\"line\">tajs: false</div><div class=\"line\"></div><div class=\"line\"># google</div><div class=\"line\">google_analytics: false</div><div class=\"line\">google_site_verification: false</div><div class=\"line\"></div><div class=\"line\"># less</div><div class=\"line\">less:</div><div class=\"line\">  compress: true</div><div class=\"line\">  paths:</div><div class=\"line\">    - source/css/style.less</div><div class=\"line\"></div><div class=\"line\"># 以下评论插件开启一个即可</div><div class=\"line\"># 是否开启多说评论，填写你在多说创建的站点二级域名</div><div class=\"line\">duoshuo: false</div><div class=\"line\"># 是否开启多说评论计数（该服务不稳定）</div><div class=\"line\">duoshuo_count: false</div><div class=\"line\"># 使用 disqus 时关闭多说评论</div><div class=\"line\">disqus_shortname: false</div><div class=\"line\"># 是否开启友言评论, 填写友言用户id</div><div class=\"line\">uyan_uid: 2135775</div><div class=\"line\"># 是否开启网易云跟帖， 填写app sdk中的app key</div><div class=\"line\">wangyi_ygt: false</div><div class=\"line\"># 是否使用 gitment，https://github.com/imsun/gitment</div><div class=\"line\">gitment: false</div><div class=\"line\"># gitment:</div><div class=\"line\">#   owner:</div><div class=\"line\">#   repo:</div><div class=\"line\">#   client_id:</div><div class=\"line\">#   client_secret:</div><div class=\"line\"></div><div class=\"line\"># 规范网址</div><div class=\"line\"># 让搜索引擎重定向你的不同域名、不同子域、同域不同目录的站点到你期望的路径</div><div class=\"line\"># https://support.google.com/webmasters/answer/139066</div><div class=\"line\"># 假设配置为 canonical: http://imys.net，那么从搜索引擎中 www.imys.net 进入会重定向到 imys.net</div><div class=\"line\">canonical: false</div><div class=\"line\"></div><div class=\"line\"># 版权起始年份</div><div class=\"line\">since_year: 2017</div><div class=\"line\"></div><div class=\"line\"># 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\">about: 用户页面中作者相关的描述性文字，如不需要设为 false</div><div class=\"line\"></div><div class=\"line\"># “不蒜子”访问量统计，详见 http://ibruce.info/2015/04/04/busuanzi/</div><div class=\"line\">visit_counter:</div><div class=\"line\">  site_uv: 站点总访客数：</div><div class=\"line\">  site_pv: 站点总访问量：</div><div class=\"line\"></div><div class=\"line\"># 动态定义title</div><div class=\"line\">title_change:</div><div class=\"line\">  normal: (つェ⊂)HaHa!真棒!</div><div class=\"line\">  leave: Welcome Come Here</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 发布后将使用 unpkg cdn</div><div class=\"line\">cdn: true</div><div class=\"line\"></div><div class=\"line\"># 设置为 true 将使用 lightbox render 图片</div><div class=\"line\">lightbox: true</div></pre></td></tr></table></figure>"},{"title":"Hexo中遇到的问题及解决","comments":1,"keywords":"Blog,Hexo","date":"2017-06-06T08:23:14.000Z","description":"Hexo中遇到的问题及解决","_content":"- Hexo中遇到的问题及解决\n<!-- more -->\n\n## 分类和标签云失效\n\n### 标签的链接设置\n```\nhexo new page \"tags\"\n编辑tags.md,页面的类型设置为 tags\ntitle: TagCloud\ndate: 2017-06-06 16:22:17\ntype: \"tags\"\nlayout: tags\n```\n\n### 分类的链接设置\n ```\n hexo new page \"tags\"\n 编辑tags.md,页面的类型设置为 tags\n title: categories\n date: 2017-06-06 18:06:04\n layout: categories\n ```\n\n## 评论系统的开启\n>- 不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论\n>- 在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖\n![](http://or5qwkb5l.bkt.clouddn.com/comments.png \"\")\n\n## 指定404错误页面\n>- 方法一 :直接在source下创建404.html自定义跳转地址\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n```\n>- 方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)\n```\n---\ntitle: 404 Not Found\ntoc: false\nreward: false\nshare: false\ncomments: false\npermalink: /404\n---\n```\n","source":"_drafts/前端开发/Hexo/Hexo中遇到的问题及解决.md","raw":"---\ntitle: Hexo中遇到的问题及解决\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\ncomments: true\nkeywords: 'Blog,Hexo'\ndate: 2017-06-06 16:23:14\ndescription: Hexo中遇到的问题及解决\n---\n- Hexo中遇到的问题及解决\n<!-- more -->\n\n## 分类和标签云失效\n\n### 标签的链接设置\n```\nhexo new page \"tags\"\n编辑tags.md,页面的类型设置为 tags\ntitle: TagCloud\ndate: 2017-06-06 16:22:17\ntype: \"tags\"\nlayout: tags\n```\n\n### 分类的链接设置\n ```\n hexo new page \"tags\"\n 编辑tags.md,页面的类型设置为 tags\n title: categories\n date: 2017-06-06 18:06:04\n layout: categories\n ```\n\n## 评论系统的开启\n>- 不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论\n>- 在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖\n![](http://or5qwkb5l.bkt.clouddn.com/comments.png \"\")\n\n## 指定404错误页面\n>- 方法一 :直接在source下创建404.html自定义跳转地址\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>]\n  \t<meta charset=\"UTF-8\">\n  \t<title>404</title>\n  </head>\n  <body>\n  \t<script type=\"text/javascript\" src=\"http://www.icoder.xin\" charset=\"utf-8\"></script>\n  </body>\n</html>\n```\n>- 方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)\n```\n---\ntitle: 404 Not Found\ntoc: false\nreward: false\nshare: false\ncomments: false\npermalink: /404\n---\n```\n","slug":"前端开发/Hexo/Hexo中遇到的问题及解决","published":0,"updated":"2017-06-08T06:14:13.358Z","layout":"post","photos":[],"link":"","_id":"cj3wuhosj002z2whqd6noeyfg","content":"<ul>\n<li>Hexo中遇到的问题及解决<a id=\"more\"></a>\n</li>\n</ul>\n<h2 id=\"分类和标签云失效\"><a href=\"#分类和标签云失效\" class=\"headerlink\" title=\"分类和标签云失效\"></a>分类和标签云失效</h2><h3 id=\"标签的链接设置\"><a href=\"#标签的链接设置\" class=\"headerlink\" title=\"标签的链接设置\"></a>标签的链接设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: TagCloud</div><div class=\"line\">date: 2017-06-06 16:22:17</div><div class=\"line\">type: &quot;tags&quot;</div><div class=\"line\">layout: tags</div></pre></td></tr></table></figure>\n<h3 id=\"分类的链接设置\"><a href=\"#分类的链接设置\" class=\"headerlink\" title=\"分类的链接设置\"></a>分类的链接设置</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: categories</div><div class=\"line\">date: 2017-06-06 18:06:04</div><div class=\"line\">layout: categories</div></pre></td></tr></table></figure>\n<h2 id=\"评论系统的开启\"><a href=\"#评论系统的开启\" class=\"headerlink\" title=\"评论系统的开启\"></a>评论系统的开启</h2><blockquote>\n<ul>\n<li>不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论</li>\n<li>在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/comments.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"指定404错误页面\"><a href=\"#指定404错误页面\" class=\"headerlink\" title=\"指定404错误页面\"></a>指定404错误页面</h2><blockquote>\n<ul>\n<li><p>方法一 :直接在source下创建404.html自定义跳转地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">  &lt;head&gt;]</div><div class=\"line\">  \t&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">  \t&lt;title&gt;404&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">  \t&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.icoder.xin&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 404 Not Found</div><div class=\"line\">toc: false</div><div class=\"line\">reward: false</div><div class=\"line\">share: false</div><div class=\"line\">comments: false</div><div class=\"line\">permalink: /404</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"<ul>\n<li>Hexo中遇到的问题及解决","more":"</li>\n</ul>\n<h2 id=\"分类和标签云失效\"><a href=\"#分类和标签云失效\" class=\"headerlink\" title=\"分类和标签云失效\"></a>分类和标签云失效</h2><h3 id=\"标签的链接设置\"><a href=\"#标签的链接设置\" class=\"headerlink\" title=\"标签的链接设置\"></a>标签的链接设置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: TagCloud</div><div class=\"line\">date: 2017-06-06 16:22:17</div><div class=\"line\">type: &quot;tags&quot;</div><div class=\"line\">layout: tags</div></pre></td></tr></table></figure>\n<h3 id=\"分类的链接设置\"><a href=\"#分类的链接设置\" class=\"headerlink\" title=\"分类的链接设置\"></a>分类的链接设置</h3> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo new page &quot;tags&quot;</div><div class=\"line\">编辑tags.md,页面的类型设置为 tags</div><div class=\"line\">title: categories</div><div class=\"line\">date: 2017-06-06 18:06:04</div><div class=\"line\">layout: categories</div></pre></td></tr></table></figure>\n<h2 id=\"评论系统的开启\"><a href=\"#评论系统的开启\" class=\"headerlink\" title=\"评论系统的开启\"></a>评论系统的开启</h2><blockquote>\n<ul>\n<li>不知道是使用主题的问题还是什么,友言评论使用不了,改用了网易云跟帖评论</li>\n<li>在主题配置文件_config.yml中进行开启,需要先注册一个网易跟帖<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/comments.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"指定404错误页面\"><a href=\"#指定404错误页面\" class=\"headerlink\" title=\"指定404错误页面\"></a>指定404错误页面</h2><blockquote>\n<ul>\n<li><p>方法一 :直接在source下创建404.html自定义跳转地址</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">  &lt;head&gt;]</div><div class=\"line\">  \t&lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">  \t&lt;title&gt;404&lt;/title&gt;</div><div class=\"line\">  &lt;/head&gt;</div><div class=\"line\">  &lt;body&gt;</div><div class=\"line\">  \t&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.icoder.xin&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class=\"line\">  &lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>方法二 :hexo new page 404,在404index.md中可以自己编辑定义显示的内容(暂时空白待自定义)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 404 Not Found</div><div class=\"line\">toc: false</div><div class=\"line\">reward: false</div><div class=\"line\">share: false</div><div class=\"line\">comments: false</div><div class=\"line\">permalink: /404</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</blockquote>"},{"title":"Hexo帮助文档-官翻","date":"2017-06-06T07:12:34.000Z","keywords":"Hexo, Blog","description":"记录Hexo的学习以及使用中的问题","_content":">- 记录Hexo的学习以及使用中的问题\n<!-- more -->\n\n# 开始使用\n\n## 概述\n\n### 什么是Hexo?\n- Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n\n### Hexo的安装\n- 安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题\n\n#### 安装前提\n- 安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：\n>- [Node.js](http://www.icoder.xin \"Node.js的学习使用\")\n>- [Git](http://www.icoder.xin \"Git的学习使用\")\n- 在gitbash中使用使用 npm 即可完成 Hexo 的安装\n>- $ npm install -g hexo-cli\n\n## 建站\n- 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n- 新建完成后，指定文件夹的目录如下：\n```\n.\n├── _config.yml ->全局配置文件\n├── package.json\n├── scaffolds ->模板文件夹\n├── source ->源文件存放处\n|   ├── _drafts ->草稿\n|   └── _posts ->正式发布文件\n└── themes ->主题存放处\n```\n\n### 全局配置文件\n- [_config.yml](http://www.icoderxin \"Hexo的全局配置文件\") :网站的配置信息，您可以在此配置大部分的参数\n\n### 应用程序信息\n- package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除\n```\npackage.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### 模板文件夹\n- 模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n- Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改\n\n### 资源文件夹\n### 主题文件夹\n","source":"_drafts/前端开发/Hexo/Hexo帮助文档-官翻.md","raw":"---\ntitle: Hexo帮助文档-官翻\ndate: 2017-06-06 15:12:34\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\nkeywords: Hexo, Blog\ndescription: 记录Hexo的学习以及使用中的问题\n---\n>- 记录Hexo的学习以及使用中的问题\n<!-- more -->\n\n# 开始使用\n\n## 概述\n\n### 什么是Hexo?\n- Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页\n\n### Hexo的安装\n- 安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题\n\n#### 安装前提\n- 安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：\n>- [Node.js](http://www.icoder.xin \"Node.js的学习使用\")\n>- [Git](http://www.icoder.xin \"Git的学习使用\")\n- 在gitbash中使用使用 npm 即可完成 Hexo 的安装\n>- $ npm install -g hexo-cli\n\n## 建站\n- 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件\n```\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n- 新建完成后，指定文件夹的目录如下：\n```\n.\n├── _config.yml ->全局配置文件\n├── package.json\n├── scaffolds ->模板文件夹\n├── source ->源文件存放处\n|   ├── _drafts ->草稿\n|   └── _posts ->正式发布文件\n└── themes ->主题存放处\n```\n\n### 全局配置文件\n- [_config.yml](http://www.icoderxin \"Hexo的全局配置文件\") :网站的配置信息，您可以在此配置大部分的参数\n\n### 应用程序信息\n- package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除\n```\npackage.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.0.0\",\n    \"hexo-generator-archive\": \"^0.1.0\",\n    \"hexo-generator-category\": \"^0.1.0\",\n    \"hexo-generator-index\": \"^0.1.0\",\n    \"hexo-generator-tag\": \"^0.1.0\",\n    \"hexo-renderer-ejs\": \"^0.1.0\",\n    \"hexo-renderer-stylus\": \"^0.2.0\",\n    \"hexo-renderer-marked\": \"^0.2.4\",\n    \"hexo-server\": \"^0.1.2\"\n  }\n}\n```\n\n### 模板文件夹\n- 模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n- Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改\n\n### 资源文件夹\n### 主题文件夹\n","slug":"前端开发/Hexo/Hexo帮助文档-官翻","published":0,"updated":"2017-06-08T06:12:37.951Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoso00302whqanvsugv7","content":"<blockquote>\n<ul>\n<li>记录Hexo的学习以及使用中的问题<a id=\"more\"></a>\n</li>\n</ul>\n</blockquote>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><h3 id=\"什么是Hexo\"><a href=\"#什么是Hexo\" class=\"headerlink\" title=\"什么是Hexo?\"></a>什么是Hexo?</h3><ul>\n<li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</li>\n</ul>\n<h3 id=\"Hexo的安装\"><a href=\"#Hexo的安装\" class=\"headerlink\" title=\"Hexo的安装\"></a>Hexo的安装</h3><ul>\n<li>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题</li>\n</ul>\n<h4 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h4><ul>\n<li>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：<blockquote>\n<ul>\n<li><a href=\"http://www.icoder.xin\" title=\"Node.js的学习使用\">Node.js</a></li>\n<li><a href=\"http://www.icoder.xin\" title=\"Git的学习使用\">Git</a></li>\n</ul>\n</blockquote>\n</li>\n<li>在gitbash中使用使用 npm 即可完成 Hexo 的安装<blockquote>\n<ul>\n<li>$ npm install -g hexo-cli</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><ul>\n<li><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ cd &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml -&gt;全局配置文件</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds -&gt;模板文件夹</div><div class=\"line\">├── source -&gt;源文件存放处</div><div class=\"line\">|   ├── _drafts -&gt;草稿</div><div class=\"line\">|   └── _posts -&gt;正式发布文件</div><div class=\"line\">└── themes -&gt;主题存放处</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"全局配置文件\"><a href=\"#全局配置文件\" class=\"headerlink\" title=\"全局配置文件\"></a>全局配置文件</h3><ul>\n<li><a href=\"http://www.icoderxin\" title=\"Hexo的全局配置文件\" target=\"_blank\" rel=\"external\">_config.yml</a> :网站的配置信息，您可以在此配置大部分的参数</li>\n</ul>\n<h3 id=\"应用程序信息\"><a href=\"#应用程序信息\" class=\"headerlink\" title=\"应用程序信息\"></a>应用程序信息</h3><ul>\n<li>package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">package.json</div><div class=\"line\">&#123;</div><div class=\"line\">  &quot;name&quot;: &quot;hexo-site&quot;,</div><div class=\"line\">  &quot;version&quot;: &quot;0.0.0&quot;,</div><div class=\"line\">  &quot;private&quot;: true,</div><div class=\"line\">  &quot;hexo&quot;: &#123;</div><div class=\"line\">    &quot;version&quot;: &quot;&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;hexo&quot;: &quot;^3.0.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-archive&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-category&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-index&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-tag&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-stylus&quot;: &quot;^0.2.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-marked&quot;: &quot;^0.2.4&quot;,</div><div class=\"line\">    &quot;hexo-server&quot;: &quot;^0.1.2&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"模板文件夹\"><a href=\"#模板文件夹\" class=\"headerlink\" title=\"模板文件夹\"></a>模板文件夹</h3><ul>\n<li>模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。</li>\n<li>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改</li>\n</ul>\n<h3 id=\"资源文件夹\"><a href=\"#资源文件夹\" class=\"headerlink\" title=\"资源文件夹\"></a>资源文件夹</h3><h3 id=\"主题文件夹\"><a href=\"#主题文件夹\" class=\"headerlink\" title=\"主题文件夹\"></a>主题文件夹</h3>","site":{"data":{}},"excerpt":"<blockquote>\n<ul>\n<li>记录Hexo的学习以及使用中的问题","more":"</li>\n</ul>\n</blockquote>\n<h1 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><h3 id=\"什么是Hexo\"><a href=\"#什么是Hexo\" class=\"headerlink\" title=\"什么是Hexo?\"></a>什么是Hexo?</h3><ul>\n<li>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页</li>\n</ul>\n<h3 id=\"Hexo的安装\"><a href=\"#Hexo的安装\" class=\"headerlink\" title=\"Hexo的安装\"></a>Hexo的安装</h3><ul>\n<li>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请提交问题，我会尽力解决您的问题</li>\n</ul>\n<h4 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h4><ul>\n<li>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：<blockquote>\n<ul>\n<li><a href=\"http://www.icoder.xin\" title=\"Node.js的学习使用\">Node.js</a></li>\n<li><a href=\"http://www.icoder.xin\" title=\"Git的学习使用\">Git</a></li>\n</ul>\n</blockquote>\n</li>\n<li>在gitbash中使用使用 npm 即可完成 Hexo 的安装<blockquote>\n<ul>\n<li>$ npm install -g hexo-cli</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><ul>\n<li><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo init &lt;folder&gt;</div><div class=\"line\">$ cd &lt;folder&gt;</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n</li>\n<li><p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.</div><div class=\"line\">├── _config.yml -&gt;全局配置文件</div><div class=\"line\">├── package.json</div><div class=\"line\">├── scaffolds -&gt;模板文件夹</div><div class=\"line\">├── source -&gt;源文件存放处</div><div class=\"line\">|   ├── _drafts -&gt;草稿</div><div class=\"line\">|   └── _posts -&gt;正式发布文件</div><div class=\"line\">└── themes -&gt;主题存放处</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"全局配置文件\"><a href=\"#全局配置文件\" class=\"headerlink\" title=\"全局配置文件\"></a>全局配置文件</h3><ul>\n<li><a href=\"http://www.icoderxin\" title=\"Hexo的全局配置文件\" target=\"_blank\" rel=\"external\">_config.yml</a> :网站的配置信息，您可以在此配置大部分的参数</li>\n</ul>\n<h3 id=\"应用程序信息\"><a href=\"#应用程序信息\" class=\"headerlink\" title=\"应用程序信息\"></a>应用程序信息</h3><ul>\n<li>package.json :EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">package.json</div><div class=\"line\">&#123;</div><div class=\"line\">  &quot;name&quot;: &quot;hexo-site&quot;,</div><div class=\"line\">  &quot;version&quot;: &quot;0.0.0&quot;,</div><div class=\"line\">  &quot;private&quot;: true,</div><div class=\"line\">  &quot;hexo&quot;: &#123;</div><div class=\"line\">    &quot;version&quot;: &quot;&quot;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  &quot;dependencies&quot;: &#123;</div><div class=\"line\">    &quot;hexo&quot;: &quot;^3.0.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-archive&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-category&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-index&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-generator-tag&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-ejs&quot;: &quot;^0.1.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-stylus&quot;: &quot;^0.2.0&quot;,</div><div class=\"line\">    &quot;hexo-renderer-marked&quot;: &quot;^0.2.4&quot;,</div><div class=\"line\">    &quot;hexo-server&quot;: &quot;^0.1.2&quot;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"模板文件夹\"><a href=\"#模板文件夹\" class=\"headerlink\" title=\"模板文件夹\"></a>模板文件夹</h3><ul>\n<li>模版文件夹 :当您新建文章时，Hexo 会根据 scaffold 来建立文件。</li>\n<li>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改</li>\n</ul>\n<h3 id=\"资源文件夹\"><a href=\"#资源文件夹\" class=\"headerlink\" title=\"资源文件夹\"></a>资源文件夹</h3><h3 id=\"主题文件夹\"><a href=\"#主题文件夹\" class=\"headerlink\" title=\"主题文件夹\"></a>主题文件夹</h3>"},{"title":"Hexo全局配置文件(_config.yml)详解","date":"2017-06-06T03:20:59.000Z","_content":"## _config.yml :全局配置说明\n<!-- more -->\n```\n# Site 网站相关配置说明\n<!-- 博客站点标题,显示在首页上的 -->\ntitle: VanXin`s Blog\n<!-- 博客站点副标题 -->\nsubtitle: 记录工作学习中的点点滴滴\n<!-- 博客网站相关描述 -->\ndescription: 私人小站-专注于JavaWeb开发\n<!-- 博客站点关键字,便于网络检索 -->\nkeywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub\n<!-- 站点拥有者 -->\nauthor: VanXin\n<!-- 博客站点语言选项设置 -->\nlanguage: zh-CN\nemail: wangxinat163@163.com\n<!-- 时区设置 -->\ntimezone: Asia/Shanghai\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://www.icoder.xin\nroot: /\n<!-- 文件生成的对应链接地址 -->\n# permalink: :year/:month/:day/:title/\npermalink: vanxinBlog/:title/\npermalink_defaults:\n\n# Directory 文件存放位置相关配置\n<!-- 源文件存放位置 -->\nsource_dir: source\n<!-- 公开文件存放位置 :将生成静态网站在这里 -->\npublic_dir: public\n<!-- 标记目录存放位置 -->\ntag_dir: tags\n<!-- 归档文件目录 -->\narchive_dir: archives\n<!-- 分类目录 -->\ncategory_dir: categories\n<!-- 包括代码目录 -->\ncode_dir: downloads/code\n<!-- i18n目录 -->\ni18n_dir: :lang\n<!-- 路径不能呈现 -->\nskip_render:\n\n# Writing\n<!-- 文件默认生成格式 -->\nnew_post_name: :title.md # File name of new posts\n<!-- 默认布局 :发布文件存放在_post -->\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: MMM D YYYY\n<!-- YYYY-MM-DD -->\ntime_format: HH:mm:ss\n\n# Pagination :分页\n## Set per_page to 0 to disable pagination\nper_page: 15\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n<!-- 使用主题 -->\ntheme: indigo_VanXin\n# theme: casual\nexclude_generator:\n<!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 -->\n<!-- exclude\tHexo过程将忽略文件列表下 -->\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n\n# Archives\n## 2: Enable pagination\n## 1: Disable pagination\n## 0: Fully Disable\narchive: 2\ncategory: 2\ntag: 2\n\n# Server\n## Hexo uses Connect as a server\n## You can customize the logger format as defined in\n## http://www.senchalabs.org/connect/logger.html\nport: 4000\nserver_ip: localhost\nlogger: false\nlogger_format: dev\n\n```\n","source":"_drafts/前端开发/Hexo/Hexo全局配置文件(_config.yml)详解.md","raw":"---\ntitle: Hexo全局配置文件(_config.yml)详解\ndate: 2017-06-06 11:20:59\ntags: \n- Hexo\n- Blog\ncategories: \n- 前端开发\n- Hexo\n---\n## _config.yml :全局配置说明\n<!-- more -->\n```\n# Site 网站相关配置说明\n<!-- 博客站点标题,显示在首页上的 -->\ntitle: VanXin`s Blog\n<!-- 博客站点副标题 -->\nsubtitle: 记录工作学习中的点点滴滴\n<!-- 博客网站相关描述 -->\ndescription: 私人小站-专注于JavaWeb开发\n<!-- 博客站点关键字,便于网络检索 -->\nkeywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub\n<!-- 站点拥有者 -->\nauthor: VanXin\n<!-- 博客站点语言选项设置 -->\nlanguage: zh-CN\nemail: wangxinat163@163.com\n<!-- 时区设置 -->\ntimezone: Asia/Shanghai\n\n# URL\n## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'\nurl: http://www.icoder.xin\nroot: /\n<!-- 文件生成的对应链接地址 -->\n# permalink: :year/:month/:day/:title/\npermalink: vanxinBlog/:title/\npermalink_defaults:\n\n# Directory 文件存放位置相关配置\n<!-- 源文件存放位置 -->\nsource_dir: source\n<!-- 公开文件存放位置 :将生成静态网站在这里 -->\npublic_dir: public\n<!-- 标记目录存放位置 -->\ntag_dir: tags\n<!-- 归档文件目录 -->\narchive_dir: archives\n<!-- 分类目录 -->\ncategory_dir: categories\n<!-- 包括代码目录 -->\ncode_dir: downloads/code\n<!-- i18n目录 -->\ni18n_dir: :lang\n<!-- 路径不能呈现 -->\nskip_render:\n\n# Writing\n<!-- 文件默认生成格式 -->\nnew_post_name: :title.md # File name of new posts\n<!-- 默认布局 :发布文件存放在_post -->\ndefault_layout: post\ntitlecase: false # Transform title into titlecase\nexternal_link: true # Open external links in new tab\nfilename_case: 0\nrender_drafts: false\npost_asset_folder: false\nrelative_link: false\nfuture: true\nhighlight:\n  enable: true\n  line_number: true\n  auto_detect: false\n  tab_replace:\n\n# Category & Tag\ndefault_category: uncategorized\ncategory_map:\ntag_map:\n\n# Date / Time format\n## Hexo uses Moment.js to parse and display date\n## You can customize the date format as defined in\n## http://momentjs.com/docs/#/displaying/format/\ndate_format: MMM D YYYY\n<!-- YYYY-MM-DD -->\ntime_format: HH:mm:ss\n\n# Pagination :分页\n## Set per_page to 0 to disable pagination\nper_page: 15\npagination_dir: page\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n<!-- 使用主题 -->\ntheme: indigo_VanXin\n# theme: casual\nexclude_generator:\n<!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 -->\n<!-- exclude\tHexo过程将忽略文件列表下 -->\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git\n  branch: master\n\n# Archives\n## 2: Enable pagination\n## 1: Disable pagination\n## 0: Fully Disable\narchive: 2\ncategory: 2\ntag: 2\n\n# Server\n## Hexo uses Connect as a server\n## You can customize the logger format as defined in\n## http://www.senchalabs.org/connect/logger.html\nport: 4000\nserver_ip: localhost\nlogger: false\nlogger_format: dev\n\n```\n","slug":"前端开发/Hexo/Hexo全局配置文件(_config.yml)详解","published":0,"updated":"2017-06-08T06:13:50.878Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhot300322whqhqlagc8u","content":"<h2 id=\"config-yml-全局配置说明\"><a href=\"#config-yml-全局配置说明\" class=\"headerlink\" title=\"_config.yml :全局配置说明\"></a>_config.yml :全局配置说明</h2><a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Site 网站相关配置说明</div><div class=\"line\">&lt;!-- 博客站点标题,显示在首页上的 --&gt;</div><div class=\"line\">title: VanXin`s Blog</div><div class=\"line\">&lt;!-- 博客站点副标题 --&gt;</div><div class=\"line\">subtitle: 记录工作学习中的点点滴滴</div><div class=\"line\">&lt;!-- 博客网站相关描述 --&gt;</div><div class=\"line\">description: 私人小站-专注于JavaWeb开发</div><div class=\"line\">&lt;!-- 博客站点关键字,便于网络检索 --&gt;</div><div class=\"line\">keywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub</div><div class=\"line\">&lt;!-- 站点拥有者 --&gt;</div><div class=\"line\">author: VanXin</div><div class=\"line\">&lt;!-- 博客站点语言选项设置 --&gt;</div><div class=\"line\">language: zh-CN</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\">&lt;!-- 时区设置 --&gt;</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class=\"line\">url: http://www.icoder.xin</div><div class=\"line\">root: /</div><div class=\"line\">&lt;!-- 文件生成的对应链接地址 --&gt;</div><div class=\"line\"># permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink: vanxinBlog/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory 文件存放位置相关配置</div><div class=\"line\">&lt;!-- 源文件存放位置 --&gt;</div><div class=\"line\">source_dir: source</div><div class=\"line\">&lt;!-- 公开文件存放位置 :将生成静态网站在这里 --&gt;</div><div class=\"line\">public_dir: public</div><div class=\"line\">&lt;!-- 标记目录存放位置 --&gt;</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">&lt;!-- 归档文件目录 --&gt;</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">&lt;!-- 分类目录 --&gt;</div><div class=\"line\">category_dir: categories</div><div class=\"line\">&lt;!-- 包括代码目录 --&gt;</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">&lt;!-- i18n目录 --&gt;</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">&lt;!-- 路径不能呈现 --&gt;</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">&lt;!-- 文件默认生成格式 --&gt;</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">&lt;!-- 默认布局 :发布文件存放在_post --&gt;</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: false</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: MMM D YYYY</div><div class=\"line\">&lt;!-- YYYY-MM-DD --&gt;</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination :分页</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 15</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">&lt;!-- 使用主题 --&gt;</div><div class=\"line\">theme: indigo_VanXin</div><div class=\"line\"># theme: casual</div><div class=\"line\">exclude_generator:</div><div class=\"line\">&lt;!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 --&gt;</div><div class=\"line\">&lt;!-- exclude\tHexo过程将忽略文件列表下 --&gt;</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\"># Archives</div><div class=\"line\">## 2: Enable pagination</div><div class=\"line\">## 1: Disable pagination</div><div class=\"line\">## 0: Fully Disable</div><div class=\"line\">archive: 2</div><div class=\"line\">category: 2</div><div class=\"line\">tag: 2</div><div class=\"line\"></div><div class=\"line\"># Server</div><div class=\"line\">## Hexo uses Connect as a server</div><div class=\"line\">## You can customize the logger format as defined in</div><div class=\"line\">## http://www.senchalabs.org/connect/logger.html</div><div class=\"line\">port: 4000</div><div class=\"line\">server_ip: localhost</div><div class=\"line\">logger: false</div><div class=\"line\">logger_format: dev</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"config-yml-全局配置说明\"><a href=\"#config-yml-全局配置说明\" class=\"headerlink\" title=\"_config.yml :全局配置说明\"></a>_config.yml :全局配置说明</h2>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Site 网站相关配置说明</div><div class=\"line\">&lt;!-- 博客站点标题,显示在首页上的 --&gt;</div><div class=\"line\">title: VanXin`s Blog</div><div class=\"line\">&lt;!-- 博客站点副标题 --&gt;</div><div class=\"line\">subtitle: 记录工作学习中的点点滴滴</div><div class=\"line\">&lt;!-- 博客网站相关描述 --&gt;</div><div class=\"line\">description: 私人小站-专注于JavaWeb开发</div><div class=\"line\">&lt;!-- 博客站点关键字,便于网络检索 --&gt;</div><div class=\"line\">keywords: Java,Web,前端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub</div><div class=\"line\">&lt;!-- 站点拥有者 --&gt;</div><div class=\"line\">author: VanXin</div><div class=\"line\">&lt;!-- 博客站点语言选项设置 --&gt;</div><div class=\"line\">language: zh-CN</div><div class=\"line\">email: wangxinat163@163.com</div><div class=\"line\">&lt;!-- 时区设置 --&gt;</div><div class=\"line\">timezone: Asia/Shanghai</div><div class=\"line\"></div><div class=\"line\"># URL</div><div class=\"line\">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class=\"line\">url: http://www.icoder.xin</div><div class=\"line\">root: /</div><div class=\"line\">&lt;!-- 文件生成的对应链接地址 --&gt;</div><div class=\"line\"># permalink: :year/:month/:day/:title/</div><div class=\"line\">permalink: vanxinBlog/:title/</div><div class=\"line\">permalink_defaults:</div><div class=\"line\"></div><div class=\"line\"># Directory 文件存放位置相关配置</div><div class=\"line\">&lt;!-- 源文件存放位置 --&gt;</div><div class=\"line\">source_dir: source</div><div class=\"line\">&lt;!-- 公开文件存放位置 :将生成静态网站在这里 --&gt;</div><div class=\"line\">public_dir: public</div><div class=\"line\">&lt;!-- 标记目录存放位置 --&gt;</div><div class=\"line\">tag_dir: tags</div><div class=\"line\">&lt;!-- 归档文件目录 --&gt;</div><div class=\"line\">archive_dir: archives</div><div class=\"line\">&lt;!-- 分类目录 --&gt;</div><div class=\"line\">category_dir: categories</div><div class=\"line\">&lt;!-- 包括代码目录 --&gt;</div><div class=\"line\">code_dir: downloads/code</div><div class=\"line\">&lt;!-- i18n目录 --&gt;</div><div class=\"line\">i18n_dir: :lang</div><div class=\"line\">&lt;!-- 路径不能呈现 --&gt;</div><div class=\"line\">skip_render:</div><div class=\"line\"></div><div class=\"line\"># Writing</div><div class=\"line\">&lt;!-- 文件默认生成格式 --&gt;</div><div class=\"line\">new_post_name: :title.md # File name of new posts</div><div class=\"line\">&lt;!-- 默认布局 :发布文件存放在_post --&gt;</div><div class=\"line\">default_layout: post</div><div class=\"line\">titlecase: false # Transform title into titlecase</div><div class=\"line\">external_link: true # Open external links in new tab</div><div class=\"line\">filename_case: 0</div><div class=\"line\">render_drafts: false</div><div class=\"line\">post_asset_folder: false</div><div class=\"line\">relative_link: false</div><div class=\"line\">future: true</div><div class=\"line\">highlight:</div><div class=\"line\">  enable: true</div><div class=\"line\">  line_number: true</div><div class=\"line\">  auto_detect: false</div><div class=\"line\">  tab_replace:</div><div class=\"line\"></div><div class=\"line\"># Category &amp; Tag</div><div class=\"line\">default_category: uncategorized</div><div class=\"line\">category_map:</div><div class=\"line\">tag_map:</div><div class=\"line\"></div><div class=\"line\"># Date / Time format</div><div class=\"line\">## Hexo uses Moment.js to parse and display date</div><div class=\"line\">## You can customize the date format as defined in</div><div class=\"line\">## http://momentjs.com/docs/#/displaying/format/</div><div class=\"line\">date_format: MMM D YYYY</div><div class=\"line\">&lt;!-- YYYY-MM-DD --&gt;</div><div class=\"line\">time_format: HH:mm:ss</div><div class=\"line\"></div><div class=\"line\"># Pagination :分页</div><div class=\"line\">## Set per_page to 0 to disable pagination</div><div class=\"line\">per_page: 15</div><div class=\"line\">pagination_dir: page</div><div class=\"line\"></div><div class=\"line\"># Extensions</div><div class=\"line\">## Plugins: https://hexo.io/plugins/</div><div class=\"line\">## Themes: https://hexo.io/themes/</div><div class=\"line\">&lt;!-- 使用主题 --&gt;</div><div class=\"line\">theme: indigo_VanXin</div><div class=\"line\"># theme: casual</div><div class=\"line\">exclude_generator:</div><div class=\"line\">&lt;!-- include\tHexo默认忽略隐藏的文件和文件夹,但设置这个字段将使Hexo过程 --&gt;</div><div class=\"line\">&lt;!-- exclude\tHexo过程将忽略文件列表下 --&gt;</div><div class=\"line\"></div><div class=\"line\"># Deployment</div><div class=\"line\">## Docs: https://hexo.io/docs/deployment.html</div><div class=\"line\">deploy:</div><div class=\"line\">  type: git</div><div class=\"line\">  repository: git@github.com:vanxinBlog/vanxinBlog.github.io.git</div><div class=\"line\">  branch: master</div><div class=\"line\"></div><div class=\"line\"># Archives</div><div class=\"line\">## 2: Enable pagination</div><div class=\"line\">## 1: Disable pagination</div><div class=\"line\">## 0: Fully Disable</div><div class=\"line\">archive: 2</div><div class=\"line\">category: 2</div><div class=\"line\">tag: 2</div><div class=\"line\"></div><div class=\"line\"># Server</div><div class=\"line\">## Hexo uses Connect as a server</div><div class=\"line\">## You can customize the logger format as defined in</div><div class=\"line\">## http://www.senchalabs.org/connect/logger.html</div><div class=\"line\">port: 4000</div><div class=\"line\">server_ip: localhost</div><div class=\"line\">logger: false</div><div class=\"line\">logger_format: dev</div></pre></td></tr></table></figure>"},{"_content":"```\n.post-widget {\n    float: right;//页面目录显示位置\n    width: 20%;\n    padding-left: 30px;\n    min-height: 1px;\n    +.post-article {\n        float: left;\n        width: 80%;\n        padding-right: 30px;\n    }\n}\n\n.post-toc-wrap {\n    position: fixed;\n    overflow-x: hidden;\n    width: 20%;\n    &.fixed {\n        top: @headerH + 20px;\n        bottom: 140px;\n        overflow-y: auto;\n    }\n\n    ol,\n    ul {\n        list-style: none;\n        margin: 0;\n    }\n\n    h4 {\n        padding: 0 0 10px 20px;\n        font-size: 15px;\n        font-weight: 600;\n        color: #727272;\n    }\n}\n.post-toc-child {\n    padding-left: 10px;\n}\n.post-toc {\n    display: inline-block;\n    padding: 0;\n    font-size: 13px;\n    >.post-toc-item {\n        position: relative;\n    }\n}\n.post-toc-item {\n    font-weight: 400;\n    color: @secondaryTextColor;\n\n    &.active {\n        >.post-toc-link {\n            font-weight: 600;\n            color: @primaryColor;\n            &:before {\n                background: rgba(0, 0, 0, .06);\n            }\n\n            &:after {\n                border-left: 3px solid @primaryColor;\n            }\n        }\n    }\n}\n.post-toc-link {\n    position: relative;\n    z-index: 2;\n    display: block;\n    padding: 3px 20px;\n    line-height: 1.5rem;\n    color: inherit;\n    word-break: break-all;\n\n    &:hover {\n        opacity: .8;\n    }\n\n    &:before,\n    &:after {\n        content: \"\";\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n    }\n}\n\n\n.post-article {\n    .post-content {\n        padding-top: 20px;\n    }\n}\n.post-card {\n    margin-top: -150px;\n    min-height: 100px;\n    padding: 35px;\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, .2);\n    .post-meta {\n        margin-top: 8px;\n    }\n}\n.post-card-title {\n    font-size: 32px;\n}\n.post-nav {\n    margin-top: 30px;\n    padding: 16px 0 0;\n\n    .prev,\n    .next {\n        width: 47%;\n        background: @codeBg;\n    }\n\n    .next {\n        text-align: right;\n    }\n}\n\n.post-nav-link {\n    display: block;\n    line-height: 2em;\n    font-size: 16px;\n    padding: 10px 16px;\n\n    .title {\n        .hoverLine(@primaryColor);\n    }\n\n    .icon {\n        vertical-align: -9%;\n    }\n\n    .tips {\n        color: @secondaryTextColor;\n    }\n}\n\n.post-copyright {\n    margin-bottom: 100px;\n    font-size: 14px;\n\n    .content {\n        margin-bottom: 1em;\n        padding: 20px 30px;\n        word-break: break-all;\n        color: @secondaryTextColor;\n        background: lighten( @lightPrimaryColor, 12%);\n        border-radius: 30px 30px 0;\n    }\n\n    footer {\n        float: right;\n\n        a {\n            position: relative;\n            display: block;\n            overflow: hidden;\n            padding: 0 16px 0 42px;\n            height: 28px;\n            line-height: 28px;\n            color: @secondaryTextColor;\n            background: lighten( @lightPrimaryColor, 12%);\n            border-radius: 14px;\n        }\n        img {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 28px;\n            height: 28px;\n            border-radius: 50%;\n        }\n    }\n}\n\n.post-footer {\n    position: relative;\n    margin: 0 -35px;\n    padding: 20px 35px 0;\n    border-top: 1px solid #ddd;\n}\n\n.post-content {\n    padding-bottom: 20px;\n    line-height: 1.8;\n\n    >.highlight,\n    >.image-bubble,\n    >pre {\n        margin-left: -35px;\n        margin-right: -35px;\n    }\n\n    >.highlight,\n    >pre {\n        padding: 20px 35px;\n    }\n\n    .image-bubble {\n        margin-top: 20px;\n        margin-bottom: 20px;\n        text-align: center;\n    }\n    .image-caption {\n        display: inline-block;\n        margin-top: 10px;\n        color: @secondaryTextColor;\n    }\n\n    .headerlink {\n        visibility: hidden;\n        margin-left: -1em;\n        padding-right: 5px;\n        color: @lightPrimaryColor;\n\n        &:before {\n            content: \"#\";\n        }\n    }\n\n    p {\n        word-wrap: break-word;\n    }\n\n    p,\n    li {\n        a {\n            color: @accentColor;\n            border-bottom: 1px dotted lighten(@accentColor, 20%);\n            word-break: break-all;\n\n            &:hover,\n            &:active {\n                text-decoration: none;\n                border-bottom-style: solid;\n                opacity: .7;\n            }\n        }\n    }\n\n    strong {\n        font-weight: 600;\n        color: @primaryColor;\n        a {\n            border-color: @accentColor\n        }\n    }\n\n    em {\n        color: @secondaryTextColor\n    }\n\n    h1 {\n        font-size: 24px;\n    }\n\n    h2 {\n        font-size: 22px;\n    }\n\n    h3 {\n        font-size: 20px;\n    }\n\n    h4 {\n        font-size: 18px;\n    }\n\n    h5 {\n        font-size: 16px;\n    }\n\n    h6 {\n        font-size: 14px;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n        padding-top: @headerH;\n        margin-top: @headerH * -1;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    blockquote,\n    ol,\n    p,\n    pre,\n    table,\n    ul,\n    figure,\n    .video-container {\n        margin-bottom: 20px;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        color: @primaryColor;\n        &:hover {\n            .headerlink {\n                visibility: visible\n            }\n        }\n    }\n\n    blockquote p:first-child,\n    blockquote:first-child,\n    ol:first-child,\n    p:first-child,\n    pre:first-child,\n    table:first-child,\n    ul:first-child,\n    figure:first-child {\n        margin-top: 0\n    }\n\n    ol,\n    ul {\n        font-size: 14px;\n        line-height: 30px;\n    }\n\n    video,\n    audio {\n        max-width: 100%;\n    }\n\n\n    blockquote {\n        position: relative;\n        padding: 16px 20px;\n        border-left: 4px solid @primaryColor;\n        color: lighten(@primaryTextColor, 30%);\n        background: @codeBg;\n        font-size: 14px;\n        border-radius: 0 2px 2px 0;\n\n        p {\n            margin: 0;\n        }\n\n        footer {\n            margin-top: 10px;\n            text-align: right;\n            font-size: 80%;\n        }\n    }\n\n    table {\n        width: 100%;\n        border: 1px solid #dedede;\n        margin: 15px 0;\n        border-collapse: collapse;\n\n        tr,\n        td {\n            height: 35px;\n        }\n\n        thead {\n            tr {\n                background: #f8f8f8;\n            }\n        }\n\n        tbody {\n            tr {\n                &:hover {\n                    background: #efefef;\n                }\n            }\n        }\n\n        td,\n        th {\n            border: 1px solid #dedede;\n            padding: 0 10px;\n        }\n    }\n\n    figure {\n        table {\n            border: none;\n            width: auto;\n            margin: 0;\n\n            tbody {\n                tr {\n                    &:hover {\n                        background: none;\n                    }\n                }\n\n                td {\n                    border: none;\n                }\n            }\n        }\n    }\n\n    code,\n    kbd,\n    pre,\n    samp {\n        font-family: @font-code;\n    }\n\n    code,\n    pre {\n        background: @codeBg\n    }\n\n    p code,\n    li code {\n        color: @accentColor;\n        line-height: 1;\n        margin: 0 4px;\n        font-size: 80%;\n        padding: 3px 5px;\n        border: 1px solid #eee;\n        border-radius: 2px;\n        word-wrap: break-word;\n    }\n\n    pre {\n        margin: 24px 0;\n        code {\n            border-radius: 0;\n            font-size: inherit;\n            margin: 0;\n            padding: 0;\n        }\n    }\n}\n\n\n.comments {\n    padding: 40px 0 0;\n}\n\n@media screen and (max-width:760px) {\n    .post-widget {\n        display: none\n    }\n\n    .post-article {\n        float: none;\n        width: 100%!important;\n        padding-right: 0!important;\n    }\n\n    .post-card {\n        position: relative;\n        margin: -20px -16px 0;\n        border-radius: 0;\n        padding: 16px;\n\n        .post-meta {\n            margin-top: -40px;\n            padding: 20px 12px;\n            background: #fff;\n            box-shadow: 0 1px 4px 0 rgba(0,0,0,.16);\n            border-radius: 2px;\n        }\n    }\n\n    .post-card-title {\n        display: none\n    }\n\n    .post-nav {\n        padding: 0;\n        margin-left: -16px;\n        margin-right: -16px;\n        .prev,\n        .next {\n            width: 50%;\n            background: #fff;\n            border-bottom: 1px solid @borderColor;\n            box-shadow: @boxShadow;\n        }\n        h4 {\n            font-size: 16px;\n            line-height: 1.5;\n        }\n    }\n\n    .has-jax {\n        font-size: 13px;\n    }\n    .MJXc-display {\n        overflow-x: auto;\n        overflow-y: hidden;\n    }\n\n    .comments {\n        margin-left: -16px;\n        margin-right: -16px\n    }\n}\n\n@media screen and (max-width:480px) {\n    .has-jax {\n        font-size: 10px;\n    }\n    .post-content {\n        .highlight,\n        .image-bubble,\n        >pre {\n            margin-left: -16px;\n            margin-right: -16px;\n        }\n        .highlight,\n        >pre {\n            padding: 16px;\n        }\n    }\n}\n\n\n```\n","source":"_drafts/前端开发/Hexo/No文章页面布局优化设置.md","raw":"```\n.post-widget {\n    float: right;//页面目录显示位置\n    width: 20%;\n    padding-left: 30px;\n    min-height: 1px;\n    +.post-article {\n        float: left;\n        width: 80%;\n        padding-right: 30px;\n    }\n}\n\n.post-toc-wrap {\n    position: fixed;\n    overflow-x: hidden;\n    width: 20%;\n    &.fixed {\n        top: @headerH + 20px;\n        bottom: 140px;\n        overflow-y: auto;\n    }\n\n    ol,\n    ul {\n        list-style: none;\n        margin: 0;\n    }\n\n    h4 {\n        padding: 0 0 10px 20px;\n        font-size: 15px;\n        font-weight: 600;\n        color: #727272;\n    }\n}\n.post-toc-child {\n    padding-left: 10px;\n}\n.post-toc {\n    display: inline-block;\n    padding: 0;\n    font-size: 13px;\n    >.post-toc-item {\n        position: relative;\n    }\n}\n.post-toc-item {\n    font-weight: 400;\n    color: @secondaryTextColor;\n\n    &.active {\n        >.post-toc-link {\n            font-weight: 600;\n            color: @primaryColor;\n            &:before {\n                background: rgba(0, 0, 0, .06);\n            }\n\n            &:after {\n                border-left: 3px solid @primaryColor;\n            }\n        }\n    }\n}\n.post-toc-link {\n    position: relative;\n    z-index: 2;\n    display: block;\n    padding: 3px 20px;\n    line-height: 1.5rem;\n    color: inherit;\n    word-break: break-all;\n\n    &:hover {\n        opacity: .8;\n    }\n\n    &:before,\n    &:after {\n        content: \"\";\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n    }\n}\n\n\n.post-article {\n    .post-content {\n        padding-top: 20px;\n    }\n}\n.post-card {\n    margin-top: -150px;\n    min-height: 100px;\n    padding: 35px;\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, .2);\n    .post-meta {\n        margin-top: 8px;\n    }\n}\n.post-card-title {\n    font-size: 32px;\n}\n.post-nav {\n    margin-top: 30px;\n    padding: 16px 0 0;\n\n    .prev,\n    .next {\n        width: 47%;\n        background: @codeBg;\n    }\n\n    .next {\n        text-align: right;\n    }\n}\n\n.post-nav-link {\n    display: block;\n    line-height: 2em;\n    font-size: 16px;\n    padding: 10px 16px;\n\n    .title {\n        .hoverLine(@primaryColor);\n    }\n\n    .icon {\n        vertical-align: -9%;\n    }\n\n    .tips {\n        color: @secondaryTextColor;\n    }\n}\n\n.post-copyright {\n    margin-bottom: 100px;\n    font-size: 14px;\n\n    .content {\n        margin-bottom: 1em;\n        padding: 20px 30px;\n        word-break: break-all;\n        color: @secondaryTextColor;\n        background: lighten( @lightPrimaryColor, 12%);\n        border-radius: 30px 30px 0;\n    }\n\n    footer {\n        float: right;\n\n        a {\n            position: relative;\n            display: block;\n            overflow: hidden;\n            padding: 0 16px 0 42px;\n            height: 28px;\n            line-height: 28px;\n            color: @secondaryTextColor;\n            background: lighten( @lightPrimaryColor, 12%);\n            border-radius: 14px;\n        }\n        img {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 28px;\n            height: 28px;\n            border-radius: 50%;\n        }\n    }\n}\n\n.post-footer {\n    position: relative;\n    margin: 0 -35px;\n    padding: 20px 35px 0;\n    border-top: 1px solid #ddd;\n}\n\n.post-content {\n    padding-bottom: 20px;\n    line-height: 1.8;\n\n    >.highlight,\n    >.image-bubble,\n    >pre {\n        margin-left: -35px;\n        margin-right: -35px;\n    }\n\n    >.highlight,\n    >pre {\n        padding: 20px 35px;\n    }\n\n    .image-bubble {\n        margin-top: 20px;\n        margin-bottom: 20px;\n        text-align: center;\n    }\n    .image-caption {\n        display: inline-block;\n        margin-top: 10px;\n        color: @secondaryTextColor;\n    }\n\n    .headerlink {\n        visibility: hidden;\n        margin-left: -1em;\n        padding-right: 5px;\n        color: @lightPrimaryColor;\n\n        &:before {\n            content: \"#\";\n        }\n    }\n\n    p {\n        word-wrap: break-word;\n    }\n\n    p,\n    li {\n        a {\n            color: @accentColor;\n            border-bottom: 1px dotted lighten(@accentColor, 20%);\n            word-break: break-all;\n\n            &:hover,\n            &:active {\n                text-decoration: none;\n                border-bottom-style: solid;\n                opacity: .7;\n            }\n        }\n    }\n\n    strong {\n        font-weight: 600;\n        color: @primaryColor;\n        a {\n            border-color: @accentColor\n        }\n    }\n\n    em {\n        color: @secondaryTextColor\n    }\n\n    h1 {\n        font-size: 24px;\n    }\n\n    h2 {\n        font-size: 22px;\n    }\n\n    h3 {\n        font-size: 20px;\n    }\n\n    h4 {\n        font-size: 18px;\n    }\n\n    h5 {\n        font-size: 16px;\n    }\n\n    h6 {\n        font-size: 14px;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5 {\n        padding-top: @headerH;\n        margin-top: @headerH * -1;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    blockquote,\n    ol,\n    p,\n    pre,\n    table,\n    ul,\n    figure,\n    .video-container {\n        margin-bottom: 20px;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n        color: @primaryColor;\n        &:hover {\n            .headerlink {\n                visibility: visible\n            }\n        }\n    }\n\n    blockquote p:first-child,\n    blockquote:first-child,\n    ol:first-child,\n    p:first-child,\n    pre:first-child,\n    table:first-child,\n    ul:first-child,\n    figure:first-child {\n        margin-top: 0\n    }\n\n    ol,\n    ul {\n        font-size: 14px;\n        line-height: 30px;\n    }\n\n    video,\n    audio {\n        max-width: 100%;\n    }\n\n\n    blockquote {\n        position: relative;\n        padding: 16px 20px;\n        border-left: 4px solid @primaryColor;\n        color: lighten(@primaryTextColor, 30%);\n        background: @codeBg;\n        font-size: 14px;\n        border-radius: 0 2px 2px 0;\n\n        p {\n            margin: 0;\n        }\n\n        footer {\n            margin-top: 10px;\n            text-align: right;\n            font-size: 80%;\n        }\n    }\n\n    table {\n        width: 100%;\n        border: 1px solid #dedede;\n        margin: 15px 0;\n        border-collapse: collapse;\n\n        tr,\n        td {\n            height: 35px;\n        }\n\n        thead {\n            tr {\n                background: #f8f8f8;\n            }\n        }\n\n        tbody {\n            tr {\n                &:hover {\n                    background: #efefef;\n                }\n            }\n        }\n\n        td,\n        th {\n            border: 1px solid #dedede;\n            padding: 0 10px;\n        }\n    }\n\n    figure {\n        table {\n            border: none;\n            width: auto;\n            margin: 0;\n\n            tbody {\n                tr {\n                    &:hover {\n                        background: none;\n                    }\n                }\n\n                td {\n                    border: none;\n                }\n            }\n        }\n    }\n\n    code,\n    kbd,\n    pre,\n    samp {\n        font-family: @font-code;\n    }\n\n    code,\n    pre {\n        background: @codeBg\n    }\n\n    p code,\n    li code {\n        color: @accentColor;\n        line-height: 1;\n        margin: 0 4px;\n        font-size: 80%;\n        padding: 3px 5px;\n        border: 1px solid #eee;\n        border-radius: 2px;\n        word-wrap: break-word;\n    }\n\n    pre {\n        margin: 24px 0;\n        code {\n            border-radius: 0;\n            font-size: inherit;\n            margin: 0;\n            padding: 0;\n        }\n    }\n}\n\n\n.comments {\n    padding: 40px 0 0;\n}\n\n@media screen and (max-width:760px) {\n    .post-widget {\n        display: none\n    }\n\n    .post-article {\n        float: none;\n        width: 100%!important;\n        padding-right: 0!important;\n    }\n\n    .post-card {\n        position: relative;\n        margin: -20px -16px 0;\n        border-radius: 0;\n        padding: 16px;\n\n        .post-meta {\n            margin-top: -40px;\n            padding: 20px 12px;\n            background: #fff;\n            box-shadow: 0 1px 4px 0 rgba(0,0,0,.16);\n            border-radius: 2px;\n        }\n    }\n\n    .post-card-title {\n        display: none\n    }\n\n    .post-nav {\n        padding: 0;\n        margin-left: -16px;\n        margin-right: -16px;\n        .prev,\n        .next {\n            width: 50%;\n            background: #fff;\n            border-bottom: 1px solid @borderColor;\n            box-shadow: @boxShadow;\n        }\n        h4 {\n            font-size: 16px;\n            line-height: 1.5;\n        }\n    }\n\n    .has-jax {\n        font-size: 13px;\n    }\n    .MJXc-display {\n        overflow-x: auto;\n        overflow-y: hidden;\n    }\n\n    .comments {\n        margin-left: -16px;\n        margin-right: -16px\n    }\n}\n\n@media screen and (max-width:480px) {\n    .has-jax {\n        font-size: 10px;\n    }\n    .post-content {\n        .highlight,\n        .image-bubble,\n        >pre {\n            margin-left: -16px;\n            margin-right: -16px;\n        }\n        .highlight,\n        >pre {\n            padding: 16px;\n        }\n    }\n}\n\n\n```\n","slug":"前端开发/Hexo/No文章页面布局优化设置","published":0,"date":"2017-06-08T02:32:33.177Z","updated":"2017-06-08T02:48:50.215Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhots00342whqi678xzej","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div></pre></td><td class=\"code\"><pre><div class=\"line\">.post-widget &#123;</div><div class=\"line\">    float: right;//页面目录显示位置</div><div class=\"line\">    width: 20%;</div><div class=\"line\">    padding-left: 30px;</div><div class=\"line\">    min-height: 1px;</div><div class=\"line\">    +.post-article &#123;</div><div class=\"line\">        float: left;</div><div class=\"line\">        width: 80%;</div><div class=\"line\">        padding-right: 30px;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-toc-wrap &#123;</div><div class=\"line\">    position: fixed;</div><div class=\"line\">    overflow-x: hidden;</div><div class=\"line\">    width: 20%;</div><div class=\"line\">    &amp;.fixed &#123;</div><div class=\"line\">        top: @headerH + 20px;</div><div class=\"line\">        bottom: 140px;</div><div class=\"line\">        overflow-y: auto;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ol,</div><div class=\"line\">    ul &#123;</div><div class=\"line\">        list-style: none;</div><div class=\"line\">        margin: 0;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h4 &#123;</div><div class=\"line\">        padding: 0 0 10px 20px;</div><div class=\"line\">        font-size: 15px;</div><div class=\"line\">        font-weight: 600;</div><div class=\"line\">        color: #727272;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc-child &#123;</div><div class=\"line\">    padding-left: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc &#123;</div><div class=\"line\">    display: inline-block;</div><div class=\"line\">    padding: 0;</div><div class=\"line\">    font-size: 13px;</div><div class=\"line\">    &gt;.post-toc-item &#123;</div><div class=\"line\">        position: relative;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc-item &#123;</div><div class=\"line\">    font-weight: 400;</div><div class=\"line\">    color: @secondaryTextColor;</div><div class=\"line\"></div><div class=\"line\">    &amp;.active &#123;</div><div class=\"line\">        &gt;.post-toc-link &#123;</div><div class=\"line\">            font-weight: 600;</div><div class=\"line\">            color: @primaryColor;</div><div class=\"line\">            &amp;:before &#123;</div><div class=\"line\">                background: rgba(0, 0, 0, .06);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            &amp;:after &#123;</div><div class=\"line\">                border-left: 3px solid @primaryColor;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc-link &#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    z-index: 2;</div><div class=\"line\">    display: block;</div><div class=\"line\">    padding: 3px 20px;</div><div class=\"line\">    line-height: 1.5rem;</div><div class=\"line\">    color: inherit;</div><div class=\"line\">    word-break: break-all;</div><div class=\"line\"></div><div class=\"line\">    &amp;:hover &#123;</div><div class=\"line\">        opacity: .8;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    &amp;:before,</div><div class=\"line\">    &amp;:after &#123;</div><div class=\"line\">        content: &quot;&quot;;</div><div class=\"line\">        position: absolute;</div><div class=\"line\">        z-index: 1;</div><div class=\"line\">        top: 0;</div><div class=\"line\">        right: 0;</div><div class=\"line\">        width: 100%;</div><div class=\"line\">        height: 100%;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">.post-article &#123;</div><div class=\"line\">    .post-content &#123;</div><div class=\"line\">        padding-top: 20px;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-card &#123;</div><div class=\"line\">    margin-top: -150px;</div><div class=\"line\">    min-height: 100px;</div><div class=\"line\">    padding: 35px;</div><div class=\"line\">    background: #fff;</div><div class=\"line\">    border-radius: 4px;</div><div class=\"line\">    box-shadow: 0 10px 30px rgba(0, 0, 0, .2);</div><div class=\"line\">    .post-meta &#123;</div><div class=\"line\">        margin-top: 8px;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-card-title &#123;</div><div class=\"line\">    font-size: 32px;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-nav &#123;</div><div class=\"line\">    margin-top: 30px;</div><div class=\"line\">    padding: 16px 0 0;</div><div class=\"line\"></div><div class=\"line\">    .prev,</div><div class=\"line\">    .next &#123;</div><div class=\"line\">        width: 47%;</div><div class=\"line\">        background: @codeBg;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .next &#123;</div><div class=\"line\">        text-align: right;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-nav-link &#123;</div><div class=\"line\">    display: block;</div><div class=\"line\">    line-height: 2em;</div><div class=\"line\">    font-size: 16px;</div><div class=\"line\">    padding: 10px 16px;</div><div class=\"line\"></div><div class=\"line\">    .title &#123;</div><div class=\"line\">        .hoverLine(@primaryColor);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .icon &#123;</div><div class=\"line\">        vertical-align: -9%;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .tips &#123;</div><div class=\"line\">        color: @secondaryTextColor;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-copyright &#123;</div><div class=\"line\">    margin-bottom: 100px;</div><div class=\"line\">    font-size: 14px;</div><div class=\"line\"></div><div class=\"line\">    .content &#123;</div><div class=\"line\">        margin-bottom: 1em;</div><div class=\"line\">        padding: 20px 30px;</div><div class=\"line\">        word-break: break-all;</div><div class=\"line\">        color: @secondaryTextColor;</div><div class=\"line\">        background: lighten( @lightPrimaryColor, 12%);</div><div class=\"line\">        border-radius: 30px 30px 0;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    footer &#123;</div><div class=\"line\">        float: right;</div><div class=\"line\"></div><div class=\"line\">        a &#123;</div><div class=\"line\">            position: relative;</div><div class=\"line\">            display: block;</div><div class=\"line\">            overflow: hidden;</div><div class=\"line\">            padding: 0 16px 0 42px;</div><div class=\"line\">            height: 28px;</div><div class=\"line\">            line-height: 28px;</div><div class=\"line\">            color: @secondaryTextColor;</div><div class=\"line\">            background: lighten( @lightPrimaryColor, 12%);</div><div class=\"line\">            border-radius: 14px;</div><div class=\"line\">        &#125;</div><div class=\"line\">        img &#123;</div><div class=\"line\">            position: absolute;</div><div class=\"line\">            top: 0;</div><div class=\"line\">            left: 0;</div><div class=\"line\">            width: 28px;</div><div class=\"line\">            height: 28px;</div><div class=\"line\">            border-radius: 50%;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-footer &#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    margin: 0 -35px;</div><div class=\"line\">    padding: 20px 35px 0;</div><div class=\"line\">    border-top: 1px solid #ddd;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-content &#123;</div><div class=\"line\">    padding-bottom: 20px;</div><div class=\"line\">    line-height: 1.8;</div><div class=\"line\"></div><div class=\"line\">    &gt;.highlight,</div><div class=\"line\">    &gt;.image-bubble,</div><div class=\"line\">    &gt;pre &#123;</div><div class=\"line\">        margin-left: -35px;</div><div class=\"line\">        margin-right: -35px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    &gt;.highlight,</div><div class=\"line\">    &gt;pre &#123;</div><div class=\"line\">        padding: 20px 35px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .image-bubble &#123;</div><div class=\"line\">        margin-top: 20px;</div><div class=\"line\">        margin-bottom: 20px;</div><div class=\"line\">        text-align: center;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .image-caption &#123;</div><div class=\"line\">        display: inline-block;</div><div class=\"line\">        margin-top: 10px;</div><div class=\"line\">        color: @secondaryTextColor;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .headerlink &#123;</div><div class=\"line\">        visibility: hidden;</div><div class=\"line\">        margin-left: -1em;</div><div class=\"line\">        padding-right: 5px;</div><div class=\"line\">        color: @lightPrimaryColor;</div><div class=\"line\"></div><div class=\"line\">        &amp;:before &#123;</div><div class=\"line\">            content: &quot;#&quot;;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    p &#123;</div><div class=\"line\">        word-wrap: break-word;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    p,</div><div class=\"line\">    li &#123;</div><div class=\"line\">        a &#123;</div><div class=\"line\">            color: @accentColor;</div><div class=\"line\">            border-bottom: 1px dotted lighten(@accentColor, 20%);</div><div class=\"line\">            word-break: break-all;</div><div class=\"line\"></div><div class=\"line\">            &amp;:hover,</div><div class=\"line\">            &amp;:active &#123;</div><div class=\"line\">                text-decoration: none;</div><div class=\"line\">                border-bottom-style: solid;</div><div class=\"line\">                opacity: .7;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    strong &#123;</div><div class=\"line\">        font-weight: 600;</div><div class=\"line\">        color: @primaryColor;</div><div class=\"line\">        a &#123;</div><div class=\"line\">            border-color: @accentColor</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    em &#123;</div><div class=\"line\">        color: @secondaryTextColor</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1 &#123;</div><div class=\"line\">        font-size: 24px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h2 &#123;</div><div class=\"line\">        font-size: 22px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h3 &#123;</div><div class=\"line\">        font-size: 20px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h4 &#123;</div><div class=\"line\">        font-size: 18px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h5 &#123;</div><div class=\"line\">        font-size: 16px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h6 &#123;</div><div class=\"line\">        font-size: 14px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1,</div><div class=\"line\">    h2,</div><div class=\"line\">    h3,</div><div class=\"line\">    h4,</div><div class=\"line\">    h5 &#123;</div><div class=\"line\">        padding-top: @headerH;</div><div class=\"line\">        margin-top: @headerH * -1;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1,</div><div class=\"line\">    h2,</div><div class=\"line\">    h3,</div><div class=\"line\">    h4,</div><div class=\"line\">    blockquote,</div><div class=\"line\">    ol,</div><div class=\"line\">    p,</div><div class=\"line\">    pre,</div><div class=\"line\">    table,</div><div class=\"line\">    ul,</div><div class=\"line\">    figure,</div><div class=\"line\">    .video-container &#123;</div><div class=\"line\">        margin-bottom: 20px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1,</div><div class=\"line\">    h2,</div><div class=\"line\">    h3,</div><div class=\"line\">    h4,</div><div class=\"line\">    h5,</div><div class=\"line\">    h6 &#123;</div><div class=\"line\">        color: @primaryColor;</div><div class=\"line\">        &amp;:hover &#123;</div><div class=\"line\">            .headerlink &#123;</div><div class=\"line\">                visibility: visible</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    blockquote p:first-child,</div><div class=\"line\">    blockquote:first-child,</div><div class=\"line\">    ol:first-child,</div><div class=\"line\">    p:first-child,</div><div class=\"line\">    pre:first-child,</div><div class=\"line\">    table:first-child,</div><div class=\"line\">    ul:first-child,</div><div class=\"line\">    figure:first-child &#123;</div><div class=\"line\">        margin-top: 0</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ol,</div><div class=\"line\">    ul &#123;</div><div class=\"line\">        font-size: 14px;</div><div class=\"line\">        line-height: 30px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    video,</div><div class=\"line\">    audio &#123;</div><div class=\"line\">        max-width: 100%;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    blockquote &#123;</div><div class=\"line\">        position: relative;</div><div class=\"line\">        padding: 16px 20px;</div><div class=\"line\">        border-left: 4px solid @primaryColor;</div><div class=\"line\">        color: lighten(@primaryTextColor, 30%);</div><div class=\"line\">        background: @codeBg;</div><div class=\"line\">        font-size: 14px;</div><div class=\"line\">        border-radius: 0 2px 2px 0;</div><div class=\"line\"></div><div class=\"line\">        p &#123;</div><div class=\"line\">            margin: 0;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        footer &#123;</div><div class=\"line\">            margin-top: 10px;</div><div class=\"line\">            text-align: right;</div><div class=\"line\">            font-size: 80%;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    table &#123;</div><div class=\"line\">        width: 100%;</div><div class=\"line\">        border: 1px solid #dedede;</div><div class=\"line\">        margin: 15px 0;</div><div class=\"line\">        border-collapse: collapse;</div><div class=\"line\"></div><div class=\"line\">        tr,</div><div class=\"line\">        td &#123;</div><div class=\"line\">            height: 35px;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        thead &#123;</div><div class=\"line\">            tr &#123;</div><div class=\"line\">                background: #f8f8f8;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        tbody &#123;</div><div class=\"line\">            tr &#123;</div><div class=\"line\">                &amp;:hover &#123;</div><div class=\"line\">                    background: #efefef;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        td,</div><div class=\"line\">        th &#123;</div><div class=\"line\">            border: 1px solid #dedede;</div><div class=\"line\">            padding: 0 10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    figure &#123;</div><div class=\"line\">        table &#123;</div><div class=\"line\">            border: none;</div><div class=\"line\">            width: auto;</div><div class=\"line\">            margin: 0;</div><div class=\"line\"></div><div class=\"line\">            tbody &#123;</div><div class=\"line\">                tr &#123;</div><div class=\"line\">                    &amp;:hover &#123;</div><div class=\"line\">                        background: none;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                td &#123;</div><div class=\"line\">                    border: none;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    code,</div><div class=\"line\">    kbd,</div><div class=\"line\">    pre,</div><div class=\"line\">    samp &#123;</div><div class=\"line\">        font-family: @font-code;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    code,</div><div class=\"line\">    pre &#123;</div><div class=\"line\">        background: @codeBg</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    p code,</div><div class=\"line\">    li code &#123;</div><div class=\"line\">        color: @accentColor;</div><div class=\"line\">        line-height: 1;</div><div class=\"line\">        margin: 0 4px;</div><div class=\"line\">        font-size: 80%;</div><div class=\"line\">        padding: 3px 5px;</div><div class=\"line\">        border: 1px solid #eee;</div><div class=\"line\">        border-radius: 2px;</div><div class=\"line\">        word-wrap: break-word;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    pre &#123;</div><div class=\"line\">        margin: 24px 0;</div><div class=\"line\">        code &#123;</div><div class=\"line\">            border-radius: 0;</div><div class=\"line\">            font-size: inherit;</div><div class=\"line\">            margin: 0;</div><div class=\"line\">            padding: 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">.comments &#123;</div><div class=\"line\">    padding: 40px 0 0;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (max-width:760px) &#123;</div><div class=\"line\">    .post-widget &#123;</div><div class=\"line\">        display: none</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-article &#123;</div><div class=\"line\">        float: none;</div><div class=\"line\">        width: 100%!important;</div><div class=\"line\">        padding-right: 0!important;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-card &#123;</div><div class=\"line\">        position: relative;</div><div class=\"line\">        margin: -20px -16px 0;</div><div class=\"line\">        border-radius: 0;</div><div class=\"line\">        padding: 16px;</div><div class=\"line\"></div><div class=\"line\">        .post-meta &#123;</div><div class=\"line\">            margin-top: -40px;</div><div class=\"line\">            padding: 20px 12px;</div><div class=\"line\">            background: #fff;</div><div class=\"line\">            box-shadow: 0 1px 4px 0 rgba(0,0,0,.16);</div><div class=\"line\">            border-radius: 2px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-card-title &#123;</div><div class=\"line\">        display: none</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-nav &#123;</div><div class=\"line\">        padding: 0;</div><div class=\"line\">        margin-left: -16px;</div><div class=\"line\">        margin-right: -16px;</div><div class=\"line\">        .prev,</div><div class=\"line\">        .next &#123;</div><div class=\"line\">            width: 50%;</div><div class=\"line\">            background: #fff;</div><div class=\"line\">            border-bottom: 1px solid @borderColor;</div><div class=\"line\">            box-shadow: @boxShadow;</div><div class=\"line\">        &#125;</div><div class=\"line\">        h4 &#123;</div><div class=\"line\">            font-size: 16px;</div><div class=\"line\">            line-height: 1.5;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .has-jax &#123;</div><div class=\"line\">        font-size: 13px;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .MJXc-display &#123;</div><div class=\"line\">        overflow-x: auto;</div><div class=\"line\">        overflow-y: hidden;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .comments &#123;</div><div class=\"line\">        margin-left: -16px;</div><div class=\"line\">        margin-right: -16px</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (max-width:480px) &#123;</div><div class=\"line\">    .has-jax &#123;</div><div class=\"line\">        font-size: 10px;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .post-content &#123;</div><div class=\"line\">        .highlight,</div><div class=\"line\">        .image-bubble,</div><div class=\"line\">        &gt;pre &#123;</div><div class=\"line\">            margin-left: -16px;</div><div class=\"line\">            margin-right: -16px;</div><div class=\"line\">        &#125;</div><div class=\"line\">        .highlight,</div><div class=\"line\">        &gt;pre &#123;</div><div class=\"line\">            padding: 16px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div></pre></td><td class=\"code\"><pre><div class=\"line\">.post-widget &#123;</div><div class=\"line\">    float: right;//页面目录显示位置</div><div class=\"line\">    width: 20%;</div><div class=\"line\">    padding-left: 30px;</div><div class=\"line\">    min-height: 1px;</div><div class=\"line\">    +.post-article &#123;</div><div class=\"line\">        float: left;</div><div class=\"line\">        width: 80%;</div><div class=\"line\">        padding-right: 30px;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-toc-wrap &#123;</div><div class=\"line\">    position: fixed;</div><div class=\"line\">    overflow-x: hidden;</div><div class=\"line\">    width: 20%;</div><div class=\"line\">    &amp;.fixed &#123;</div><div class=\"line\">        top: @headerH + 20px;</div><div class=\"line\">        bottom: 140px;</div><div class=\"line\">        overflow-y: auto;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ol,</div><div class=\"line\">    ul &#123;</div><div class=\"line\">        list-style: none;</div><div class=\"line\">        margin: 0;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h4 &#123;</div><div class=\"line\">        padding: 0 0 10px 20px;</div><div class=\"line\">        font-size: 15px;</div><div class=\"line\">        font-weight: 600;</div><div class=\"line\">        color: #727272;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc-child &#123;</div><div class=\"line\">    padding-left: 10px;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc &#123;</div><div class=\"line\">    display: inline-block;</div><div class=\"line\">    padding: 0;</div><div class=\"line\">    font-size: 13px;</div><div class=\"line\">    &gt;.post-toc-item &#123;</div><div class=\"line\">        position: relative;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc-item &#123;</div><div class=\"line\">    font-weight: 400;</div><div class=\"line\">    color: @secondaryTextColor;</div><div class=\"line\"></div><div class=\"line\">    &amp;.active &#123;</div><div class=\"line\">        &gt;.post-toc-link &#123;</div><div class=\"line\">            font-weight: 600;</div><div class=\"line\">            color: @primaryColor;</div><div class=\"line\">            &amp;:before &#123;</div><div class=\"line\">                background: rgba(0, 0, 0, .06);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            &amp;:after &#123;</div><div class=\"line\">                border-left: 3px solid @primaryColor;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-toc-link &#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    z-index: 2;</div><div class=\"line\">    display: block;</div><div class=\"line\">    padding: 3px 20px;</div><div class=\"line\">    line-height: 1.5rem;</div><div class=\"line\">    color: inherit;</div><div class=\"line\">    word-break: break-all;</div><div class=\"line\"></div><div class=\"line\">    &amp;:hover &#123;</div><div class=\"line\">        opacity: .8;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    &amp;:before,</div><div class=\"line\">    &amp;:after &#123;</div><div class=\"line\">        content: &quot;&quot;;</div><div class=\"line\">        position: absolute;</div><div class=\"line\">        z-index: 1;</div><div class=\"line\">        top: 0;</div><div class=\"line\">        right: 0;</div><div class=\"line\">        width: 100%;</div><div class=\"line\">        height: 100%;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">.post-article &#123;</div><div class=\"line\">    .post-content &#123;</div><div class=\"line\">        padding-top: 20px;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-card &#123;</div><div class=\"line\">    margin-top: -150px;</div><div class=\"line\">    min-height: 100px;</div><div class=\"line\">    padding: 35px;</div><div class=\"line\">    background: #fff;</div><div class=\"line\">    border-radius: 4px;</div><div class=\"line\">    box-shadow: 0 10px 30px rgba(0, 0, 0, .2);</div><div class=\"line\">    .post-meta &#123;</div><div class=\"line\">        margin-top: 8px;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-card-title &#123;</div><div class=\"line\">    font-size: 32px;</div><div class=\"line\">&#125;</div><div class=\"line\">.post-nav &#123;</div><div class=\"line\">    margin-top: 30px;</div><div class=\"line\">    padding: 16px 0 0;</div><div class=\"line\"></div><div class=\"line\">    .prev,</div><div class=\"line\">    .next &#123;</div><div class=\"line\">        width: 47%;</div><div class=\"line\">        background: @codeBg;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .next &#123;</div><div class=\"line\">        text-align: right;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-nav-link &#123;</div><div class=\"line\">    display: block;</div><div class=\"line\">    line-height: 2em;</div><div class=\"line\">    font-size: 16px;</div><div class=\"line\">    padding: 10px 16px;</div><div class=\"line\"></div><div class=\"line\">    .title &#123;</div><div class=\"line\">        .hoverLine(@primaryColor);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .icon &#123;</div><div class=\"line\">        vertical-align: -9%;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .tips &#123;</div><div class=\"line\">        color: @secondaryTextColor;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-copyright &#123;</div><div class=\"line\">    margin-bottom: 100px;</div><div class=\"line\">    font-size: 14px;</div><div class=\"line\"></div><div class=\"line\">    .content &#123;</div><div class=\"line\">        margin-bottom: 1em;</div><div class=\"line\">        padding: 20px 30px;</div><div class=\"line\">        word-break: break-all;</div><div class=\"line\">        color: @secondaryTextColor;</div><div class=\"line\">        background: lighten( @lightPrimaryColor, 12%);</div><div class=\"line\">        border-radius: 30px 30px 0;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    footer &#123;</div><div class=\"line\">        float: right;</div><div class=\"line\"></div><div class=\"line\">        a &#123;</div><div class=\"line\">            position: relative;</div><div class=\"line\">            display: block;</div><div class=\"line\">            overflow: hidden;</div><div class=\"line\">            padding: 0 16px 0 42px;</div><div class=\"line\">            height: 28px;</div><div class=\"line\">            line-height: 28px;</div><div class=\"line\">            color: @secondaryTextColor;</div><div class=\"line\">            background: lighten( @lightPrimaryColor, 12%);</div><div class=\"line\">            border-radius: 14px;</div><div class=\"line\">        &#125;</div><div class=\"line\">        img &#123;</div><div class=\"line\">            position: absolute;</div><div class=\"line\">            top: 0;</div><div class=\"line\">            left: 0;</div><div class=\"line\">            width: 28px;</div><div class=\"line\">            height: 28px;</div><div class=\"line\">            border-radius: 50%;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-footer &#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    margin: 0 -35px;</div><div class=\"line\">    padding: 20px 35px 0;</div><div class=\"line\">    border-top: 1px solid #ddd;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">.post-content &#123;</div><div class=\"line\">    padding-bottom: 20px;</div><div class=\"line\">    line-height: 1.8;</div><div class=\"line\"></div><div class=\"line\">    &gt;.highlight,</div><div class=\"line\">    &gt;.image-bubble,</div><div class=\"line\">    &gt;pre &#123;</div><div class=\"line\">        margin-left: -35px;</div><div class=\"line\">        margin-right: -35px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    &gt;.highlight,</div><div class=\"line\">    &gt;pre &#123;</div><div class=\"line\">        padding: 20px 35px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .image-bubble &#123;</div><div class=\"line\">        margin-top: 20px;</div><div class=\"line\">        margin-bottom: 20px;</div><div class=\"line\">        text-align: center;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .image-caption &#123;</div><div class=\"line\">        display: inline-block;</div><div class=\"line\">        margin-top: 10px;</div><div class=\"line\">        color: @secondaryTextColor;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .headerlink &#123;</div><div class=\"line\">        visibility: hidden;</div><div class=\"line\">        margin-left: -1em;</div><div class=\"line\">        padding-right: 5px;</div><div class=\"line\">        color: @lightPrimaryColor;</div><div class=\"line\"></div><div class=\"line\">        &amp;:before &#123;</div><div class=\"line\">            content: &quot;#&quot;;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    p &#123;</div><div class=\"line\">        word-wrap: break-word;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    p,</div><div class=\"line\">    li &#123;</div><div class=\"line\">        a &#123;</div><div class=\"line\">            color: @accentColor;</div><div class=\"line\">            border-bottom: 1px dotted lighten(@accentColor, 20%);</div><div class=\"line\">            word-break: break-all;</div><div class=\"line\"></div><div class=\"line\">            &amp;:hover,</div><div class=\"line\">            &amp;:active &#123;</div><div class=\"line\">                text-decoration: none;</div><div class=\"line\">                border-bottom-style: solid;</div><div class=\"line\">                opacity: .7;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    strong &#123;</div><div class=\"line\">        font-weight: 600;</div><div class=\"line\">        color: @primaryColor;</div><div class=\"line\">        a &#123;</div><div class=\"line\">            border-color: @accentColor</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    em &#123;</div><div class=\"line\">        color: @secondaryTextColor</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1 &#123;</div><div class=\"line\">        font-size: 24px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h2 &#123;</div><div class=\"line\">        font-size: 22px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h3 &#123;</div><div class=\"line\">        font-size: 20px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h4 &#123;</div><div class=\"line\">        font-size: 18px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h5 &#123;</div><div class=\"line\">        font-size: 16px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h6 &#123;</div><div class=\"line\">        font-size: 14px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1,</div><div class=\"line\">    h2,</div><div class=\"line\">    h3,</div><div class=\"line\">    h4,</div><div class=\"line\">    h5 &#123;</div><div class=\"line\">        padding-top: @headerH;</div><div class=\"line\">        margin-top: @headerH * -1;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1,</div><div class=\"line\">    h2,</div><div class=\"line\">    h3,</div><div class=\"line\">    h4,</div><div class=\"line\">    blockquote,</div><div class=\"line\">    ol,</div><div class=\"line\">    p,</div><div class=\"line\">    pre,</div><div class=\"line\">    table,</div><div class=\"line\">    ul,</div><div class=\"line\">    figure,</div><div class=\"line\">    .video-container &#123;</div><div class=\"line\">        margin-bottom: 20px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    h1,</div><div class=\"line\">    h2,</div><div class=\"line\">    h3,</div><div class=\"line\">    h4,</div><div class=\"line\">    h5,</div><div class=\"line\">    h6 &#123;</div><div class=\"line\">        color: @primaryColor;</div><div class=\"line\">        &amp;:hover &#123;</div><div class=\"line\">            .headerlink &#123;</div><div class=\"line\">                visibility: visible</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    blockquote p:first-child,</div><div class=\"line\">    blockquote:first-child,</div><div class=\"line\">    ol:first-child,</div><div class=\"line\">    p:first-child,</div><div class=\"line\">    pre:first-child,</div><div class=\"line\">    table:first-child,</div><div class=\"line\">    ul:first-child,</div><div class=\"line\">    figure:first-child &#123;</div><div class=\"line\">        margin-top: 0</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    ol,</div><div class=\"line\">    ul &#123;</div><div class=\"line\">        font-size: 14px;</div><div class=\"line\">        line-height: 30px;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    video,</div><div class=\"line\">    audio &#123;</div><div class=\"line\">        max-width: 100%;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    blockquote &#123;</div><div class=\"line\">        position: relative;</div><div class=\"line\">        padding: 16px 20px;</div><div class=\"line\">        border-left: 4px solid @primaryColor;</div><div class=\"line\">        color: lighten(@primaryTextColor, 30%);</div><div class=\"line\">        background: @codeBg;</div><div class=\"line\">        font-size: 14px;</div><div class=\"line\">        border-radius: 0 2px 2px 0;</div><div class=\"line\"></div><div class=\"line\">        p &#123;</div><div class=\"line\">            margin: 0;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        footer &#123;</div><div class=\"line\">            margin-top: 10px;</div><div class=\"line\">            text-align: right;</div><div class=\"line\">            font-size: 80%;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    table &#123;</div><div class=\"line\">        width: 100%;</div><div class=\"line\">        border: 1px solid #dedede;</div><div class=\"line\">        margin: 15px 0;</div><div class=\"line\">        border-collapse: collapse;</div><div class=\"line\"></div><div class=\"line\">        tr,</div><div class=\"line\">        td &#123;</div><div class=\"line\">            height: 35px;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        thead &#123;</div><div class=\"line\">            tr &#123;</div><div class=\"line\">                background: #f8f8f8;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        tbody &#123;</div><div class=\"line\">            tr &#123;</div><div class=\"line\">                &amp;:hover &#123;</div><div class=\"line\">                    background: #efefef;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        td,</div><div class=\"line\">        th &#123;</div><div class=\"line\">            border: 1px solid #dedede;</div><div class=\"line\">            padding: 0 10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    figure &#123;</div><div class=\"line\">        table &#123;</div><div class=\"line\">            border: none;</div><div class=\"line\">            width: auto;</div><div class=\"line\">            margin: 0;</div><div class=\"line\"></div><div class=\"line\">            tbody &#123;</div><div class=\"line\">                tr &#123;</div><div class=\"line\">                    &amp;:hover &#123;</div><div class=\"line\">                        background: none;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                td &#123;</div><div class=\"line\">                    border: none;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    code,</div><div class=\"line\">    kbd,</div><div class=\"line\">    pre,</div><div class=\"line\">    samp &#123;</div><div class=\"line\">        font-family: @font-code;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    code,</div><div class=\"line\">    pre &#123;</div><div class=\"line\">        background: @codeBg</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    p code,</div><div class=\"line\">    li code &#123;</div><div class=\"line\">        color: @accentColor;</div><div class=\"line\">        line-height: 1;</div><div class=\"line\">        margin: 0 4px;</div><div class=\"line\">        font-size: 80%;</div><div class=\"line\">        padding: 3px 5px;</div><div class=\"line\">        border: 1px solid #eee;</div><div class=\"line\">        border-radius: 2px;</div><div class=\"line\">        word-wrap: break-word;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    pre &#123;</div><div class=\"line\">        margin: 24px 0;</div><div class=\"line\">        code &#123;</div><div class=\"line\">            border-radius: 0;</div><div class=\"line\">            font-size: inherit;</div><div class=\"line\">            margin: 0;</div><div class=\"line\">            padding: 0;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">.comments &#123;</div><div class=\"line\">    padding: 40px 0 0;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (max-width:760px) &#123;</div><div class=\"line\">    .post-widget &#123;</div><div class=\"line\">        display: none</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-article &#123;</div><div class=\"line\">        float: none;</div><div class=\"line\">        width: 100%!important;</div><div class=\"line\">        padding-right: 0!important;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-card &#123;</div><div class=\"line\">        position: relative;</div><div class=\"line\">        margin: -20px -16px 0;</div><div class=\"line\">        border-radius: 0;</div><div class=\"line\">        padding: 16px;</div><div class=\"line\"></div><div class=\"line\">        .post-meta &#123;</div><div class=\"line\">            margin-top: -40px;</div><div class=\"line\">            padding: 20px 12px;</div><div class=\"line\">            background: #fff;</div><div class=\"line\">            box-shadow: 0 1px 4px 0 rgba(0,0,0,.16);</div><div class=\"line\">            border-radius: 2px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-card-title &#123;</div><div class=\"line\">        display: none</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .post-nav &#123;</div><div class=\"line\">        padding: 0;</div><div class=\"line\">        margin-left: -16px;</div><div class=\"line\">        margin-right: -16px;</div><div class=\"line\">        .prev,</div><div class=\"line\">        .next &#123;</div><div class=\"line\">            width: 50%;</div><div class=\"line\">            background: #fff;</div><div class=\"line\">            border-bottom: 1px solid @borderColor;</div><div class=\"line\">            box-shadow: @boxShadow;</div><div class=\"line\">        &#125;</div><div class=\"line\">        h4 &#123;</div><div class=\"line\">            font-size: 16px;</div><div class=\"line\">            line-height: 1.5;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .has-jax &#123;</div><div class=\"line\">        font-size: 13px;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .MJXc-display &#123;</div><div class=\"line\">        overflow-x: auto;</div><div class=\"line\">        overflow-y: hidden;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    .comments &#123;</div><div class=\"line\">        margin-left: -16px;</div><div class=\"line\">        margin-right: -16px</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">@media screen and (max-width:480px) &#123;</div><div class=\"line\">    .has-jax &#123;</div><div class=\"line\">        font-size: 10px;</div><div class=\"line\">    &#125;</div><div class=\"line\">    .post-content &#123;</div><div class=\"line\">        .highlight,</div><div class=\"line\">        .image-bubble,</div><div class=\"line\">        &gt;pre &#123;</div><div class=\"line\">            margin-left: -16px;</div><div class=\"line\">            margin-right: -16px;</div><div class=\"line\">        &#125;</div><div class=\"line\">        .highlight,</div><div class=\"line\">        &gt;pre &#123;</div><div class=\"line\">            padding: 16px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"Html中符号的转义","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","date":"2017-06-09T02:27:35.000Z","description":null,"_content":"\n<!-- more -->\n","source":"_drafts/前端开发/Html/Html中符号的转义.md","raw":"---\ntitle: Html中符号的转义\ntags:\n  - null\n  - null\ncategories:\n  - null\n  - null\nkeywords: 'Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程'\ndate: 2017-06-09 10:27:35\ndescription:\n---\n\n<!-- more -->\n","slug":"前端开发/Html/Html中符号的转义","published":0,"updated":"2017-06-09T02:27:35.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhou600372whqqnnvn4b5","content":"<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"","more":""},{"title":"Git的使用总结","keywords":"Blog,Git","date":"2017-06-07T07:56:16.000Z","description":"在使用Git的过程中的一些总结","_content":">- 在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的\n<!-- more -->\n\n## gitbash中一些指令别名的设置\n```\n$ git config --global alias.st status //将status指定快捷键st\n$ git config --global alias.co checkout //将checkout指定快捷键co\n$ git config --global alias.ci commit //将commit指定快捷键ci\n$ git config --global alias.br branch //将branch指定快捷键br\n$ git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit\"\n```\n","source":"_drafts/开发工具/Git/Git的使用总结.md","raw":"---\ntitle: Git的使用总结\ncategories: \n- 开发工具\n- Git\nkeywords: 'Blog,Git'\ndate: 2017-06-07 15:56:16\ntags: \n- Git\ndescription: 在使用Git的过程中的一些总结\n---\n>- 在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的\n<!-- more -->\n\n## gitbash中一些指令别名的设置\n```\n$ git config --global alias.st status //将status指定快捷键st\n$ git config --global alias.co checkout //将checkout指定快捷键co\n$ git config --global alias.ci commit //将commit指定快捷键ci\n$ git config --global alias.br branch //将branch指定快捷键br\n$ git config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit\"\n```\n","slug":"开发工具/Git/Git的使用总结","published":0,"updated":"2017-06-08T06:07:17.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhouh003a2whqyqfmpikw","content":"<blockquote>\n<ul>\n<li>在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的<a id=\"more\"></a>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"gitbash中一些指令别名的设置\"><a href=\"#gitbash中一些指令别名的设置\" class=\"headerlink\" title=\"gitbash中一些指令别名的设置\"></a>gitbash中一些指令别名的设置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global alias.st status //将status指定快捷键st</div><div class=\"line\">$ git config --global alias.co checkout //将checkout指定快捷键co</div><div class=\"line\">$ git config --global alias.ci commit //将commit指定快捷键ci</div><div class=\"line\">$ git config --global alias.br branch //将branch指定快捷键br</div><div class=\"line\">$ git config --global alias.lg &quot;log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<ul>\n<li>在使用Git的过程中的一些总结,不具体说明,一点点记录在使用过程中遇到的","more":"</li>\n</ul>\n</blockquote>\n<h2 id=\"gitbash中一些指令别名的设置\"><a href=\"#gitbash中一些指令别名的设置\" class=\"headerlink\" title=\"gitbash中一些指令别名的设置\"></a>gitbash中一些指令别名的设置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config --global alias.st status //将status指定快捷键st</div><div class=\"line\">$ git config --global alias.co checkout //将checkout指定快捷键co</div><div class=\"line\">$ git config --global alias.ci commit //将commit指定快捷键ci</div><div class=\"line\">$ git config --global alias.br branch //将branch指定快捷键br</div><div class=\"line\">$ git config --global alias.lg &quot;log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div></pre></td></tr></table></figure>"},{"title":"MarkDown的语法使用说明","keywords":"Blog,txtEdit","date":"2017-06-07T07:32:29.000Z","description":"记录MarkDown在使用过程中常用的语法","_content":"记录MarkDown在使用过程中常用的语法\n<!-- more -->\n>- 插入图片 :!{}(http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[]\n>- 插入链接 :{VanXin}(http://www.icoder.xin \"悬浮说明\")把{}改为[]\n","source":"_drafts/开发工具/MarkDown/MarkDown的语法使用说明.md","raw":"---\ntitle: MarkDown的语法使用说明\ncategories: \n- 开发工具\n- MarkDown\nkeywords: 'Blog,txtEdit'\ndate: 2017-06-07 15:32:29\ntags: \n- MarkDown\n- 文本编辑\ndescription: 记录MarkDown在使用过程中常用的语法\n---\n记录MarkDown在使用过程中常用的语法\n<!-- more -->\n>- 插入图片 :!{}(http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[]\n>- 插入链接 :{VanXin}(http://www.icoder.xin \"悬浮说明\")把{}改为[]\n","slug":"开发工具/MarkDown/MarkDown的语法使用说明","published":0,"updated":"2017-06-08T06:11:02.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wuhoun003d2whqcgrrr4pj","content":"<p>记录MarkDown在使用过程中常用的语法<br><a id=\"more\"></a></p>\n<blockquote>\n<ul>\n<li>插入图片 :!{}(<a href=\"http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[\" target=\"_blank\" rel=\"external\">http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[</a>]</li>\n<li>插入链接 :{VanXin}(<a href=\"http://www.icoder.xin\">http://www.icoder.xin</a> “悬浮说明”)把{}改为[]</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>记录MarkDown在使用过程中常用的语法<br>","more":"</p>\n<blockquote>\n<ul>\n<li>插入图片 :!{}(<a href=\"http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[\" target=\"_blank\" rel=\"external\">http://or5qwkb5l.bkt.clouddn.com/comments.png)把{}改为[</a>]</li>\n<li>插入链接 :{VanXin}(<a href=\"http://www.icoder.xin\">http://www.icoder.xin</a> “悬浮说明”)把{}改为[]</li>\n</ul>\n</blockquote>"},{"title":"request、session、application、page之间的区别","date":"2017-06-14T10:23:18.230Z","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","description":null,"_content":">Web开发过程中经常需要通过Http请求进行服务器和客户端的交互\n不可避免得回使用到request、session、application、page等。\n<!-- more -->\n\n## 了解几者的生命周期\n\n### 基本概念\n| 对象|生效时间|作用域|  实现接口 |\n|-|-|-|-|\n|request|HTTP请求开始到结束这段时间|在当前请求中有效|HttpServletRequest|\n|session|HTTP会话开始到结束这段时间|在当前会话中有效|HttpSession|\n|application|服务器启动到停止这段时间|在所有应用程序中有效|ServletContext|\n|page|当前页面,在一个jsp页面里有效当前页面|Jsp页面中有效|java.lang.Object|\n\n#### request\n>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量\n\n```\n在一个http的请求周期(见附录1)中都是有效的\n可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转\n```\n##### request的实现\n>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的\n - 变量的存放\n  - void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中\n  -  Object getAttribute(String name) ：从request作用域中取得指定名字的信息\n - 数据之间的传递\n  - doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。\n  - 设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet\n\n##### 附录1:http请求\n>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.\n\n[========]\n\n#### session\n>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束\n\n```\n从用户打开浏览器开始，到用户关闭浏览器这中间的过程。\n这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）\n放到会话中的变量，就可以在当前会话的所有请求里使用\nsession和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.\n```\n\n##### session的实现\n>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域\n - 变量的存放\n  - Object HttpSession.getAttribute(String name) ：从session中获取信息\n  - void HttpSession.setAttribute(String name, Object value)： 向session中保存信息\n - 获取session对象\n  - HttpServletRequest.getSession()方法可以获得HttpSession对象\n  - 浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.\n  - session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟\n  - vooid invalidate() 强制结束当前session\n\n\n[========]\n\n#### application\n>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext\n\n```\n指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)\n此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效\napplication作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值\n在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据\n```\n\n##### application的实现\n>application作用域上的信息传递就是通过ServetContext实现的\n- 变量存放\n - Object getAttribute(String name) 从application中获取信息\n - void setAttribute(String name, Object value) 向application作用域中设置信息\n\n[========]\n\n#### page\n>page指当前页面。在一个jsp页面里有效\n\n```\n只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了\n```\n","source":"_drafts/Java/Jsp_Servlet/request、session、application、page之间的区别.md","raw":"---\ntitle: request、session、application、page之间的区别\ndate: 2017-06-14 09:41:01 星期三\ntags:\n- Http请求\n- Servlet\ncategories:\n- Java\n- Servlet\nkeywords: Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程\ndescription:\n---\n>Web开发过程中经常需要通过Http请求进行服务器和客户端的交互\n不可避免得回使用到request、session、application、page等。\n<!-- more -->\n\n## 了解几者的生命周期\n\n### 基本概念\n| 对象|生效时间|作用域|  实现接口 |\n|-|-|-|-|\n|request|HTTP请求开始到结束这段时间|在当前请求中有效|HttpServletRequest|\n|session|HTTP会话开始到结束这段时间|在当前会话中有效|HttpSession|\n|application|服务器启动到停止这段时间|在所有应用程序中有效|ServletContext|\n|page|当前页面,在一个jsp页面里有效当前页面|Jsp页面中有效|java.lang.Object|\n\n#### request\n>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量\n\n```\n在一个http的请求周期(见附录1)中都是有效的\n可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转\n```\n##### request的实现\n>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的\n - 变量的存放\n  - void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中\n  -  Object getAttribute(String name) ：从request作用域中取得指定名字的信息\n - 数据之间的传递\n  - doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。\n  - 设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet\n\n##### 附录1:http请求\n>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.\n\n[========]\n\n#### session\n>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束\n\n```\n从用户打开浏览器开始，到用户关闭浏览器这中间的过程。\n这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）\n放到会话中的变量，就可以在当前会话的所有请求里使用\nsession和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.\n```\n\n##### session的实现\n>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域\n - 变量的存放\n  - Object HttpSession.getAttribute(String name) ：从session中获取信息\n  - void HttpSession.setAttribute(String name, Object value)： 向session中保存信息\n - 获取session对象\n  - HttpServletRequest.getSession()方法可以获得HttpSession对象\n  - 浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.\n  - session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟\n  - vooid invalidate() 强制结束当前session\n\n\n[========]\n\n#### application\n>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext\n\n```\n指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)\n此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效\napplication作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值\n在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据\n```\n\n##### application的实现\n>application作用域上的信息传递就是通过ServetContext实现的\n- 变量存放\n - Object getAttribute(String name) 从application中获取信息\n - void setAttribute(String name, Object value) 向application作用域中设置信息\n\n[========]\n\n#### page\n>page指当前页面。在一个jsp页面里有效\n\n```\n只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了\n```\n","slug":"Java/Jsp_Servlet/request、session、application、page之间的区别","published":0,"updated":"2017-06-14T10:23:32.339Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj3wunqa70008mghqytd8snsv","content":"<blockquote>\n<p>Web开发过程中经常需要通过Http请求进行服务器和客户端的交互<br>不可避免得回使用到request、session、application、page等。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"了解几者的生命周期\"><a href=\"#了解几者的生命周期\" class=\"headerlink\" title=\"了解几者的生命周期\"></a>了解几者的生命周期</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><table>\n<thead>\n<tr>\n<th>对象</th>\n<th>生效时间</th>\n<th>作用域</th>\n<th>实现接口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td>HTTP请求开始到结束这段时间</td>\n<td>在当前请求中有效</td>\n<td>HttpServletRequest</td>\n</tr>\n<tr>\n<td>session</td>\n<td>HTTP会话开始到结束这段时间</td>\n<td>在当前会话中有效</td>\n<td>HttpSession</td>\n</tr>\n<tr>\n<td>application</td>\n<td>服务器启动到停止这段时间</td>\n<td>在所有应用程序中有效</td>\n<td>ServletContext</td>\n</tr>\n<tr>\n<td>page</td>\n<td>当前页面,在一个jsp页面里有效当前页面</td>\n<td>Jsp页面中有效</td>\n<td>java.lang.Object</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h4><blockquote>\n<p>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在一个http的请求周期(见附录1)中都是有效的</div><div class=\"line\">可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转</div></pre></td></tr></table></figure>\n<h5 id=\"request的实现\"><a href=\"#request的实现\" class=\"headerlink\" title=\"request的实现\"></a>request的实现</h5><blockquote>\n<p>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的</p>\n<ul>\n<li>变量的存放<ul>\n<li>void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中</li>\n<li>Object getAttribute(String name) ：从request作用域中取得指定名字的信息</li>\n</ul>\n</li>\n<li>数据之间的传递<ul>\n<li>doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。</li>\n<li>设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h5 id=\"附录1-http请求\"><a href=\"#附录1-http请求\" class=\"headerlink\" title=\"附录1:http请求\"></a>附录1:http请求</h5><blockquote>\n<p>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.</p>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h4><blockquote>\n<p>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">从用户打开浏览器开始，到用户关闭浏览器这中间的过程。</div><div class=\"line\">这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）</div><div class=\"line\">放到会话中的变量，就可以在当前会话的所有请求里使用</div><div class=\"line\">session和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.</div></pre></td></tr></table></figure>\n<h5 id=\"session的实现\"><a href=\"#session的实现\" class=\"headerlink\" title=\"session的实现\"></a>session的实现</h5><blockquote>\n<p>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域</p>\n<ul>\n<li>变量的存放<ul>\n<li>Object HttpSession.getAttribute(String name) ：从session中获取信息</li>\n<li>void HttpSession.setAttribute(String name, Object value)： 向session中保存信息</li>\n</ul>\n</li>\n<li>获取session对象<ul>\n<li>HttpServletRequest.getSession()方法可以获得HttpSession对象</li>\n<li>浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.</li>\n<li>session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟</li>\n<li>vooid invalidate() 强制结束当前session</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"application\"><a href=\"#application\" class=\"headerlink\" title=\"application\"></a>application</h4><blockquote>\n<p>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)</div><div class=\"line\">此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效</div><div class=\"line\">application作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值</div><div class=\"line\">在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据</div></pre></td></tr></table></figure>\n<h5 id=\"application的实现\"><a href=\"#application的实现\" class=\"headerlink\" title=\"application的实现\"></a>application的实现</h5><blockquote>\n<p>application作用域上的信息传递就是通过ServetContext实现的</p>\n<ul>\n<li>变量存放<ul>\n<li>Object getAttribute(String name) 从application中获取信息</li>\n<li>void setAttribute(String name, Object value) 向application作用域中设置信息</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"page\"><a href=\"#page\" class=\"headerlink\" title=\"page\"></a>page</h4><blockquote>\n<p>page指当前页面。在一个jsp页面里有效</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Web开发过程中经常需要通过Http请求进行服务器和客户端的交互<br>不可避免得回使用到request、session、application、page等。<br>","more":"</p>\n</blockquote>\n<h2 id=\"了解几者的生命周期\"><a href=\"#了解几者的生命周期\" class=\"headerlink\" title=\"了解几者的生命周期\"></a>了解几者的生命周期</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><table>\n<thead>\n<tr>\n<th>对象</th>\n<th>生效时间</th>\n<th>作用域</th>\n<th>实现接口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td>HTTP请求开始到结束这段时间</td>\n<td>在当前请求中有效</td>\n<td>HttpServletRequest</td>\n</tr>\n<tr>\n<td>session</td>\n<td>HTTP会话开始到结束这段时间</td>\n<td>在当前会话中有效</td>\n<td>HttpSession</td>\n</tr>\n<tr>\n<td>application</td>\n<td>服务器启动到停止这段时间</td>\n<td>在所有应用程序中有效</td>\n<td>ServletContext</td>\n</tr>\n<tr>\n<td>page</td>\n<td>当前页面,在一个jsp页面里有效当前页面</td>\n<td>Jsp页面中有效</td>\n<td>java.lang.Object</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h4><blockquote>\n<p>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在一个http的请求周期(见附录1)中都是有效的</div><div class=\"line\">可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转</div></pre></td></tr></table></figure>\n<h5 id=\"request的实现\"><a href=\"#request的实现\" class=\"headerlink\" title=\"request的实现\"></a>request的实现</h5><blockquote>\n<p>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的</p>\n<ul>\n<li>变量的存放<ul>\n<li>void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中</li>\n<li>Object getAttribute(String name) ：从request作用域中取得指定名字的信息</li>\n</ul>\n</li>\n<li>数据之间的传递<ul>\n<li>doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。</li>\n<li>设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h5 id=\"附录1-http请求\"><a href=\"#附录1-http请求\" class=\"headerlink\" title=\"附录1:http请求\"></a>附录1:http请求</h5><blockquote>\n<p>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.</p>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h4><blockquote>\n<p>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">从用户打开浏览器开始，到用户关闭浏览器这中间的过程。</div><div class=\"line\">这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）</div><div class=\"line\">放到会话中的变量，就可以在当前会话的所有请求里使用</div><div class=\"line\">session和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.</div></pre></td></tr></table></figure>\n<h5 id=\"session的实现\"><a href=\"#session的实现\" class=\"headerlink\" title=\"session的实现\"></a>session的实现</h5><blockquote>\n<p>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域</p>\n<ul>\n<li>变量的存放<ul>\n<li>Object HttpSession.getAttribute(String name) ：从session中获取信息</li>\n<li>void HttpSession.setAttribute(String name, Object value)： 向session中保存信息</li>\n</ul>\n</li>\n<li>获取session对象<ul>\n<li>HttpServletRequest.getSession()方法可以获得HttpSession对象</li>\n<li>浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.</li>\n<li>session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟</li>\n<li>vooid invalidate() 强制结束当前session</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"application\"><a href=\"#application\" class=\"headerlink\" title=\"application\"></a>application</h4><blockquote>\n<p>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)</div><div class=\"line\">此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效</div><div class=\"line\">application作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值</div><div class=\"line\">在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据</div></pre></td></tr></table></figure>\n<h5 id=\"application的实现\"><a href=\"#application的实现\" class=\"headerlink\" title=\"application的实现\"></a>application的实现</h5><blockquote>\n<p>application作用域上的信息传递就是通过ServetContext实现的</p>\n<ul>\n<li>变量存放<ul>\n<li>Object getAttribute(String name) 从application中获取信息</li>\n<li>void setAttribute(String name, Object value) 向application作用域中设置信息</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"page\"><a href=\"#page\" class=\"headerlink\" title=\"page\"></a>page</h4><blockquote>\n<p>page指当前页面。在一个jsp页面里有效</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了</div></pre></td></tr></table></figure>"},{"title":"Struts开发实践_配置详解","date":"2017-06-20T08:27:31.466Z","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","description":null,"_content":">详细分析Struts2的内部工作原理\n<!-- more -->\n\n## Struts2工作原理\n>Struts2很好地实现了MVC(模型、视图和控制器)设计模式。通过一个配置文件，把各个层面的应用组件联系起来，使组件在程序层面上联系较少，耦合度较低，大大提高了应用程序的可维护性和可扩展性\n![](index_files/ada7fed1-8b45-4c5b-918e-9b590c2d79f2.png)\n\n## struts2.xml配置文件\n### struts2中一些常量属性的配置\n```\n<struts>\n<!-- struts.devMode :设置为true开发者模式,修改struts.xml配置文件不需要重启tomcat即可加载新的[配置文件] -->\n    <constant name=\"struts.devMode\" value=\"false\" />\n<!-- 指定默认编码集,作用于HttpServletRequest的setCharacterEncoding方法和freemarker、velocity 的输出 -->\n    <constant name=\"struts.i18n.encoding\" value=\"UTF-8\" />\n<!-- 该属性指定需要 Struts 2 处理的请求后缀，该属性的默认值是 action，即所有匹配*.action 的请求都由 Struts2处理。如果用户需要指定多个 请求后缀，则多个后缀之间以英文逗号（,）隔开。 -->\n    <constant name=\"struts.action.extension\" value=\"msp,j2me,ophone\" />\n<!– 与spring集成时，指定由spring负责action对象的创建 -->\n    <constant name=\"struts.objectFactory\" value=\"spring\" />\n    <constant name=\"struts.custom.i18n.resources\" value=\"ApplicationResources,errors\" />\n    <constant name=\"struts.multipart.maxSize\" value=\"2097152\" />\n    <constant name=\"struts.enable.SlashesInActionNames\" value=\"true\" />\n    <constant name=\"struts.custom.i18n.resources\" value=\"global\" />\n\n<!-- 设置浏览器是否 缓存静态内容,默认值为 true(生产环境下使用),开发阶段最好关闭 -->\n    <constant name=\"struts.serve.static.browserCache\" value=\"false\"/>\n<!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开-->\n    <constant name=\"struts.configuration.xml.reload\" value=\"true\"/>\n<!-- 默认的视图主题 -->\n    <constant name=\"struts.ui.theme\" value=\"simple\" />\n<!–该属性设置Struts2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false -->\n    <constant name=\"struts.enable.DynamicMethodInvocation\" value=\"false\"/>\n<!-- 上传文件的大小限制-->\n    <constant name=“struts.multipart.maxSize” value=“10701096”/>\n<!-- 将其他的struts。xml配置文件包含进来，适合模块化分类 -->\n    <include file=\"struts-iportal-migu.xml\" />\n    <include file=\"struts-iportal.xml\" />\n<!--  客户端访问不存在的action时自动使用默认指定的action进行访问,一般设置为跳转首页 -->\n    <default-action-ref name= \"index\" ></default-action-ref>\n</struts>\n```\n\n### Struts2中action的相关配置\n\n#### struts-package\n```\n    <!-- package :包,用于对Action进行封装.\n        1. name :包名,根元素下可以有多个包,彼此之间不能重名\n        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下\n        3. namespace :命名空间,用于规定Action的访问路径,必须以\"/\"开头,可以限定接收action的请求地址\n    -->\n    <package name=\"struts2Demo\" namespace=\"/struts2Demo\" extends=\"struts-default\">\n        <!-- action :业务控制器.用于注册业务控制器组件(类)\n            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名\n            2. class :业务控制器组件,指定业务控制器对应的类\n            3. method :方法,用于指定访问当前action时要调用的方法\n            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action\n        -->\n        <action name=\"hello\" class=\"com.study.struts2.action.HelloAction\" method=\"hello\">\n            <!-- result :输出组件,用于转发重定向,直接输出\n                1. name :名臣一个action下可以有多个result,彼此之间不能重名\n                2. 默认做转发,元素内设置转发的页面\n            -->\n            <result name=\"success\">\n                hello.jsp\n            </result>\n        </action>\n    </package>\n```\n\n#### Struts2-Result\n```\n<!-- 定义Action链Result类型 -->\n<result-types>\n\n<!-- 客户端请求转发Action -->\n<result-type name=\"chain\" class=\"com.opensymphony.xwork2.ActionChainResult\"/>\n\n<!-- dispatcher\n    1. Struts2默认的Result类型,是通过default=\"true\"指定的\n    2. 用于转发Result，可以将请求转发给JSP,不能是Action\n    3. 对应的类 ：ServletDispatcherResult\n -->\n<result-type name=\"dispatcher\" class=\"org.apache.struts2.dispatcher.ServletDispatcherResult\" default=\"true\"/>\n\n<!-- 定义Freemarker的Result类型 -->\n<result-type name=\"freemarker\" class=\"org.apache.struts2.views.freemarker.FreemarkerResult\"/>\n\n<!-- 发送一个http头 -->\n<result-type name=\"httpheader\" class=\"org.apache.struts2.dispatcher.HttpHeaderResult\"/>\n\n<!-- redirect\n    1. 用于客户端将请求重定向-url发生变化,只能是jsp页面\n    2. 对应的类 ：ServletRedirectResult\n -->\n<result-type name=\"redirect\" class=\"org.apache.struts2.dispatcher.ServletRedirectResult\"/>\n\n<!-- redirectAction :重定向另一个Action 同一个包下的Action直接使用ActionName即可\n  不在同一个包下\n  <param name=\"actionName\">helloworld</param>\n  <param name=\"namespace\">/test</param>\n-->\n<result-type name=\"redirectAction\" class=\"org.apache.struts2.dispatcher.ServletActionRedirectResult\"/>\n<!-- stream\n    1. 用于向页面输出二进制数据，可以将二进制数据输出到请求发起端(客户端下载数据)\n    2. 对应的类 ：StreamResult\n -->\n<result-type name=\"stream\" class=\"org.apache.struts2.dispatcher.StreamResult\"/>\n\n<result-type name=\"velocity\" class=\"org.apache.struts2.dispatcher.VelocityResult\"/>\n<result-type name=\"xslt\" class=\"org.apache.struts2.views.xslt.XSLTResult\"/>\n\n<!--  显示原始文件内容，例如：当我们需要原样显示 jsp 文件源代码 的时候，我们可以使用此类型\n    <param name=\"location\">/xxx.jsp</param>\n    <param name=\"charSet\">UTF-8</param>\n-->\n<result-type name=\"plainText\" class=\"org.apache.struts2.dispatcher.PlainTextResult\" />\n\n<result-type name=\"postback\" class=\"org.apache.struts2.dispatcher.PostbackResult\" />\n\n<!-- 返回json类型的对象 -->\n<result-type name=\"json\" class=\"org.apache.struts2.json.JSONResult\" default=\"false\" />\n</result-types>\n\n<!-- 全局结果集,在同一个package中的action都可以使用这个result -->\n<global-results>\n    <result name=\"mainpage\">/main.jsp</result>\n</global-results>\n```\n>总结\n\n- 常用的四种类型\n - dispatcher(默认) :服务端转发jsp\n - redirect :客户端重定向jsp\n - chain :服务端转发Action\n - redirectAction :客户端重定向Action\n- 全局结果集\n - Global-result | extends\n- 动态结果集(了解)\n - 在Action中保存一个属性，存储具体的结果location\n- 传递参数\n - 客户端跳才需要传递参数\n- ${}表达式（不是el表达式\n - 获取值栈中的变量参数\n\n## Struts2的参数传递\n\n### VakueStack值栈\n![](http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg)\n>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问\n\n#### 访问valueStack\n>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试\n\n-  输出栈顶 &lt;s:property/&gt;\n```\nValueStack栈顶的变化\n      默认情况下栈顶为Action\n      循环过程中栈顶为循环变量\n          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象\n          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值\n```\n- 访问Context对象 :输出context对象数据\n```\nOGNL表达式以\"#\"开头\n以key来访问context对象的值,通过\"#key\"获取context中某属性的值\n```\n- JSTL访问访问ValueStack\n```\n<%\n//获取封装输出信息ValueStack对象\nValueStack vs = (ValueStack)request.getAttribute(\"struts.valueStack\");\n//调用ValueStack中findValue()方法\nString[] books = (String[])vs.findValue(\"books\");\n//迭代输出\nfor (String book : books)\n{\n%>\n```\n\n#### EL表达式显示Action传递的值\n>使用EL表达式显示Action传递的值${属性名}/${对象名.属性名}\n```\n    <%-- 1.使用EL表达式显示Action的值\n            ① 取基本属性值 :${属性名}\n            ② 取域模型对象值 :${对象名.属性名}\n            注 :取值时表达式的写法与注入时表达式的写法一致\n    --%>\n    <%-- 显示基本属性值 --%>\n    <p><label>EL:显示基本属性值:</label></p>\n    <h4><label>用户名 :</label>${userName}</h4>\n    <%-- 显示域模型对象值 --%>\n    <p><label>EL:显示域模型对象值:</label></p>\n    <h4><label>用户名:</label>${user.userName}</h4>\n    <h4><label>密码 :</label>${user.userPassword}</h4>\n    <h4><label>性别 :</label>${user.sex}</h4>\n```\n\n#### OGNL表达式显示Action传递的值\n>使用OGNL表达式显示Action传递的值\n```\n<%-- 1.使用OGNL表达式显示Action的值,Struts2默认使用的表达式\n        ① 取基本属性值 :<s:property value=\"属性名\"/>\n        ② 取域模型对象值 :<s:property value=\"对象名.属性名\"/>\n--%>\n<%-- 显示基本属性值 --%>\n<p><label>OGNL:显示基本属性值:</label></p>\n<h4><label>用户名 :</label><s:property value=\"userName\"/></h4>\n<%-- 显示域模型对象值 --%>\n<p><label>OGNL:显示域模型对象值:</label></p>\n<h4><label>用户名:</label><s:property value=\"user.userName\"/></h4>\n<h4><label>密码 :</label><s:property value=\"user.userPassword\"/></h4>\n<h4><label>性别 :</label><s:property value=\"user.sex\"/></h4>\n```\n\n### OGNL表达式\n>对象图导航语言\n&lt;s:property value=\"\"/&gt; :value中的内容叫做ognl表达式\n在Struts2.xml的配置文件中开启ognl访问静态方法\n&lt;constant name= \"struts.ognl.allowStaticMethodAccess\" value= \"true\" /&gt;</constant>\n\n#### OGNL用法\n>Struts2显示标签(在页面获取属性对象需要有get方法)\n\n>- Struts2中表达式要结合Struts2标签来访问数据\n - <%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>\n- 常用的OGNL表达式\n -  访问基本属性  :&lt;s:property value = \"基本属性名\"/&gt;\n   - &lt;s:property value=\"userName\"/&gt;\n - 访问实体对象 :&lt;s:property value = \"对象名.属性名\"/&gt;\n   - &lt;s:property value=\"user.userName\"/&gt;\n - 访问数组/集合\n ```\n <s:property value=\"arrays[0]\"/>\n<s:property value=\"userList[0]\"/>\n<s:property value=\"userList.get(0)\"/>\n ```\n - 访问Map\n ```\n<s:property value=\"map.wang\"/>\n<s:property value=\"map.get('your')\"/>\n ```\n - 运算\n ```\n<s:property value=\"'nihaoya' + userName\"/>\n ```\n - 调用方法\n ```\n <s:property value=\"'nihaoya' + userName.toUpperCase()\"/>\n ```\n - 创建集合\n ```\n<s:set var=\"list\" value=\"#{'zhangming','xiaoi','liming'}\" />\n<s:iterator value=\"list\" var=\"n\">\n    <s:property value=\"n\"/><br>\n</s:iterator>\n ```\n - 创建Map\n ```\n<s:set var=\"foobar\" value=\"#{'foo1':'bar1', 'foo2':'bar2'}\" />\n<s:iterator value=\"foobar\" >\n    <s:property value=\"key\"/>=<s:property value=\"value\"/><br>\n</s:iterator>\n ```\n\n[========]\n\n## struts-tags\n>struts2中有各种形式的标签可供选择使用,可以完全取代JSTL的标签库,支持表达是语言(OGNL)\n\n### 通用标签\n#### Property\n>&lt;s:property value=\"\" default=\"\" escape=”true|false”/&gt;\n```\nescape：可选属性，指定是否格式化HTML代码,true则进行HTML格式化,false则进行原样输出\nvalue :可选属性，指定需要输出的属性值，如果没有指定该属性，则默认输出 ValueStack 栈顶的值。如果value中的内容为object，则Struts2都会把它解析成ognl表达式,如果里面需要表示为字符串，则需要将内容用单引号括起来\ndefault :可选属性，如果需要输出的属性值为 null，则显示该属性指定的值\nid :可选属性，指定该元素的标识\n```\n\n#### set\n#### bean\n#### include\n#### param\n#### debug\n\n### 控制标签\n#### If else\n#### Iterator\n#### subset\n\n### UI标签\n#### Theme\n\n### AJAX 标签\n#### 补充\n\n###  $ # % 的区别\n#### $用于i18n和Struts配置文件\n#### #取得ActionContext的值\n\n## 声明式异常处理\n>Struts2中通过拦截器 (interceptor) 来处理声明式异常处理\n>在代码中直接将异常抛出,在 Struts.xml 配置文件中配置需要处理的异常就可以了\n\n### 异常映射exception-mapping\n```\n<action name= \"*-*\" class= \"com.wjt276.bbs2009.action.{1}Action\" method= \"{2}\" >\n    <result>/admin/{1}-{2}.jsp</result>\n    <result name= \"input\" >/admin/{1}-{2}.jsp</result>\n<!-- <exception-mapping>标签是映射异常处理。表示映射哪种异常，此处是java.lang.Exception，\n如果出现异常，那么它会跳转到reslut=\"error\"的结果集，也就是/error.jsp -->\n    <exception-mapping result= \"error\" exception= \"java.lang.Exception\" />\n    <result name= \"error\" >/error.jsp</result>\n</action>\n```\n### 设置全局异常\n>可以通过设置全局异常处理\n```\n<global-exception-mappings>\n    <exception-mapping result= \"error\" exception= \"java.lang.Exception\" />\n</global-exception-mappings>\n```\n\n### 附录1:全局异常和全局结果集\n>如果使用全局异常映射( <global-exception-mappings>)和全局结果集（<global-results>）则需要全局结果集(<global-results>)在前\n>如果局部(当前)Action、和全局结果集存在相同的<result>，则使用最近的那个结果\n\n## Struts2中的拦截器\n```\n<!-- Struts2中内建的拦截器 -->\n<interceptors>\n    <interceptor name=\"alias\" class=\"com.opensymphony.xwork2.interceptor.AliasInterceptor\"/>\n    <interceptor name=\"autowiring\" class=\"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor\"/>\n</interceptors>\n```\n\n## Struts2中的控制器\n### 核心控制器-FilterDispatcher\n>根据请求来调用合适的Action\n\n### 业务逻辑控制器-Action\n>实现一个Action最常用的方法 :继承ActionSupport\n```\nDMI动态方式的调用 :可以使用action名!methodName 进行动态访问action中的方法\n通配符配置：*_* {1} {2}\n接收参数的方式（一般属性或DomainModel来接收）\n```\n\n## Struts2中的程序国际化\n>Struts2的程序国际化的支持建立在Javq程序国际化的基础之上\n\n### 定义国际化资源文件\n```\n文件名 :messageResource.Properties\n文件名 :messageResource_en_US.properties\n//在定义中文资源文件中含有非西欧字符,需要使用native2sacii命令来处理一下\nnative2sacii messageResource.Properties messageResource_zh_CN.properties\n//basename_语言代码_国家代码.properties,根据请求来源的语言环境自动使用对应的资源文件\n```\n\n### 加载资源文件\n>在struts.xml中使用struts.custom.i18n.resources进行加载资源文件\n```\n//根据定义的资源文件的baseName ,messageResource来指定\nstruts.custom.i18n.resources = messageResource\n```\n\n### 输出国际化信息\n>在jsp页面中使用s:text来输出国际化信息\n>在jsp页面使用s:property来输出国际化信息\n```\n <s:text name=\"messageKey\"/> :使用s:text来输出国际化信息\n <s:property value=\"%{getText(\"messageKey\")}\"/> :使用s:property来输出国际化信息\n```\n\n## 增加数据校验\n>校验时期 :在业务逻辑之前先进行数据的简单校验\n\n### 继承ActionSupport\n>ActionSupport是一个工具类,实现了 Action, Validateable, ValidationAware, TextProvider, LocaleProvider, Serializable 接口,通过继承ActionSupport接口简化了Struts2的开发过程\n>s:form标签已经提供了输出校验错误的能力\n```\n继承ActionSupport后可以重写validate()方法即可,在执行业务逻辑方法之前会先执行validate()方法进行校验判定,将错误添加到ActionSupport类的fieldErrors中,然后通过OGNL表达式负责输出\n//示例\npublic void validate()\n    {\n    if (getUsername() == null || getUsername().trim().equals(\"\")){\n        addFieldError(\"username\", \"user.required\");\n    }\n    if (getPassword() == null || getPassword().trim().equals(\"\")){\n        addFieldError(\"password\", \"pass.required\");\n    }\n}\n在进行validate()方法校验后,若addFieldError中不为空,则返回input转发到result中input对应的视图\n```\n#### 错误提示信息的输出\n>validate()方法错误信息的添加是调用了getText方法接口in性获取错误提示的\n>Action中,使用getText()方法来获取了两个国际化提示 :user.required和pass.required,因此在国际化资源文件中添加这两条提示信息\n```\nActionSupport增加了让提示信息国际化的能力,ActionSupport提供的getText方法可以根据资源文件加载获得国际化提示信息\n```\n\n### 使用Struts2的校验框架\n>通过struts的配置文件来完成数据校验(原理是Xwork的validate框架)\n>Struts2提供了大量的数据校验器 :表单域校验器和非表单域校验器\n```\n//在配置中添加校验器ActionName-validation.xml,文件应该与需要校验的Action在一个文件夹中\n<?xml version=\"1.0\" encoding=\"GBK\"?>\n<!DOCTYPE validators PUBLIC \"-//OpenSymphony Group//XWork Validator 1.0.2//EN\"\n    \"http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd\">\n<!-- 校验规则定义文件的根元素 -->\n<validators>\n    <field name=\"username\">\n        <field-validator type=\"requiredstring\">\n            <message key=\"user.required\"/>\n        </field-validator>\n    </field>\n    <field name=\"password\">\n        <field-validator type=\"requiredstring\">\n            <message key=\"pass.required\"/>\n        </field-validator>\n    </field>\n</validators>\n```\n","source":"_posts/201706121037.md","raw":"---\ntitle: Struts开发实践_配置详解\ndate: 2017-06-12 10:37:28 星期一\ntags:\n- Java开发框架\n- Struts2\ncategories:\n- Java\n- Strtus2\nkeywords: Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程\ndescription:\n---\n>详细分析Struts2的内部工作原理\n<!-- more -->\n\n## Struts2工作原理\n>Struts2很好地实现了MVC(模型、视图和控制器)设计模式。通过一个配置文件，把各个层面的应用组件联系起来，使组件在程序层面上联系较少，耦合度较低，大大提高了应用程序的可维护性和可扩展性\n![](index_files/ada7fed1-8b45-4c5b-918e-9b590c2d79f2.png)\n\n## struts2.xml配置文件\n### struts2中一些常量属性的配置\n```\n<struts>\n<!-- struts.devMode :设置为true开发者模式,修改struts.xml配置文件不需要重启tomcat即可加载新的[配置文件] -->\n    <constant name=\"struts.devMode\" value=\"false\" />\n<!-- 指定默认编码集,作用于HttpServletRequest的setCharacterEncoding方法和freemarker、velocity 的输出 -->\n    <constant name=\"struts.i18n.encoding\" value=\"UTF-8\" />\n<!-- 该属性指定需要 Struts 2 处理的请求后缀，该属性的默认值是 action，即所有匹配*.action 的请求都由 Struts2处理。如果用户需要指定多个 请求后缀，则多个后缀之间以英文逗号（,）隔开。 -->\n    <constant name=\"struts.action.extension\" value=\"msp,j2me,ophone\" />\n<!– 与spring集成时，指定由spring负责action对象的创建 -->\n    <constant name=\"struts.objectFactory\" value=\"spring\" />\n    <constant name=\"struts.custom.i18n.resources\" value=\"ApplicationResources,errors\" />\n    <constant name=\"struts.multipart.maxSize\" value=\"2097152\" />\n    <constant name=\"struts.enable.SlashesInActionNames\" value=\"true\" />\n    <constant name=\"struts.custom.i18n.resources\" value=\"global\" />\n\n<!-- 设置浏览器是否 缓存静态内容,默认值为 true(生产环境下使用),开发阶段最好关闭 -->\n    <constant name=\"struts.serve.static.browserCache\" value=\"false\"/>\n<!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开-->\n    <constant name=\"struts.configuration.xml.reload\" value=\"true\"/>\n<!-- 默认的视图主题 -->\n    <constant name=\"struts.ui.theme\" value=\"simple\" />\n<!–该属性设置Struts2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false -->\n    <constant name=\"struts.enable.DynamicMethodInvocation\" value=\"false\"/>\n<!-- 上传文件的大小限制-->\n    <constant name=“struts.multipart.maxSize” value=“10701096”/>\n<!-- 将其他的struts。xml配置文件包含进来，适合模块化分类 -->\n    <include file=\"struts-iportal-migu.xml\" />\n    <include file=\"struts-iportal.xml\" />\n<!--  客户端访问不存在的action时自动使用默认指定的action进行访问,一般设置为跳转首页 -->\n    <default-action-ref name= \"index\" ></default-action-ref>\n</struts>\n```\n\n### Struts2中action的相关配置\n\n#### struts-package\n```\n    <!-- package :包,用于对Action进行封装.\n        1. name :包名,根元素下可以有多个包,彼此之间不能重名\n        2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下\n        3. namespace :命名空间,用于规定Action的访问路径,必须以\"/\"开头,可以限定接收action的请求地址\n    -->\n    <package name=\"struts2Demo\" namespace=\"/struts2Demo\" extends=\"struts-default\">\n        <!-- action :业务控制器.用于注册业务控制器组件(类)\n            1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名\n            2. class :业务控制器组件,指定业务控制器对应的类\n            3. method :方法,用于指定访问当前action时要调用的方法\n            4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action\n        -->\n        <action name=\"hello\" class=\"com.study.struts2.action.HelloAction\" method=\"hello\">\n            <!-- result :输出组件,用于转发重定向,直接输出\n                1. name :名臣一个action下可以有多个result,彼此之间不能重名\n                2. 默认做转发,元素内设置转发的页面\n            -->\n            <result name=\"success\">\n                hello.jsp\n            </result>\n        </action>\n    </package>\n```\n\n#### Struts2-Result\n```\n<!-- 定义Action链Result类型 -->\n<result-types>\n\n<!-- 客户端请求转发Action -->\n<result-type name=\"chain\" class=\"com.opensymphony.xwork2.ActionChainResult\"/>\n\n<!-- dispatcher\n    1. Struts2默认的Result类型,是通过default=\"true\"指定的\n    2. 用于转发Result，可以将请求转发给JSP,不能是Action\n    3. 对应的类 ：ServletDispatcherResult\n -->\n<result-type name=\"dispatcher\" class=\"org.apache.struts2.dispatcher.ServletDispatcherResult\" default=\"true\"/>\n\n<!-- 定义Freemarker的Result类型 -->\n<result-type name=\"freemarker\" class=\"org.apache.struts2.views.freemarker.FreemarkerResult\"/>\n\n<!-- 发送一个http头 -->\n<result-type name=\"httpheader\" class=\"org.apache.struts2.dispatcher.HttpHeaderResult\"/>\n\n<!-- redirect\n    1. 用于客户端将请求重定向-url发生变化,只能是jsp页面\n    2. 对应的类 ：ServletRedirectResult\n -->\n<result-type name=\"redirect\" class=\"org.apache.struts2.dispatcher.ServletRedirectResult\"/>\n\n<!-- redirectAction :重定向另一个Action 同一个包下的Action直接使用ActionName即可\n  不在同一个包下\n  <param name=\"actionName\">helloworld</param>\n  <param name=\"namespace\">/test</param>\n-->\n<result-type name=\"redirectAction\" class=\"org.apache.struts2.dispatcher.ServletActionRedirectResult\"/>\n<!-- stream\n    1. 用于向页面输出二进制数据，可以将二进制数据输出到请求发起端(客户端下载数据)\n    2. 对应的类 ：StreamResult\n -->\n<result-type name=\"stream\" class=\"org.apache.struts2.dispatcher.StreamResult\"/>\n\n<result-type name=\"velocity\" class=\"org.apache.struts2.dispatcher.VelocityResult\"/>\n<result-type name=\"xslt\" class=\"org.apache.struts2.views.xslt.XSLTResult\"/>\n\n<!--  显示原始文件内容，例如：当我们需要原样显示 jsp 文件源代码 的时候，我们可以使用此类型\n    <param name=\"location\">/xxx.jsp</param>\n    <param name=\"charSet\">UTF-8</param>\n-->\n<result-type name=\"plainText\" class=\"org.apache.struts2.dispatcher.PlainTextResult\" />\n\n<result-type name=\"postback\" class=\"org.apache.struts2.dispatcher.PostbackResult\" />\n\n<!-- 返回json类型的对象 -->\n<result-type name=\"json\" class=\"org.apache.struts2.json.JSONResult\" default=\"false\" />\n</result-types>\n\n<!-- 全局结果集,在同一个package中的action都可以使用这个result -->\n<global-results>\n    <result name=\"mainpage\">/main.jsp</result>\n</global-results>\n```\n>总结\n\n- 常用的四种类型\n - dispatcher(默认) :服务端转发jsp\n - redirect :客户端重定向jsp\n - chain :服务端转发Action\n - redirectAction :客户端重定向Action\n- 全局结果集\n - Global-result | extends\n- 动态结果集(了解)\n - 在Action中保存一个属性，存储具体的结果location\n- 传递参数\n - 客户端跳才需要传递参数\n- ${}表达式（不是el表达式\n - 获取值栈中的变量参数\n\n## Struts2的参数传递\n\n### VakueStack值栈\n![](http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg)\n>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问\n\n#### 访问valueStack\n>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试\n\n-  输出栈顶 &lt;s:property/&gt;\n```\nValueStack栈顶的变化\n      默认情况下栈顶为Action\n      循环过程中栈顶为循环变量\n          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象\n          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值\n```\n- 访问Context对象 :输出context对象数据\n```\nOGNL表达式以\"#\"开头\n以key来访问context对象的值,通过\"#key\"获取context中某属性的值\n```\n- JSTL访问访问ValueStack\n```\n<%\n//获取封装输出信息ValueStack对象\nValueStack vs = (ValueStack)request.getAttribute(\"struts.valueStack\");\n//调用ValueStack中findValue()方法\nString[] books = (String[])vs.findValue(\"books\");\n//迭代输出\nfor (String book : books)\n{\n%>\n```\n\n#### EL表达式显示Action传递的值\n>使用EL表达式显示Action传递的值${属性名}/${对象名.属性名}\n```\n    <%-- 1.使用EL表达式显示Action的值\n            ① 取基本属性值 :${属性名}\n            ② 取域模型对象值 :${对象名.属性名}\n            注 :取值时表达式的写法与注入时表达式的写法一致\n    --%>\n    <%-- 显示基本属性值 --%>\n    <p><label>EL:显示基本属性值:</label></p>\n    <h4><label>用户名 :</label>${userName}</h4>\n    <%-- 显示域模型对象值 --%>\n    <p><label>EL:显示域模型对象值:</label></p>\n    <h4><label>用户名:</label>${user.userName}</h4>\n    <h4><label>密码 :</label>${user.userPassword}</h4>\n    <h4><label>性别 :</label>${user.sex}</h4>\n```\n\n#### OGNL表达式显示Action传递的值\n>使用OGNL表达式显示Action传递的值\n```\n<%-- 1.使用OGNL表达式显示Action的值,Struts2默认使用的表达式\n        ① 取基本属性值 :<s:property value=\"属性名\"/>\n        ② 取域模型对象值 :<s:property value=\"对象名.属性名\"/>\n--%>\n<%-- 显示基本属性值 --%>\n<p><label>OGNL:显示基本属性值:</label></p>\n<h4><label>用户名 :</label><s:property value=\"userName\"/></h4>\n<%-- 显示域模型对象值 --%>\n<p><label>OGNL:显示域模型对象值:</label></p>\n<h4><label>用户名:</label><s:property value=\"user.userName\"/></h4>\n<h4><label>密码 :</label><s:property value=\"user.userPassword\"/></h4>\n<h4><label>性别 :</label><s:property value=\"user.sex\"/></h4>\n```\n\n### OGNL表达式\n>对象图导航语言\n&lt;s:property value=\"\"/&gt; :value中的内容叫做ognl表达式\n在Struts2.xml的配置文件中开启ognl访问静态方法\n&lt;constant name= \"struts.ognl.allowStaticMethodAccess\" value= \"true\" /&gt;</constant>\n\n#### OGNL用法\n>Struts2显示标签(在页面获取属性对象需要有get方法)\n\n>- Struts2中表达式要结合Struts2标签来访问数据\n - <%@ taglib prefix=\"s\" uri=\"/struts-tags\" %>\n- 常用的OGNL表达式\n -  访问基本属性  :&lt;s:property value = \"基本属性名\"/&gt;\n   - &lt;s:property value=\"userName\"/&gt;\n - 访问实体对象 :&lt;s:property value = \"对象名.属性名\"/&gt;\n   - &lt;s:property value=\"user.userName\"/&gt;\n - 访问数组/集合\n ```\n <s:property value=\"arrays[0]\"/>\n<s:property value=\"userList[0]\"/>\n<s:property value=\"userList.get(0)\"/>\n ```\n - 访问Map\n ```\n<s:property value=\"map.wang\"/>\n<s:property value=\"map.get('your')\"/>\n ```\n - 运算\n ```\n<s:property value=\"'nihaoya' + userName\"/>\n ```\n - 调用方法\n ```\n <s:property value=\"'nihaoya' + userName.toUpperCase()\"/>\n ```\n - 创建集合\n ```\n<s:set var=\"list\" value=\"#{'zhangming','xiaoi','liming'}\" />\n<s:iterator value=\"list\" var=\"n\">\n    <s:property value=\"n\"/><br>\n</s:iterator>\n ```\n - 创建Map\n ```\n<s:set var=\"foobar\" value=\"#{'foo1':'bar1', 'foo2':'bar2'}\" />\n<s:iterator value=\"foobar\" >\n    <s:property value=\"key\"/>=<s:property value=\"value\"/><br>\n</s:iterator>\n ```\n\n[========]\n\n## struts-tags\n>struts2中有各种形式的标签可供选择使用,可以完全取代JSTL的标签库,支持表达是语言(OGNL)\n\n### 通用标签\n#### Property\n>&lt;s:property value=\"\" default=\"\" escape=”true|false”/&gt;\n```\nescape：可选属性，指定是否格式化HTML代码,true则进行HTML格式化,false则进行原样输出\nvalue :可选属性，指定需要输出的属性值，如果没有指定该属性，则默认输出 ValueStack 栈顶的值。如果value中的内容为object，则Struts2都会把它解析成ognl表达式,如果里面需要表示为字符串，则需要将内容用单引号括起来\ndefault :可选属性，如果需要输出的属性值为 null，则显示该属性指定的值\nid :可选属性，指定该元素的标识\n```\n\n#### set\n#### bean\n#### include\n#### param\n#### debug\n\n### 控制标签\n#### If else\n#### Iterator\n#### subset\n\n### UI标签\n#### Theme\n\n### AJAX 标签\n#### 补充\n\n###  $ # % 的区别\n#### $用于i18n和Struts配置文件\n#### #取得ActionContext的值\n\n## 声明式异常处理\n>Struts2中通过拦截器 (interceptor) 来处理声明式异常处理\n>在代码中直接将异常抛出,在 Struts.xml 配置文件中配置需要处理的异常就可以了\n\n### 异常映射exception-mapping\n```\n<action name= \"*-*\" class= \"com.wjt276.bbs2009.action.{1}Action\" method= \"{2}\" >\n    <result>/admin/{1}-{2}.jsp</result>\n    <result name= \"input\" >/admin/{1}-{2}.jsp</result>\n<!-- <exception-mapping>标签是映射异常处理。表示映射哪种异常，此处是java.lang.Exception，\n如果出现异常，那么它会跳转到reslut=\"error\"的结果集，也就是/error.jsp -->\n    <exception-mapping result= \"error\" exception= \"java.lang.Exception\" />\n    <result name= \"error\" >/error.jsp</result>\n</action>\n```\n### 设置全局异常\n>可以通过设置全局异常处理\n```\n<global-exception-mappings>\n    <exception-mapping result= \"error\" exception= \"java.lang.Exception\" />\n</global-exception-mappings>\n```\n\n### 附录1:全局异常和全局结果集\n>如果使用全局异常映射( <global-exception-mappings>)和全局结果集（<global-results>）则需要全局结果集(<global-results>)在前\n>如果局部(当前)Action、和全局结果集存在相同的<result>，则使用最近的那个结果\n\n## Struts2中的拦截器\n```\n<!-- Struts2中内建的拦截器 -->\n<interceptors>\n    <interceptor name=\"alias\" class=\"com.opensymphony.xwork2.interceptor.AliasInterceptor\"/>\n    <interceptor name=\"autowiring\" class=\"com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor\"/>\n</interceptors>\n```\n\n## Struts2中的控制器\n### 核心控制器-FilterDispatcher\n>根据请求来调用合适的Action\n\n### 业务逻辑控制器-Action\n>实现一个Action最常用的方法 :继承ActionSupport\n```\nDMI动态方式的调用 :可以使用action名!methodName 进行动态访问action中的方法\n通配符配置：*_* {1} {2}\n接收参数的方式（一般属性或DomainModel来接收）\n```\n\n## Struts2中的程序国际化\n>Struts2的程序国际化的支持建立在Javq程序国际化的基础之上\n\n### 定义国际化资源文件\n```\n文件名 :messageResource.Properties\n文件名 :messageResource_en_US.properties\n//在定义中文资源文件中含有非西欧字符,需要使用native2sacii命令来处理一下\nnative2sacii messageResource.Properties messageResource_zh_CN.properties\n//basename_语言代码_国家代码.properties,根据请求来源的语言环境自动使用对应的资源文件\n```\n\n### 加载资源文件\n>在struts.xml中使用struts.custom.i18n.resources进行加载资源文件\n```\n//根据定义的资源文件的baseName ,messageResource来指定\nstruts.custom.i18n.resources = messageResource\n```\n\n### 输出国际化信息\n>在jsp页面中使用s:text来输出国际化信息\n>在jsp页面使用s:property来输出国际化信息\n```\n <s:text name=\"messageKey\"/> :使用s:text来输出国际化信息\n <s:property value=\"%{getText(\"messageKey\")}\"/> :使用s:property来输出国际化信息\n```\n\n## 增加数据校验\n>校验时期 :在业务逻辑之前先进行数据的简单校验\n\n### 继承ActionSupport\n>ActionSupport是一个工具类,实现了 Action, Validateable, ValidationAware, TextProvider, LocaleProvider, Serializable 接口,通过继承ActionSupport接口简化了Struts2的开发过程\n>s:form标签已经提供了输出校验错误的能力\n```\n继承ActionSupport后可以重写validate()方法即可,在执行业务逻辑方法之前会先执行validate()方法进行校验判定,将错误添加到ActionSupport类的fieldErrors中,然后通过OGNL表达式负责输出\n//示例\npublic void validate()\n    {\n    if (getUsername() == null || getUsername().trim().equals(\"\")){\n        addFieldError(\"username\", \"user.required\");\n    }\n    if (getPassword() == null || getPassword().trim().equals(\"\")){\n        addFieldError(\"password\", \"pass.required\");\n    }\n}\n在进行validate()方法校验后,若addFieldError中不为空,则返回input转发到result中input对应的视图\n```\n#### 错误提示信息的输出\n>validate()方法错误信息的添加是调用了getText方法接口in性获取错误提示的\n>Action中,使用getText()方法来获取了两个国际化提示 :user.required和pass.required,因此在国际化资源文件中添加这两条提示信息\n```\nActionSupport增加了让提示信息国际化的能力,ActionSupport提供的getText方法可以根据资源文件加载获得国际化提示信息\n```\n\n### 使用Struts2的校验框架\n>通过struts的配置文件来完成数据校验(原理是Xwork的validate框架)\n>Struts2提供了大量的数据校验器 :表单域校验器和非表单域校验器\n```\n//在配置中添加校验器ActionName-validation.xml,文件应该与需要校验的Action在一个文件夹中\n<?xml version=\"1.0\" encoding=\"GBK\"?>\n<!DOCTYPE validators PUBLIC \"-//OpenSymphony Group//XWork Validator 1.0.2//EN\"\n    \"http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd\">\n<!-- 校验规则定义文件的根元素 -->\n<validators>\n    <field name=\"username\">\n        <field-validator type=\"requiredstring\">\n            <message key=\"user.required\"/>\n        </field-validator>\n    </field>\n    <field name=\"password\">\n        <field-validator type=\"requiredstring\">\n            <message key=\"pass.required\"/>\n        </field-validator>\n    </field>\n</validators>\n```\n","slug":"201706121037","published":1,"updated":"2017-06-20T08:27:38.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj45b6if50000rchq7wbpu8o3","content":"<blockquote>\n<p>详细分析Struts2的内部工作原理<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"Struts2工作原理\"><a href=\"#Struts2工作原理\" class=\"headerlink\" title=\"Struts2工作原理\"></a>Struts2工作原理</h2><blockquote>\n<p>Struts2很好地实现了MVC(模型、视图和控制器)设计模式。通过一个配置文件，把各个层面的应用组件联系起来，使组件在程序层面上联系较少，耦合度较低，大大提高了应用程序的可维护性和可扩展性<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/ada7fed1-8b45-4c5b-918e-9b590c2d79f2.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n</blockquote>\n<h2 id=\"struts2-xml配置文件\"><a href=\"#struts2-xml配置文件\" class=\"headerlink\" title=\"struts2.xml配置文件\"></a>struts2.xml配置文件</h2><h3 id=\"struts2中一些常量属性的配置\"><a href=\"#struts2中一些常量属性的配置\" class=\"headerlink\" title=\"struts2中一些常量属性的配置\"></a>struts2中一些常量属性的配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">&lt;!-- struts.devMode :设置为true开发者模式,修改struts.xml配置文件不需要重启tomcat即可加载新的[配置文件] --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.devMode&quot; value=&quot;false&quot; /&gt;</div><div class=\"line\">&lt;!-- 指定默认编码集,作用于HttpServletRequest的setCharacterEncoding方法和freemarker、velocity 的输出 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.i18n.encoding&quot; value=&quot;UTF-8&quot; /&gt;</div><div class=\"line\">&lt;!-- 该属性指定需要 Struts 2 处理的请求后缀，该属性的默认值是 action，即所有匹配*.action 的请求都由 Struts2处理。如果用户需要指定多个 请求后缀，则多个后缀之间以英文逗号（,）隔开。 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.action.extension&quot; value=&quot;msp,j2me,ophone&quot; /&gt;</div><div class=\"line\">&lt;!– 与spring集成时，指定由spring负责action对象的创建 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.objectFactory&quot; value=&quot;spring&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.custom.i18n.resources&quot; value=&quot;ApplicationResources,errors&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.multipart.maxSize&quot; value=&quot;2097152&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.enable.SlashesInActionNames&quot; value=&quot;true&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.custom.i18n.resources&quot; value=&quot;global&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 设置浏览器是否 缓存静态内容,默认值为 true(生产环境下使用),开发阶段最好关闭 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.serve.static.browserCache&quot; value=&quot;false&quot;/&gt;</div><div class=\"line\">&lt;!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开--&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.configuration.xml.reload&quot; value=&quot;true&quot;/&gt;</div><div class=\"line\">&lt;!-- 默认的视图主题 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.ui.theme&quot; value=&quot;simple&quot; /&gt;</div><div class=\"line\">&lt;!–该属性设置Struts2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.enable.DynamicMethodInvocation&quot; value=&quot;false&quot;/&gt;</div><div class=\"line\">&lt;!-- 上传文件的大小限制--&gt;</div><div class=\"line\">    &lt;constant name=“struts.multipart.maxSize” value=“10701096”/&gt;</div><div class=\"line\">&lt;!-- 将其他的struts。xml配置文件包含进来，适合模块化分类 --&gt;</div><div class=\"line\">    &lt;include file=&quot;struts-iportal-migu.xml&quot; /&gt;</div><div class=\"line\">    &lt;include file=&quot;struts-iportal.xml&quot; /&gt;</div><div class=\"line\">&lt;!--  客户端访问不存在的action时自动使用默认指定的action进行访问,一般设置为跳转首页 --&gt;</div><div class=\"line\">    &lt;default-action-ref name= &quot;index&quot; &gt;&lt;/default-action-ref&gt;</div><div class=\"line\">&lt;/struts&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"Struts2中action的相关配置\"><a href=\"#Struts2中action的相关配置\" class=\"headerlink\" title=\"Struts2中action的相关配置\"></a>Struts2中action的相关配置</h3><h4 id=\"struts-package\"><a href=\"#struts-package\" class=\"headerlink\" title=\"struts-package\"></a>struts-package</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- package :包,用于对Action进行封装.</div><div class=\"line\">    1. name :包名,根元素下可以有多个包,彼此之间不能重名</div><div class=\"line\">    2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下</div><div class=\"line\">    3. namespace :命名空间,用于规定Action的访问路径,必须以&quot;/&quot;开头,可以限定接收action的请求地址</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;package name=&quot;struts2Demo&quot; namespace=&quot;/struts2Demo&quot; extends=&quot;struts-default&quot;&gt;</div><div class=\"line\">    &lt;!-- action :业务控制器.用于注册业务控制器组件(类)</div><div class=\"line\">        1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名</div><div class=\"line\">        2. class :业务控制器组件,指定业务控制器对应的类</div><div class=\"line\">        3. method :方法,用于指定访问当前action时要调用的方法</div><div class=\"line\">        4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action</div><div class=\"line\">    --&gt;</div><div class=\"line\">    &lt;action name=&quot;hello&quot; class=&quot;com.study.struts2.action.HelloAction&quot; method=&quot;hello&quot;&gt;</div><div class=\"line\">        &lt;!-- result :输出组件,用于转发重定向,直接输出</div><div class=\"line\">            1. name :名臣一个action下可以有多个result,彼此之间不能重名</div><div class=\"line\">            2. 默认做转发,元素内设置转发的页面</div><div class=\"line\">        --&gt;</div><div class=\"line\">        &lt;result name=&quot;success&quot;&gt;</div><div class=\"line\">            hello.jsp</div><div class=\"line\">        &lt;/result&gt;</div><div class=\"line\">    &lt;/action&gt;</div><div class=\"line\">&lt;/package&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"Struts2-Result\"><a href=\"#Struts2-Result\" class=\"headerlink\" title=\"Struts2-Result\"></a>Struts2-Result</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 定义Action链Result类型 --&gt;</div><div class=\"line\">&lt;result-types&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 客户端请求转发Action --&gt;</div><div class=\"line\">&lt;result-type name=&quot;chain&quot; class=&quot;com.opensymphony.xwork2.ActionChainResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- dispatcher</div><div class=\"line\">    1. Struts2默认的Result类型,是通过default=&quot;true&quot;指定的</div><div class=\"line\">    2. 用于转发Result，可以将请求转发给JSP,不能是Action</div><div class=\"line\">    3. 对应的类 ：ServletDispatcherResult</div><div class=\"line\"> --&gt;</div><div class=\"line\">&lt;result-type name=&quot;dispatcher&quot; class=&quot;org.apache.struts2.dispatcher.ServletDispatcherResult&quot; default=&quot;true&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 定义Freemarker的Result类型 --&gt;</div><div class=\"line\">&lt;result-type name=&quot;freemarker&quot; class=&quot;org.apache.struts2.views.freemarker.FreemarkerResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 发送一个http头 --&gt;</div><div class=\"line\">&lt;result-type name=&quot;httpheader&quot; class=&quot;org.apache.struts2.dispatcher.HttpHeaderResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- redirect</div><div class=\"line\">    1. 用于客户端将请求重定向-url发生变化,只能是jsp页面</div><div class=\"line\">    2. 对应的类 ：ServletRedirectResult</div><div class=\"line\"> --&gt;</div><div class=\"line\">&lt;result-type name=&quot;redirect&quot; class=&quot;org.apache.struts2.dispatcher.ServletRedirectResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- redirectAction :重定向另一个Action 同一个包下的Action直接使用ActionName即可</div><div class=\"line\">  不在同一个包下</div><div class=\"line\">  &lt;param name=&quot;actionName&quot;&gt;helloworld&lt;/param&gt;</div><div class=\"line\">  &lt;param name=&quot;namespace&quot;&gt;/test&lt;/param&gt;</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;result-type name=&quot;redirectAction&quot; class=&quot;org.apache.struts2.dispatcher.ServletActionRedirectResult&quot;/&gt;</div><div class=\"line\">&lt;!-- stream</div><div class=\"line\">    1. 用于向页面输出二进制数据，可以将二进制数据输出到请求发起端(客户端下载数据)</div><div class=\"line\">    2. 对应的类 ：StreamResult</div><div class=\"line\"> --&gt;</div><div class=\"line\">&lt;result-type name=&quot;stream&quot; class=&quot;org.apache.struts2.dispatcher.StreamResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;result-type name=&quot;velocity&quot; class=&quot;org.apache.struts2.dispatcher.VelocityResult&quot;/&gt;</div><div class=\"line\">&lt;result-type name=&quot;xslt&quot; class=&quot;org.apache.struts2.views.xslt.XSLTResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!--  显示原始文件内容，例如：当我们需要原样显示 jsp 文件源代码 的时候，我们可以使用此类型</div><div class=\"line\">    &lt;param name=&quot;location&quot;&gt;/xxx.jsp&lt;/param&gt;</div><div class=\"line\">    &lt;param name=&quot;charSet&quot;&gt;UTF-8&lt;/param&gt;</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;result-type name=&quot;plainText&quot; class=&quot;org.apache.struts2.dispatcher.PlainTextResult&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;result-type name=&quot;postback&quot; class=&quot;org.apache.struts2.dispatcher.PostbackResult&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 返回json类型的对象 --&gt;</div><div class=\"line\">&lt;result-type name=&quot;json&quot; class=&quot;org.apache.struts2.json.JSONResult&quot; default=&quot;false&quot; /&gt;</div><div class=\"line\">&lt;/result-types&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 全局结果集,在同一个package中的action都可以使用这个result --&gt;</div><div class=\"line\">&lt;global-results&gt;</div><div class=\"line\">    &lt;result name=&quot;mainpage&quot;&gt;/main.jsp&lt;/result&gt;</div><div class=\"line\">&lt;/global-results&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<ul>\n<li>常用的四种类型<ul>\n<li>dispatcher(默认) :服务端转发jsp</li>\n<li>redirect :客户端重定向jsp</li>\n<li>chain :服务端转发Action</li>\n<li>redirectAction :客户端重定向Action</li>\n</ul>\n</li>\n<li>全局结果集<ul>\n<li>Global-result | extends</li>\n</ul>\n</li>\n<li>动态结果集(了解)<ul>\n<li>在Action中保存一个属性，存储具体的结果location</li>\n</ul>\n</li>\n<li>传递参数<ul>\n<li>客户端跳才需要传递参数</li>\n</ul>\n</li>\n<li>${}表达式（不是el表达式<ul>\n<li>获取值栈中的变量参数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Struts2的参数传递\"><a href=\"#Struts2的参数传递\" class=\"headerlink\" title=\"Struts2的参数传递\"></a>Struts2的参数传递</h2><h3 id=\"VakueStack值栈\"><a href=\"#VakueStack值栈\" class=\"headerlink\" title=\"VakueStack值栈\"></a>VakueStack值栈</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问</p>\n</blockquote>\n<h4 id=\"访问valueStack\"><a href=\"#访问valueStack\" class=\"headerlink\" title=\"访问valueStack\"></a>访问valueStack</h4><blockquote>\n<p>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试</p>\n</blockquote>\n<ul>\n<li><p>输出栈顶 &lt;s:property/&gt;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ValueStack栈顶的变化</div><div class=\"line\">      默认情况下栈顶为Action</div><div class=\"line\">      循环过程中栈顶为循环变量</div><div class=\"line\">          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象</div><div class=\"line\">          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值</div></pre></td></tr></table></figure>\n</li>\n<li><p>访问Context对象 :输出context对象数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">OGNL表达式以&quot;#&quot;开头</div><div class=\"line\">以key来访问context对象的值,通过&quot;#key&quot;获取context中某属性的值</div></pre></td></tr></table></figure>\n</li>\n<li><p>JSTL访问访问ValueStack</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%</div><div class=\"line\">//获取封装输出信息ValueStack对象</div><div class=\"line\">ValueStack vs = (ValueStack)request.getAttribute(&quot;struts.valueStack&quot;);</div><div class=\"line\">//调用ValueStack中findValue()方法</div><div class=\"line\">String[] books = (String[])vs.findValue(&quot;books&quot;);</div><div class=\"line\">//迭代输出</div><div class=\"line\">for (String book : books)</div><div class=\"line\">&#123;</div><div class=\"line\">%&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"EL表达式显示Action传递的值\"><a href=\"#EL表达式显示Action传递的值\" class=\"headerlink\" title=\"EL表达式显示Action传递的值\"></a>EL表达式显示Action传递的值</h4><blockquote>\n<p>使用EL表达式显示Action传递的值${属性名}/${对象名.属性名}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%-- 1.使用EL表达式显示Action的值</div><div class=\"line\">        ① 取基本属性值 :$&#123;属性名&#125;</div><div class=\"line\">        ② 取域模型对象值 :$&#123;对象名.属性名&#125;</div><div class=\"line\">        注 :取值时表达式的写法与注入时表达式的写法一致</div><div class=\"line\">--%&gt;</div><div class=\"line\">&lt;%-- 显示基本属性值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;EL:显示基本属性值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名 :&lt;/label&gt;$&#123;userName&#125;&lt;/h4&gt;</div><div class=\"line\">&lt;%-- 显示域模型对象值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;EL:显示域模型对象值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名:&lt;/label&gt;$&#123;user.userName&#125;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;密码 :&lt;/label&gt;$&#123;user.userPassword&#125;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;性别 :&lt;/label&gt;$&#123;user.sex&#125;&lt;/h4&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"OGNL表达式显示Action传递的值\"><a href=\"#OGNL表达式显示Action传递的值\" class=\"headerlink\" title=\"OGNL表达式显示Action传递的值\"></a>OGNL表达式显示Action传递的值</h4><blockquote>\n<p>使用OGNL表达式显示Action传递的值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%-- 1.使用OGNL表达式显示Action的值,Struts2默认使用的表达式</div><div class=\"line\">        ① 取基本属性值 :&lt;s:property value=&quot;属性名&quot;/&gt;</div><div class=\"line\">        ② 取域模型对象值 :&lt;s:property value=&quot;对象名.属性名&quot;/&gt;</div><div class=\"line\">--%&gt;</div><div class=\"line\">&lt;%-- 显示基本属性值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;OGNL:显示基本属性值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名 :&lt;/label&gt;&lt;s:property value=&quot;userName&quot;/&gt;&lt;/h4&gt;</div><div class=\"line\">&lt;%-- 显示域模型对象值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;OGNL:显示域模型对象值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名:&lt;/label&gt;&lt;s:property value=&quot;user.userName&quot;/&gt;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;密码 :&lt;/label&gt;&lt;s:property value=&quot;user.userPassword&quot;/&gt;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;性别 :&lt;/label&gt;&lt;s:property value=&quot;user.sex&quot;/&gt;&lt;/h4&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"OGNL表达式\"><a href=\"#OGNL表达式\" class=\"headerlink\" title=\"OGNL表达式\"></a>OGNL表达式</h3><blockquote>\n<p>对象图导航语言<br>&lt;s:property value=””/&gt; :value中的内容叫做ognl表达式<br>在Struts2.xml的配置文件中开启ognl访问静态方法<br>&lt;constant name= “struts.ognl.allowStaticMethodAccess” value= “true” /&gt;</p>\n</blockquote>\n<h4 id=\"OGNL用法\"><a href=\"#OGNL用法\" class=\"headerlink\" title=\"OGNL用法\"></a>OGNL用法</h4><blockquote>\n<p>Struts2显示标签(在页面获取属性对象需要有get方法)</p>\n<ul>\n<li>Struts2中表达式要结合Struts2标签来访问数据<ul>\n<li>&lt;%@ taglib prefix=”s” uri=”/struts-tags” %&gt;</li>\n</ul>\n</li>\n<li>常用的OGNL表达式<ul>\n<li>访问基本属性  :&lt;s:property value = “基本属性名”/&gt;<ul>\n<li>&lt;s:property value=”userName”/&gt;</li>\n</ul>\n</li>\n<li>访问实体对象 :&lt;s:property value = “对象名.属性名”/&gt;<ul>\n<li>&lt;s:property value=”user.userName”/&gt;</li>\n</ul>\n</li>\n<li>访问数组/集合<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;s:property value=&quot;arrays[0]&quot;/&gt;</div><div class=\"line\">&lt;s:property value=&quot;userList[0]&quot;/&gt;</div><div class=\"line\">&lt;s:property value=&quot;userList.get(0)&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li><p>访问Map</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:property value=&quot;map.wang&quot;/&gt;</div><div class=\"line\">&lt;s:property value=&quot;map.get(&apos;your&apos;)&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>运算</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:property value=&quot;&apos;nihaoya&apos; + userName&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>调用方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:property value=&quot;&apos;nihaoya&apos; + userName.toUpperCase()&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建集合</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:set var=&quot;list&quot; value=&quot;#&#123;&apos;zhangming&apos;,&apos;xiaoi&apos;,&apos;liming&apos;&#125;&quot; /&gt;</div><div class=\"line\">&lt;s:iterator value=&quot;list&quot; var=&quot;n&quot;&gt;</div><div class=\"line\">    &lt;s:property value=&quot;n&quot;/&gt;&lt;br&gt;</div><div class=\"line\">&lt;/s:iterator&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建Map</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:set var=&quot;foobar&quot; value=&quot;#&#123;&apos;foo1&apos;:&apos;bar1&apos;, &apos;foo2&apos;:&apos;bar2&apos;&#125;&quot; /&gt;</div><div class=\"line\">&lt;s:iterator value=&quot;foobar&quot; &gt;</div><div class=\"line\">    &lt;s:property value=&quot;key&quot;/&gt;=&lt;s:property value=&quot;value&quot;/&gt;&lt;br&gt;</div><div class=\"line\">&lt;/s:iterator&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>[========]</p>\n<h2 id=\"struts-tags\"><a href=\"#struts-tags\" class=\"headerlink\" title=\"struts-tags\"></a>struts-tags</h2><blockquote>\n<p>struts2中有各种形式的标签可供选择使用,可以完全取代JSTL的标签库,支持表达是语言(OGNL)</p>\n</blockquote>\n<h3 id=\"通用标签\"><a href=\"#通用标签\" class=\"headerlink\" title=\"通用标签\"></a>通用标签</h3><h4 id=\"Property\"><a href=\"#Property\" class=\"headerlink\" title=\"Property\"></a>Property</h4><blockquote>\n<p>&lt;s:property value=”” default=”” escape=”true|false”/&gt;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">escape：可选属性，指定是否格式化HTML代码,true则进行HTML格式化,false则进行原样输出</div><div class=\"line\">value :可选属性，指定需要输出的属性值，如果没有指定该属性，则默认输出 ValueStack 栈顶的值。如果value中的内容为object，则Struts2都会把它解析成ognl表达式,如果里面需要表示为字符串，则需要将内容用单引号括起来</div><div class=\"line\">default :可选属性，如果需要输出的属性值为 null，则显示该属性指定的值</div><div class=\"line\">id :可选属性，指定该元素的标识</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h4><h4 id=\"bean\"><a href=\"#bean\" class=\"headerlink\" title=\"bean\"></a>bean</h4><h4 id=\"include\"><a href=\"#include\" class=\"headerlink\" title=\"include\"></a>include</h4><h4 id=\"param\"><a href=\"#param\" class=\"headerlink\" title=\"param\"></a>param</h4><h4 id=\"debug\"><a href=\"#debug\" class=\"headerlink\" title=\"debug\"></a>debug</h4><h3 id=\"控制标签\"><a href=\"#控制标签\" class=\"headerlink\" title=\"控制标签\"></a>控制标签</h3><h4 id=\"If-else\"><a href=\"#If-else\" class=\"headerlink\" title=\"If else\"></a>If else</h4><h4 id=\"Iterator\"><a href=\"#Iterator\" class=\"headerlink\" title=\"Iterator\"></a>Iterator</h4><h4 id=\"subset\"><a href=\"#subset\" class=\"headerlink\" title=\"subset\"></a>subset</h4><h3 id=\"UI标签\"><a href=\"#UI标签\" class=\"headerlink\" title=\"UI标签\"></a>UI标签</h3><h4 id=\"Theme\"><a href=\"#Theme\" class=\"headerlink\" title=\"Theme\"></a>Theme</h4><h3 id=\"AJAX-标签\"><a href=\"#AJAX-标签\" class=\"headerlink\" title=\"AJAX 标签\"></a>AJAX 标签</h3><h4 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h4><h3 id=\"的区别\"><a href=\"#的区别\" class=\"headerlink\" title=\"$ # % 的区别\"></a>$ # % 的区别</h3><h4 id=\"用于i18n和Struts配置文件\"><a href=\"#用于i18n和Struts配置文件\" class=\"headerlink\" title=\"$用于i18n和Struts配置文件\"></a>$用于i18n和Struts配置文件</h4><h4 id=\"取得ActionContext的值\"><a href=\"#取得ActionContext的值\" class=\"headerlink\" title=\"#取得ActionContext的值\"></a>#取得ActionContext的值</h4><h2 id=\"声明式异常处理\"><a href=\"#声明式异常处理\" class=\"headerlink\" title=\"声明式异常处理\"></a>声明式异常处理</h2><blockquote>\n<p>Struts2中通过拦截器 (interceptor) 来处理声明式异常处理<br>在代码中直接将异常抛出,在 Struts.xml 配置文件中配置需要处理的异常就可以了</p>\n</blockquote>\n<h3 id=\"异常映射exception-mapping\"><a href=\"#异常映射exception-mapping\" class=\"headerlink\" title=\"异常映射exception-mapping\"></a>异常映射exception-mapping</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;action name= &quot;*-*&quot; class= &quot;com.wjt276.bbs2009.action.&#123;1&#125;Action&quot; method= &quot;&#123;2&#125;&quot; &gt;</div><div class=\"line\">    &lt;result&gt;/admin/&#123;1&#125;-&#123;2&#125;.jsp&lt;/result&gt;</div><div class=\"line\">    &lt;result name= &quot;input&quot; &gt;/admin/&#123;1&#125;-&#123;2&#125;.jsp&lt;/result&gt;</div><div class=\"line\">&lt;!-- &lt;exception-mapping&gt;标签是映射异常处理。表示映射哪种异常，此处是java.lang.Exception，</div><div class=\"line\">如果出现异常，那么它会跳转到reslut=&quot;error&quot;的结果集，也就是/error.jsp --&gt;</div><div class=\"line\">    &lt;exception-mapping result= &quot;error&quot; exception= &quot;java.lang.Exception&quot; /&gt;</div><div class=\"line\">    &lt;result name= &quot;error&quot; &gt;/error.jsp&lt;/result&gt;</div><div class=\"line\">&lt;/action&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"设置全局异常\"><a href=\"#设置全局异常\" class=\"headerlink\" title=\"设置全局异常\"></a>设置全局异常</h3><blockquote>\n<p>可以通过设置全局异常处理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;global-exception-mappings&gt;</div><div class=\"line\">    &lt;exception-mapping result= &quot;error&quot; exception= &quot;java.lang.Exception&quot; /&gt;</div><div class=\"line\">&lt;/global-exception-mappings&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"附录1-全局异常和全局结果集\"><a href=\"#附录1-全局异常和全局结果集\" class=\"headerlink\" title=\"附录1:全局异常和全局结果集\"></a>附录1:全局异常和全局结果集</h3><blockquote>\n<p>如果使用全局异常映射( <global-exception-mappings>)和全局结果集（<global-results>）则需要全局结果集(<global-results>)在前<br>如果局部(当前)Action、和全局结果集存在相同的<result>，则使用最近的那个结果</result></global-results></global-results></global-exception-mappings></p>\n</blockquote>\n<h2 id=\"Struts2中的拦截器\"><a href=\"#Struts2中的拦截器\" class=\"headerlink\" title=\"Struts2中的拦截器\"></a>Struts2中的拦截器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Struts2中内建的拦截器 --&gt;</div><div class=\"line\">&lt;interceptors&gt;</div><div class=\"line\">    &lt;interceptor name=&quot;alias&quot; class=&quot;com.opensymphony.xwork2.interceptor.AliasInterceptor&quot;/&gt;</div><div class=\"line\">    &lt;interceptor name=&quot;autowiring&quot; class=&quot;com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor&quot;/&gt;</div><div class=\"line\">&lt;/interceptors&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Struts2中的控制器\"><a href=\"#Struts2中的控制器\" class=\"headerlink\" title=\"Struts2中的控制器\"></a>Struts2中的控制器</h2><h3 id=\"核心控制器-FilterDispatcher\"><a href=\"#核心控制器-FilterDispatcher\" class=\"headerlink\" title=\"核心控制器-FilterDispatcher\"></a>核心控制器-FilterDispatcher</h3><blockquote>\n<p>根据请求来调用合适的Action</p>\n</blockquote>\n<h3 id=\"业务逻辑控制器-Action\"><a href=\"#业务逻辑控制器-Action\" class=\"headerlink\" title=\"业务逻辑控制器-Action\"></a>业务逻辑控制器-Action</h3><blockquote>\n<p>实现一个Action最常用的方法 :继承ActionSupport<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">DMI动态方式的调用 :可以使用action名!methodName 进行动态访问action中的方法</div><div class=\"line\">通配符配置：*_* &#123;1&#125; &#123;2&#125;</div><div class=\"line\">接收参数的方式（一般属性或DomainModel来接收）</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"Struts2中的程序国际化\"><a href=\"#Struts2中的程序国际化\" class=\"headerlink\" title=\"Struts2中的程序国际化\"></a>Struts2中的程序国际化</h2><blockquote>\n<p>Struts2的程序国际化的支持建立在Javq程序国际化的基础之上</p>\n</blockquote>\n<h3 id=\"定义国际化资源文件\"><a href=\"#定义国际化资源文件\" class=\"headerlink\" title=\"定义国际化资源文件\"></a>定义国际化资源文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">文件名 :messageResource.Properties</div><div class=\"line\">文件名 :messageResource_en_US.properties</div><div class=\"line\">//在定义中文资源文件中含有非西欧字符,需要使用native2sacii命令来处理一下</div><div class=\"line\">native2sacii messageResource.Properties messageResource_zh_CN.properties</div><div class=\"line\">//basename_语言代码_国家代码.properties,根据请求来源的语言环境自动使用对应的资源文件</div></pre></td></tr></table></figure>\n<h3 id=\"加载资源文件\"><a href=\"#加载资源文件\" class=\"headerlink\" title=\"加载资源文件\"></a>加载资源文件</h3><blockquote>\n<p>在struts.xml中使用struts.custom.i18n.resources进行加载资源文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//根据定义的资源文件的baseName ,messageResource来指定</div><div class=\"line\">struts.custom.i18n.resources = messageResource</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"输出国际化信息\"><a href=\"#输出国际化信息\" class=\"headerlink\" title=\"输出国际化信息\"></a>输出国际化信息</h3><blockquote>\n<p>在jsp页面中使用s:text来输出国际化信息<br>在jsp页面使用s:property来输出国际化信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:text name=&quot;messageKey&quot;/&gt; :使用s:text来输出国际化信息</div><div class=\"line\">&lt;s:property value=&quot;%&#123;getText(&quot;messageKey&quot;)&#125;&quot;/&gt; :使用s:property来输出国际化信息</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"增加数据校验\"><a href=\"#增加数据校验\" class=\"headerlink\" title=\"增加数据校验\"></a>增加数据校验</h2><blockquote>\n<p>校验时期 :在业务逻辑之前先进行数据的简单校验</p>\n</blockquote>\n<h3 id=\"继承ActionSupport\"><a href=\"#继承ActionSupport\" class=\"headerlink\" title=\"继承ActionSupport\"></a>继承ActionSupport</h3><blockquote>\n<p>ActionSupport是一个工具类,实现了 Action, Validateable, ValidationAware, TextProvider, LocaleProvider, Serializable 接口,通过继承ActionSupport接口简化了Struts2的开发过程<br>s:form标签已经提供了输出校验错误的能力<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">继承ActionSupport后可以重写validate()方法即可,在执行业务逻辑方法之前会先执行validate()方法进行校验判定,将错误添加到ActionSupport类的fieldErrors中,然后通过OGNL表达式负责输出</div><div class=\"line\">//示例</div><div class=\"line\">public void validate()</div><div class=\"line\">    &#123;</div><div class=\"line\">    if (getUsername() == null || getUsername().trim().equals(&quot;&quot;))&#123;</div><div class=\"line\">        addFieldError(&quot;username&quot;, &quot;user.required&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (getPassword() == null || getPassword().trim().equals(&quot;&quot;))&#123;</div><div class=\"line\">        addFieldError(&quot;password&quot;, &quot;pass.required&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">在进行validate()方法校验后,若addFieldError中不为空,则返回input转发到result中input对应的视图</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"错误提示信息的输出\"><a href=\"#错误提示信息的输出\" class=\"headerlink\" title=\"错误提示信息的输出\"></a>错误提示信息的输出</h4><blockquote>\n<p>validate()方法错误信息的添加是调用了getText方法接口in性获取错误提示的<br>Action中,使用getText()方法来获取了两个国际化提示 :user.required和pass.required,因此在国际化资源文件中添加这两条提示信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ActionSupport增加了让提示信息国际化的能力,ActionSupport提供的getText方法可以根据资源文件加载获得国际化提示信息</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"使用Struts2的校验框架\"><a href=\"#使用Struts2的校验框架\" class=\"headerlink\" title=\"使用Struts2的校验框架\"></a>使用Struts2的校验框架</h3><blockquote>\n<p>通过struts的配置文件来完成数据校验(原理是Xwork的validate框架)<br>Struts2提供了大量的数据校验器 :表单域校验器和非表单域校验器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//在配置中添加校验器ActionName-validation.xml,文件应该与需要校验的Action在一个文件夹中</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;GBK&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE validators PUBLIC &quot;-//OpenSymphony Group//XWork Validator 1.0.2//EN&quot;</div><div class=\"line\">    &quot;http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd&quot;&gt;</div><div class=\"line\">&lt;!-- 校验规则定义文件的根元素 --&gt;</div><div class=\"line\">&lt;validators&gt;</div><div class=\"line\">    &lt;field name=&quot;username&quot;&gt;</div><div class=\"line\">        &lt;field-validator type=&quot;requiredstring&quot;&gt;</div><div class=\"line\">            &lt;message key=&quot;user.required&quot;/&gt;</div><div class=\"line\">        &lt;/field-validator&gt;</div><div class=\"line\">    &lt;/field&gt;</div><div class=\"line\">    &lt;field name=&quot;password&quot;&gt;</div><div class=\"line\">        &lt;field-validator type=&quot;requiredstring&quot;&gt;</div><div class=\"line\">            &lt;message key=&quot;pass.required&quot;/&gt;</div><div class=\"line\">        &lt;/field-validator&gt;</div><div class=\"line\">    &lt;/field&gt;</div><div class=\"line\">&lt;/validators&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>详细分析Struts2的内部工作原理<br>","more":"</p>\n</blockquote>\n<h2 id=\"Struts2工作原理\"><a href=\"#Struts2工作原理\" class=\"headerlink\" title=\"Struts2工作原理\"></a>Struts2工作原理</h2><blockquote>\n<p>Struts2很好地实现了MVC(模型、视图和控制器)设计模式。通过一个配置文件，把各个层面的应用组件联系起来，使组件在程序层面上联系较少，耦合度较低，大大提高了应用程序的可维护性和可扩展性<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/ada7fed1-8b45-4c5b-918e-9b590c2d79f2.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n</blockquote>\n<h2 id=\"struts2-xml配置文件\"><a href=\"#struts2-xml配置文件\" class=\"headerlink\" title=\"struts2.xml配置文件\"></a>struts2.xml配置文件</h2><h3 id=\"struts2中一些常量属性的配置\"><a href=\"#struts2中一些常量属性的配置\" class=\"headerlink\" title=\"struts2中一些常量属性的配置\"></a>struts2中一些常量属性的配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">&lt;!-- struts.devMode :设置为true开发者模式,修改struts.xml配置文件不需要重启tomcat即可加载新的[配置文件] --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.devMode&quot; value=&quot;false&quot; /&gt;</div><div class=\"line\">&lt;!-- 指定默认编码集,作用于HttpServletRequest的setCharacterEncoding方法和freemarker、velocity 的输出 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.i18n.encoding&quot; value=&quot;UTF-8&quot; /&gt;</div><div class=\"line\">&lt;!-- 该属性指定需要 Struts 2 处理的请求后缀，该属性的默认值是 action，即所有匹配*.action 的请求都由 Struts2处理。如果用户需要指定多个 请求后缀，则多个后缀之间以英文逗号（,）隔开。 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.action.extension&quot; value=&quot;msp,j2me,ophone&quot; /&gt;</div><div class=\"line\">&lt;!– 与spring集成时，指定由spring负责action对象的创建 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.objectFactory&quot; value=&quot;spring&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.custom.i18n.resources&quot; value=&quot;ApplicationResources,errors&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.multipart.maxSize&quot; value=&quot;2097152&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.enable.SlashesInActionNames&quot; value=&quot;true&quot; /&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.custom.i18n.resources&quot; value=&quot;global&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 设置浏览器是否 缓存静态内容,默认值为 true(生产环境下使用),开发阶段最好关闭 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.serve.static.browserCache&quot; value=&quot;false&quot;/&gt;</div><div class=\"line\">&lt;!-- 当struts的配置文件修改后,系统是否自动重新加载该文件,默认值为false(生产环境下使用),开发阶段最好打开--&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.configuration.xml.reload&quot; value=&quot;true&quot;/&gt;</div><div class=\"line\">&lt;!-- 默认的视图主题 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.ui.theme&quot; value=&quot;simple&quot; /&gt;</div><div class=\"line\">&lt;!–该属性设置Struts2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false --&gt;</div><div class=\"line\">    &lt;constant name=&quot;struts.enable.DynamicMethodInvocation&quot; value=&quot;false&quot;/&gt;</div><div class=\"line\">&lt;!-- 上传文件的大小限制--&gt;</div><div class=\"line\">    &lt;constant name=“struts.multipart.maxSize” value=“10701096”/&gt;</div><div class=\"line\">&lt;!-- 将其他的struts。xml配置文件包含进来，适合模块化分类 --&gt;</div><div class=\"line\">    &lt;include file=&quot;struts-iportal-migu.xml&quot; /&gt;</div><div class=\"line\">    &lt;include file=&quot;struts-iportal.xml&quot; /&gt;</div><div class=\"line\">&lt;!--  客户端访问不存在的action时自动使用默认指定的action进行访问,一般设置为跳转首页 --&gt;</div><div class=\"line\">    &lt;default-action-ref name= &quot;index&quot; &gt;&lt;/default-action-ref&gt;</div><div class=\"line\">&lt;/struts&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"Struts2中action的相关配置\"><a href=\"#Struts2中action的相关配置\" class=\"headerlink\" title=\"Struts2中action的相关配置\"></a>Struts2中action的相关配置</h3><h4 id=\"struts-package\"><a href=\"#struts-package\" class=\"headerlink\" title=\"struts-package\"></a>struts-package</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- package :包,用于对Action进行封装.</div><div class=\"line\">    1. name :包名,根元素下可以有多个包,彼此之间不能重名</div><div class=\"line\">    2. extend :继承,用于指定继承的包,相当于将该继承包下的配置信息复制到了当前包下</div><div class=\"line\">    3. namespace :命名空间,用于规定Action的访问路径,必须以&quot;/&quot;开头,可以限定接收action的请求地址</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;package name=&quot;struts2Demo&quot; namespace=&quot;/struts2Demo&quot; extends=&quot;struts-default&quot;&gt;</div><div class=\"line\">    &lt;!-- action :业务控制器.用于注册业务控制器组件(类)</div><div class=\"line\">        1. name :action名臣,用于规定Action的访问路径,一个包下可以有多个Action,彼此之间不能重名</div><div class=\"line\">        2. class :业务控制器组件,指定业务控制器对应的类</div><div class=\"line\">        3. method :方法,用于指定访问当前action时要调用的方法</div><div class=\"line\">        4. 请求url :http://IP:PORT/ProjectName/NAMESPACE/ACTIONNAME.action</div><div class=\"line\">    --&gt;</div><div class=\"line\">    &lt;action name=&quot;hello&quot; class=&quot;com.study.struts2.action.HelloAction&quot; method=&quot;hello&quot;&gt;</div><div class=\"line\">        &lt;!-- result :输出组件,用于转发重定向,直接输出</div><div class=\"line\">            1. name :名臣一个action下可以有多个result,彼此之间不能重名</div><div class=\"line\">            2. 默认做转发,元素内设置转发的页面</div><div class=\"line\">        --&gt;</div><div class=\"line\">        &lt;result name=&quot;success&quot;&gt;</div><div class=\"line\">            hello.jsp</div><div class=\"line\">        &lt;/result&gt;</div><div class=\"line\">    &lt;/action&gt;</div><div class=\"line\">&lt;/package&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"Struts2-Result\"><a href=\"#Struts2-Result\" class=\"headerlink\" title=\"Struts2-Result\"></a>Struts2-Result</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 定义Action链Result类型 --&gt;</div><div class=\"line\">&lt;result-types&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 客户端请求转发Action --&gt;</div><div class=\"line\">&lt;result-type name=&quot;chain&quot; class=&quot;com.opensymphony.xwork2.ActionChainResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- dispatcher</div><div class=\"line\">    1. Struts2默认的Result类型,是通过default=&quot;true&quot;指定的</div><div class=\"line\">    2. 用于转发Result，可以将请求转发给JSP,不能是Action</div><div class=\"line\">    3. 对应的类 ：ServletDispatcherResult</div><div class=\"line\"> --&gt;</div><div class=\"line\">&lt;result-type name=&quot;dispatcher&quot; class=&quot;org.apache.struts2.dispatcher.ServletDispatcherResult&quot; default=&quot;true&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 定义Freemarker的Result类型 --&gt;</div><div class=\"line\">&lt;result-type name=&quot;freemarker&quot; class=&quot;org.apache.struts2.views.freemarker.FreemarkerResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 发送一个http头 --&gt;</div><div class=\"line\">&lt;result-type name=&quot;httpheader&quot; class=&quot;org.apache.struts2.dispatcher.HttpHeaderResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- redirect</div><div class=\"line\">    1. 用于客户端将请求重定向-url发生变化,只能是jsp页面</div><div class=\"line\">    2. 对应的类 ：ServletRedirectResult</div><div class=\"line\"> --&gt;</div><div class=\"line\">&lt;result-type name=&quot;redirect&quot; class=&quot;org.apache.struts2.dispatcher.ServletRedirectResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- redirectAction :重定向另一个Action 同一个包下的Action直接使用ActionName即可</div><div class=\"line\">  不在同一个包下</div><div class=\"line\">  &lt;param name=&quot;actionName&quot;&gt;helloworld&lt;/param&gt;</div><div class=\"line\">  &lt;param name=&quot;namespace&quot;&gt;/test&lt;/param&gt;</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;result-type name=&quot;redirectAction&quot; class=&quot;org.apache.struts2.dispatcher.ServletActionRedirectResult&quot;/&gt;</div><div class=\"line\">&lt;!-- stream</div><div class=\"line\">    1. 用于向页面输出二进制数据，可以将二进制数据输出到请求发起端(客户端下载数据)</div><div class=\"line\">    2. 对应的类 ：StreamResult</div><div class=\"line\"> --&gt;</div><div class=\"line\">&lt;result-type name=&quot;stream&quot; class=&quot;org.apache.struts2.dispatcher.StreamResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;result-type name=&quot;velocity&quot; class=&quot;org.apache.struts2.dispatcher.VelocityResult&quot;/&gt;</div><div class=\"line\">&lt;result-type name=&quot;xslt&quot; class=&quot;org.apache.struts2.views.xslt.XSLTResult&quot;/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!--  显示原始文件内容，例如：当我们需要原样显示 jsp 文件源代码 的时候，我们可以使用此类型</div><div class=\"line\">    &lt;param name=&quot;location&quot;&gt;/xxx.jsp&lt;/param&gt;</div><div class=\"line\">    &lt;param name=&quot;charSet&quot;&gt;UTF-8&lt;/param&gt;</div><div class=\"line\">--&gt;</div><div class=\"line\">&lt;result-type name=&quot;plainText&quot; class=&quot;org.apache.struts2.dispatcher.PlainTextResult&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;result-type name=&quot;postback&quot; class=&quot;org.apache.struts2.dispatcher.PostbackResult&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 返回json类型的对象 --&gt;</div><div class=\"line\">&lt;result-type name=&quot;json&quot; class=&quot;org.apache.struts2.json.JSONResult&quot; default=&quot;false&quot; /&gt;</div><div class=\"line\">&lt;/result-types&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 全局结果集,在同一个package中的action都可以使用这个result --&gt;</div><div class=\"line\">&lt;global-results&gt;</div><div class=\"line\">    &lt;result name=&quot;mainpage&quot;&gt;/main.jsp&lt;/result&gt;</div><div class=\"line\">&lt;/global-results&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>总结</p>\n</blockquote>\n<ul>\n<li>常用的四种类型<ul>\n<li>dispatcher(默认) :服务端转发jsp</li>\n<li>redirect :客户端重定向jsp</li>\n<li>chain :服务端转发Action</li>\n<li>redirectAction :客户端重定向Action</li>\n</ul>\n</li>\n<li>全局结果集<ul>\n<li>Global-result | extends</li>\n</ul>\n</li>\n<li>动态结果集(了解)<ul>\n<li>在Action中保存一个属性，存储具体的结果location</li>\n</ul>\n</li>\n<li>传递参数<ul>\n<li>客户端跳才需要传递参数</li>\n</ul>\n</li>\n<li>${}表达式（不是el表达式<ul>\n<li>获取值栈中的变量参数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Struts2的参数传递\"><a href=\"#Struts2的参数传递\" class=\"headerlink\" title=\"Struts2的参数传递\"></a>Struts2的参数传递</h2><h3 id=\"VakueStack值栈\"><a href=\"#VakueStack值栈\" class=\"headerlink\" title=\"VakueStack值栈\"></a>VakueStack值栈</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://or5qwkb5l.bkt.clouddn.com/valueStack.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>ValueStack是Struts2中,Action向页面传递数据的媒介,ValueStack封装了Action的数据,并允许JSP通过OGNL表达式来对其进行访问</p>\n</blockquote>\n<h4 id=\"访问valueStack\"><a href=\"#访问valueStack\" class=\"headerlink\" title=\"访问valueStack\"></a>访问valueStack</h4><blockquote>\n<p>在页面通过&lt;s:debug/&gt;标签观察其结构,仅供程序员进行代码调试</p>\n</blockquote>\n<ul>\n<li><p>输出栈顶 &lt;s:property/&gt;</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">ValueStack栈顶的变化</div><div class=\"line\">      默认情况下栈顶为Action</div><div class=\"line\">      循环过程中栈顶为循环变量</div><div class=\"line\">          迭代集合时,循环变量是集合中的对象,通常都是实体对象,即:栈顶是实体对象</div><div class=\"line\">          按数字迭代时,循环变量是数字,不能用数字为实体对象,通过var声明变量名,根据键值从context中取值</div></pre></td></tr></table></figure>\n</li>\n<li><p>访问Context对象 :输出context对象数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">OGNL表达式以&quot;#&quot;开头</div><div class=\"line\">以key来访问context对象的值,通过&quot;#key&quot;获取context中某属性的值</div></pre></td></tr></table></figure>\n</li>\n<li><p>JSTL访问访问ValueStack</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%</div><div class=\"line\">//获取封装输出信息ValueStack对象</div><div class=\"line\">ValueStack vs = (ValueStack)request.getAttribute(&quot;struts.valueStack&quot;);</div><div class=\"line\">//调用ValueStack中findValue()方法</div><div class=\"line\">String[] books = (String[])vs.findValue(&quot;books&quot;);</div><div class=\"line\">//迭代输出</div><div class=\"line\">for (String book : books)</div><div class=\"line\">&#123;</div><div class=\"line\">%&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"EL表达式显示Action传递的值\"><a href=\"#EL表达式显示Action传递的值\" class=\"headerlink\" title=\"EL表达式显示Action传递的值\"></a>EL表达式显示Action传递的值</h4><blockquote>\n<p>使用EL表达式显示Action传递的值${属性名}/${对象名.属性名}<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%-- 1.使用EL表达式显示Action的值</div><div class=\"line\">        ① 取基本属性值 :$&#123;属性名&#125;</div><div class=\"line\">        ② 取域模型对象值 :$&#123;对象名.属性名&#125;</div><div class=\"line\">        注 :取值时表达式的写法与注入时表达式的写法一致</div><div class=\"line\">--%&gt;</div><div class=\"line\">&lt;%-- 显示基本属性值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;EL:显示基本属性值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名 :&lt;/label&gt;$&#123;userName&#125;&lt;/h4&gt;</div><div class=\"line\">&lt;%-- 显示域模型对象值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;EL:显示域模型对象值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名:&lt;/label&gt;$&#123;user.userName&#125;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;密码 :&lt;/label&gt;$&#123;user.userPassword&#125;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;性别 :&lt;/label&gt;$&#123;user.sex&#125;&lt;/h4&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"OGNL表达式显示Action传递的值\"><a href=\"#OGNL表达式显示Action传递的值\" class=\"headerlink\" title=\"OGNL表达式显示Action传递的值\"></a>OGNL表达式显示Action传递的值</h4><blockquote>\n<p>使用OGNL表达式显示Action传递的值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%-- 1.使用OGNL表达式显示Action的值,Struts2默认使用的表达式</div><div class=\"line\">        ① 取基本属性值 :&lt;s:property value=&quot;属性名&quot;/&gt;</div><div class=\"line\">        ② 取域模型对象值 :&lt;s:property value=&quot;对象名.属性名&quot;/&gt;</div><div class=\"line\">--%&gt;</div><div class=\"line\">&lt;%-- 显示基本属性值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;OGNL:显示基本属性值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名 :&lt;/label&gt;&lt;s:property value=&quot;userName&quot;/&gt;&lt;/h4&gt;</div><div class=\"line\">&lt;%-- 显示域模型对象值 --%&gt;</div><div class=\"line\">&lt;p&gt;&lt;label&gt;OGNL:显示域模型对象值:&lt;/label&gt;&lt;/p&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;用户名:&lt;/label&gt;&lt;s:property value=&quot;user.userName&quot;/&gt;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;密码 :&lt;/label&gt;&lt;s:property value=&quot;user.userPassword&quot;/&gt;&lt;/h4&gt;</div><div class=\"line\">&lt;h4&gt;&lt;label&gt;性别 :&lt;/label&gt;&lt;s:property value=&quot;user.sex&quot;/&gt;&lt;/h4&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"OGNL表达式\"><a href=\"#OGNL表达式\" class=\"headerlink\" title=\"OGNL表达式\"></a>OGNL表达式</h3><blockquote>\n<p>对象图导航语言<br>&lt;s:property value=””/&gt; :value中的内容叫做ognl表达式<br>在Struts2.xml的配置文件中开启ognl访问静态方法<br>&lt;constant name= “struts.ognl.allowStaticMethodAccess” value= “true” /&gt;</p>\n</blockquote>\n<h4 id=\"OGNL用法\"><a href=\"#OGNL用法\" class=\"headerlink\" title=\"OGNL用法\"></a>OGNL用法</h4><blockquote>\n<p>Struts2显示标签(在页面获取属性对象需要有get方法)</p>\n<ul>\n<li>Struts2中表达式要结合Struts2标签来访问数据<ul>\n<li>&lt;%@ taglib prefix=”s” uri=”/struts-tags” %&gt;</li>\n</ul>\n</li>\n<li>常用的OGNL表达式<ul>\n<li>访问基本属性  :&lt;s:property value = “基本属性名”/&gt;<ul>\n<li>&lt;s:property value=”userName”/&gt;</li>\n</ul>\n</li>\n<li>访问实体对象 :&lt;s:property value = “对象名.属性名”/&gt;<ul>\n<li>&lt;s:property value=”user.userName”/&gt;</li>\n</ul>\n</li>\n<li>访问数组/集合<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;s:property value=&quot;arrays[0]&quot;/&gt;</div><div class=\"line\">&lt;s:property value=&quot;userList[0]&quot;/&gt;</div><div class=\"line\">&lt;s:property value=&quot;userList.get(0)&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<ul>\n<li><p>访问Map</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:property value=&quot;map.wang&quot;/&gt;</div><div class=\"line\">&lt;s:property value=&quot;map.get(&apos;your&apos;)&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>运算</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:property value=&quot;&apos;nihaoya&apos; + userName&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>调用方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:property value=&quot;&apos;nihaoya&apos; + userName.toUpperCase()&quot;/&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建集合</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:set var=&quot;list&quot; value=&quot;#&#123;&apos;zhangming&apos;,&apos;xiaoi&apos;,&apos;liming&apos;&#125;&quot; /&gt;</div><div class=\"line\">&lt;s:iterator value=&quot;list&quot; var=&quot;n&quot;&gt;</div><div class=\"line\">    &lt;s:property value=&quot;n&quot;/&gt;&lt;br&gt;</div><div class=\"line\">&lt;/s:iterator&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>创建Map</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:set var=&quot;foobar&quot; value=&quot;#&#123;&apos;foo1&apos;:&apos;bar1&apos;, &apos;foo2&apos;:&apos;bar2&apos;&#125;&quot; /&gt;</div><div class=\"line\">&lt;s:iterator value=&quot;foobar&quot; &gt;</div><div class=\"line\">    &lt;s:property value=&quot;key&quot;/&gt;=&lt;s:property value=&quot;value&quot;/&gt;&lt;br&gt;</div><div class=\"line\">&lt;/s:iterator&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>[========]</p>\n<h2 id=\"struts-tags\"><a href=\"#struts-tags\" class=\"headerlink\" title=\"struts-tags\"></a>struts-tags</h2><blockquote>\n<p>struts2中有各种形式的标签可供选择使用,可以完全取代JSTL的标签库,支持表达是语言(OGNL)</p>\n</blockquote>\n<h3 id=\"通用标签\"><a href=\"#通用标签\" class=\"headerlink\" title=\"通用标签\"></a>通用标签</h3><h4 id=\"Property\"><a href=\"#Property\" class=\"headerlink\" title=\"Property\"></a>Property</h4><blockquote>\n<p>&lt;s:property value=”” default=”” escape=”true|false”/&gt;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">escape：可选属性，指定是否格式化HTML代码,true则进行HTML格式化,false则进行原样输出</div><div class=\"line\">value :可选属性，指定需要输出的属性值，如果没有指定该属性，则默认输出 ValueStack 栈顶的值。如果value中的内容为object，则Struts2都会把它解析成ognl表达式,如果里面需要表示为字符串，则需要将内容用单引号括起来</div><div class=\"line\">default :可选属性，如果需要输出的属性值为 null，则显示该属性指定的值</div><div class=\"line\">id :可选属性，指定该元素的标识</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h4><h4 id=\"bean\"><a href=\"#bean\" class=\"headerlink\" title=\"bean\"></a>bean</h4><h4 id=\"include\"><a href=\"#include\" class=\"headerlink\" title=\"include\"></a>include</h4><h4 id=\"param\"><a href=\"#param\" class=\"headerlink\" title=\"param\"></a>param</h4><h4 id=\"debug\"><a href=\"#debug\" class=\"headerlink\" title=\"debug\"></a>debug</h4><h3 id=\"控制标签\"><a href=\"#控制标签\" class=\"headerlink\" title=\"控制标签\"></a>控制标签</h3><h4 id=\"If-else\"><a href=\"#If-else\" class=\"headerlink\" title=\"If else\"></a>If else</h4><h4 id=\"Iterator\"><a href=\"#Iterator\" class=\"headerlink\" title=\"Iterator\"></a>Iterator</h4><h4 id=\"subset\"><a href=\"#subset\" class=\"headerlink\" title=\"subset\"></a>subset</h4><h3 id=\"UI标签\"><a href=\"#UI标签\" class=\"headerlink\" title=\"UI标签\"></a>UI标签</h3><h4 id=\"Theme\"><a href=\"#Theme\" class=\"headerlink\" title=\"Theme\"></a>Theme</h4><h3 id=\"AJAX-标签\"><a href=\"#AJAX-标签\" class=\"headerlink\" title=\"AJAX 标签\"></a>AJAX 标签</h3><h4 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h4><h3 id=\"的区别\"><a href=\"#的区别\" class=\"headerlink\" title=\"$ # % 的区别\"></a>$ # % 的区别</h3><h4 id=\"用于i18n和Struts配置文件\"><a href=\"#用于i18n和Struts配置文件\" class=\"headerlink\" title=\"$用于i18n和Struts配置文件\"></a>$用于i18n和Struts配置文件</h4><h4 id=\"取得ActionContext的值\"><a href=\"#取得ActionContext的值\" class=\"headerlink\" title=\"#取得ActionContext的值\"></a>#取得ActionContext的值</h4><h2 id=\"声明式异常处理\"><a href=\"#声明式异常处理\" class=\"headerlink\" title=\"声明式异常处理\"></a>声明式异常处理</h2><blockquote>\n<p>Struts2中通过拦截器 (interceptor) 来处理声明式异常处理<br>在代码中直接将异常抛出,在 Struts.xml 配置文件中配置需要处理的异常就可以了</p>\n</blockquote>\n<h3 id=\"异常映射exception-mapping\"><a href=\"#异常映射exception-mapping\" class=\"headerlink\" title=\"异常映射exception-mapping\"></a>异常映射exception-mapping</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;action name= &quot;*-*&quot; class= &quot;com.wjt276.bbs2009.action.&#123;1&#125;Action&quot; method= &quot;&#123;2&#125;&quot; &gt;</div><div class=\"line\">    &lt;result&gt;/admin/&#123;1&#125;-&#123;2&#125;.jsp&lt;/result&gt;</div><div class=\"line\">    &lt;result name= &quot;input&quot; &gt;/admin/&#123;1&#125;-&#123;2&#125;.jsp&lt;/result&gt;</div><div class=\"line\">&lt;!-- &lt;exception-mapping&gt;标签是映射异常处理。表示映射哪种异常，此处是java.lang.Exception，</div><div class=\"line\">如果出现异常，那么它会跳转到reslut=&quot;error&quot;的结果集，也就是/error.jsp --&gt;</div><div class=\"line\">    &lt;exception-mapping result= &quot;error&quot; exception= &quot;java.lang.Exception&quot; /&gt;</div><div class=\"line\">    &lt;result name= &quot;error&quot; &gt;/error.jsp&lt;/result&gt;</div><div class=\"line\">&lt;/action&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"设置全局异常\"><a href=\"#设置全局异常\" class=\"headerlink\" title=\"设置全局异常\"></a>设置全局异常</h3><blockquote>\n<p>可以通过设置全局异常处理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;global-exception-mappings&gt;</div><div class=\"line\">    &lt;exception-mapping result= &quot;error&quot; exception= &quot;java.lang.Exception&quot; /&gt;</div><div class=\"line\">&lt;/global-exception-mappings&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"附录1-全局异常和全局结果集\"><a href=\"#附录1-全局异常和全局结果集\" class=\"headerlink\" title=\"附录1:全局异常和全局结果集\"></a>附录1:全局异常和全局结果集</h3><blockquote>\n<p>如果使用全局异常映射( <global-exception-mappings>)和全局结果集（<global-results>）则需要全局结果集(<global-results>)在前<br>如果局部(当前)Action、和全局结果集存在相同的<result>，则使用最近的那个结果</result></global-results></global-results></global-exception-mappings></p>\n</blockquote>\n<h2 id=\"Struts2中的拦截器\"><a href=\"#Struts2中的拦截器\" class=\"headerlink\" title=\"Struts2中的拦截器\"></a>Struts2中的拦截器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- Struts2中内建的拦截器 --&gt;</div><div class=\"line\">&lt;interceptors&gt;</div><div class=\"line\">    &lt;interceptor name=&quot;alias&quot; class=&quot;com.opensymphony.xwork2.interceptor.AliasInterceptor&quot;/&gt;</div><div class=\"line\">    &lt;interceptor name=&quot;autowiring&quot; class=&quot;com.opensymphony.xwork2.spring.interceptor.ActionAutowiringInterceptor&quot;/&gt;</div><div class=\"line\">&lt;/interceptors&gt;</div></pre></td></tr></table></figure>\n<h2 id=\"Struts2中的控制器\"><a href=\"#Struts2中的控制器\" class=\"headerlink\" title=\"Struts2中的控制器\"></a>Struts2中的控制器</h2><h3 id=\"核心控制器-FilterDispatcher\"><a href=\"#核心控制器-FilterDispatcher\" class=\"headerlink\" title=\"核心控制器-FilterDispatcher\"></a>核心控制器-FilterDispatcher</h3><blockquote>\n<p>根据请求来调用合适的Action</p>\n</blockquote>\n<h3 id=\"业务逻辑控制器-Action\"><a href=\"#业务逻辑控制器-Action\" class=\"headerlink\" title=\"业务逻辑控制器-Action\"></a>业务逻辑控制器-Action</h3><blockquote>\n<p>实现一个Action最常用的方法 :继承ActionSupport<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">DMI动态方式的调用 :可以使用action名!methodName 进行动态访问action中的方法</div><div class=\"line\">通配符配置：*_* &#123;1&#125; &#123;2&#125;</div><div class=\"line\">接收参数的方式（一般属性或DomainModel来接收）</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"Struts2中的程序国际化\"><a href=\"#Struts2中的程序国际化\" class=\"headerlink\" title=\"Struts2中的程序国际化\"></a>Struts2中的程序国际化</h2><blockquote>\n<p>Struts2的程序国际化的支持建立在Javq程序国际化的基础之上</p>\n</blockquote>\n<h3 id=\"定义国际化资源文件\"><a href=\"#定义国际化资源文件\" class=\"headerlink\" title=\"定义国际化资源文件\"></a>定义国际化资源文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">文件名 :messageResource.Properties</div><div class=\"line\">文件名 :messageResource_en_US.properties</div><div class=\"line\">//在定义中文资源文件中含有非西欧字符,需要使用native2sacii命令来处理一下</div><div class=\"line\">native2sacii messageResource.Properties messageResource_zh_CN.properties</div><div class=\"line\">//basename_语言代码_国家代码.properties,根据请求来源的语言环境自动使用对应的资源文件</div></pre></td></tr></table></figure>\n<h3 id=\"加载资源文件\"><a href=\"#加载资源文件\" class=\"headerlink\" title=\"加载资源文件\"></a>加载资源文件</h3><blockquote>\n<p>在struts.xml中使用struts.custom.i18n.resources进行加载资源文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//根据定义的资源文件的baseName ,messageResource来指定</div><div class=\"line\">struts.custom.i18n.resources = messageResource</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"输出国际化信息\"><a href=\"#输出国际化信息\" class=\"headerlink\" title=\"输出国际化信息\"></a>输出国际化信息</h3><blockquote>\n<p>在jsp页面中使用s:text来输出国际化信息<br>在jsp页面使用s:property来输出国际化信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;s:text name=&quot;messageKey&quot;/&gt; :使用s:text来输出国际化信息</div><div class=\"line\">&lt;s:property value=&quot;%&#123;getText(&quot;messageKey&quot;)&#125;&quot;/&gt; :使用s:property来输出国际化信息</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"增加数据校验\"><a href=\"#增加数据校验\" class=\"headerlink\" title=\"增加数据校验\"></a>增加数据校验</h2><blockquote>\n<p>校验时期 :在业务逻辑之前先进行数据的简单校验</p>\n</blockquote>\n<h3 id=\"继承ActionSupport\"><a href=\"#继承ActionSupport\" class=\"headerlink\" title=\"继承ActionSupport\"></a>继承ActionSupport</h3><blockquote>\n<p>ActionSupport是一个工具类,实现了 Action, Validateable, ValidationAware, TextProvider, LocaleProvider, Serializable 接口,通过继承ActionSupport接口简化了Struts2的开发过程<br>s:form标签已经提供了输出校验错误的能力<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">继承ActionSupport后可以重写validate()方法即可,在执行业务逻辑方法之前会先执行validate()方法进行校验判定,将错误添加到ActionSupport类的fieldErrors中,然后通过OGNL表达式负责输出</div><div class=\"line\">//示例</div><div class=\"line\">public void validate()</div><div class=\"line\">    &#123;</div><div class=\"line\">    if (getUsername() == null || getUsername().trim().equals(&quot;&quot;))&#123;</div><div class=\"line\">        addFieldError(&quot;username&quot;, &quot;user.required&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">    if (getPassword() == null || getPassword().trim().equals(&quot;&quot;))&#123;</div><div class=\"line\">        addFieldError(&quot;password&quot;, &quot;pass.required&quot;);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">在进行validate()方法校验后,若addFieldError中不为空,则返回input转发到result中input对应的视图</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"错误提示信息的输出\"><a href=\"#错误提示信息的输出\" class=\"headerlink\" title=\"错误提示信息的输出\"></a>错误提示信息的输出</h4><blockquote>\n<p>validate()方法错误信息的添加是调用了getText方法接口in性获取错误提示的<br>Action中,使用getText()方法来获取了两个国际化提示 :user.required和pass.required,因此在国际化资源文件中添加这两条提示信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ActionSupport增加了让提示信息国际化的能力,ActionSupport提供的getText方法可以根据资源文件加载获得国际化提示信息</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"使用Struts2的校验框架\"><a href=\"#使用Struts2的校验框架\" class=\"headerlink\" title=\"使用Struts2的校验框架\"></a>使用Struts2的校验框架</h3><blockquote>\n<p>通过struts的配置文件来完成数据校验(原理是Xwork的validate框架)<br>Struts2提供了大量的数据校验器 :表单域校验器和非表单域校验器<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">//在配置中添加校验器ActionName-validation.xml,文件应该与需要校验的Action在一个文件夹中</div><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;GBK&quot;?&gt;</div><div class=\"line\">&lt;!DOCTYPE validators PUBLIC &quot;-//OpenSymphony Group//XWork Validator 1.0.2//EN&quot;</div><div class=\"line\">    &quot;http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd&quot;&gt;</div><div class=\"line\">&lt;!-- 校验规则定义文件的根元素 --&gt;</div><div class=\"line\">&lt;validators&gt;</div><div class=\"line\">    &lt;field name=&quot;username&quot;&gt;</div><div class=\"line\">        &lt;field-validator type=&quot;requiredstring&quot;&gt;</div><div class=\"line\">            &lt;message key=&quot;user.required&quot;/&gt;</div><div class=\"line\">        &lt;/field-validator&gt;</div><div class=\"line\">    &lt;/field&gt;</div><div class=\"line\">    &lt;field name=&quot;password&quot;&gt;</div><div class=\"line\">        &lt;field-validator type=&quot;requiredstring&quot;&gt;</div><div class=\"line\">            &lt;message key=&quot;pass.required&quot;/&gt;</div><div class=\"line\">        &lt;/field-validator&gt;</div><div class=\"line\">    &lt;/field&gt;</div><div class=\"line\">&lt;/validators&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>"},{"title":"request、session、application、page之间的区别","date":"2017-06-14T10:24:15.715Z","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","description":null,"_content":">Web开发过程中经常需要通过Http请求进行服务器和客户端的交互\n不可避免得回使用到request、session、application、page等。\n<!-- more -->\n\n## 了解几者的生命周期\n\n### 基本概念\n| 对象|生效时间|作用域|  实现接口 |\n|-|-|-|-|\n|request|HTTP请求开始到结束这段时间|在当前请求中有效|HttpServletRequest|\n|session|HTTP会话开始到结束这段时间|在当前会话中有效|HttpSession|\n|application|服务器启动到停止这段时间|在所有应用程序中有效|ServletContext|\n|page|当前页面,在一个jsp页面里有效当前页面|Jsp页面中有效|java.lang.Object|\n\n#### request\n>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量\n\n```\n在一个http的请求周期(见附录1)中都是有效的\n可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转\n```\n##### request的实现\n>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的\n - 变量的存放\n  - void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中\n  -  Object getAttribute(String name) ：从request作用域中取得指定名字的信息\n - 数据之间的传递\n  - doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。\n  - 设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet\n\n##### 附录1:http请求\n>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.\n\n[========]\n\n#### session\n>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束\n\n```\n从用户打开浏览器开始，到用户关闭浏览器这中间的过程。\n这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）\n放到会话中的变量，就可以在当前会话的所有请求里使用\nsession和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.\n```\n\n##### session的实现\n>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域\n - 变量的存放\n  - Object HttpSession.getAttribute(String name) ：从session中获取信息\n  - void HttpSession.setAttribute(String name, Object value)： 向session中保存信息\n - 获取session对象\n  - HttpServletRequest.getSession()方法可以获得HttpSession对象\n  - 浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.\n  - session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟\n  - vooid invalidate() 强制结束当前session\n\n\n[========]\n\n#### application\n>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext\n\n```\n指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)\n此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效\napplication作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值\n在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据\n```\n\n##### application的实现\n>application作用域上的信息传递就是通过ServetContext实现的\n- 变量存放\n - Object getAttribute(String name) 从application中获取信息\n - void setAttribute(String name, Object value) 向application作用域中设置信息\n\n[========]\n\n#### page\n>page指当前页面。在一个jsp页面里有效\n\n```\n只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了\n```\n","source":"_posts/201706140941.md","raw":"---\ntitle: request、session、application、page之间的区别\ndate: 2017-06-14 09:41:01 星期三\ntags:\n- Http请求\n- Servlet\ncategories:\n- Java\n- Servlet\nkeywords: Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程\ndescription:\n---\n>Web开发过程中经常需要通过Http请求进行服务器和客户端的交互\n不可避免得回使用到request、session、application、page等。\n<!-- more -->\n\n## 了解几者的生命周期\n\n### 基本概念\n| 对象|生效时间|作用域|  实现接口 |\n|-|-|-|-|\n|request|HTTP请求开始到结束这段时间|在当前请求中有效|HttpServletRequest|\n|session|HTTP会话开始到结束这段时间|在当前会话中有效|HttpSession|\n|application|服务器启动到停止这段时间|在所有应用程序中有效|ServletContext|\n|page|当前页面,在一个jsp页面里有效当前页面|Jsp页面中有效|java.lang.Object|\n\n#### request\n>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量\n\n```\n在一个http的请求周期(见附录1)中都是有效的\n可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转\n```\n##### request的实现\n>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的\n - 变量的存放\n  - void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中\n  -  Object getAttribute(String name) ：从request作用域中取得指定名字的信息\n - 数据之间的传递\n  - doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。\n  - 设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet\n\n##### 附录1:http请求\n>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.\n\n[========]\n\n#### session\n>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束\n\n```\n从用户打开浏览器开始，到用户关闭浏览器这中间的过程。\n这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）\n放到会话中的变量，就可以在当前会话的所有请求里使用\nsession和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.\n```\n\n##### session的实现\n>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域\n - 变量的存放\n  - Object HttpSession.getAttribute(String name) ：从session中获取信息\n  - void HttpSession.setAttribute(String name, Object value)： 向session中保存信息\n - 获取session对象\n  - HttpServletRequest.getSession()方法可以获得HttpSession对象\n  - 浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.\n  - session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟\n  - vooid invalidate() 强制结束当前session\n\n\n[========]\n\n#### application\n>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext\n\n```\n指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)\n此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效\napplication作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值\n在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据\n```\n\n##### application的实现\n>application作用域上的信息传递就是通过ServetContext实现的\n- 变量存放\n - Object getAttribute(String name) 从application中获取信息\n - void setAttribute(String name, Object value) 向application作用域中设置信息\n\n[========]\n\n#### page\n>page指当前页面。在一个jsp页面里有效\n\n```\n只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了\n```\n","slug":"201706140941","published":1,"updated":"2017-06-14T10:24:26.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj45b6ifo0001rchqfrrnpbrw","content":"<blockquote>\n<p>Web开发过程中经常需要通过Http请求进行服务器和客户端的交互<br>不可避免得回使用到request、session、application、page等。<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"了解几者的生命周期\"><a href=\"#了解几者的生命周期\" class=\"headerlink\" title=\"了解几者的生命周期\"></a>了解几者的生命周期</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><table>\n<thead>\n<tr>\n<th>对象</th>\n<th>生效时间</th>\n<th>作用域</th>\n<th>实现接口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td>HTTP请求开始到结束这段时间</td>\n<td>在当前请求中有效</td>\n<td>HttpServletRequest</td>\n</tr>\n<tr>\n<td>session</td>\n<td>HTTP会话开始到结束这段时间</td>\n<td>在当前会话中有效</td>\n<td>HttpSession</td>\n</tr>\n<tr>\n<td>application</td>\n<td>服务器启动到停止这段时间</td>\n<td>在所有应用程序中有效</td>\n<td>ServletContext</td>\n</tr>\n<tr>\n<td>page</td>\n<td>当前页面,在一个jsp页面里有效当前页面</td>\n<td>Jsp页面中有效</td>\n<td>java.lang.Object</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h4><blockquote>\n<p>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在一个http的请求周期(见附录1)中都是有效的</div><div class=\"line\">可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转</div></pre></td></tr></table></figure>\n<h5 id=\"request的实现\"><a href=\"#request的实现\" class=\"headerlink\" title=\"request的实现\"></a>request的实现</h5><blockquote>\n<p>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的</p>\n<ul>\n<li>变量的存放<ul>\n<li>void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中</li>\n<li>Object getAttribute(String name) ：从request作用域中取得指定名字的信息</li>\n</ul>\n</li>\n<li>数据之间的传递<ul>\n<li>doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。</li>\n<li>设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h5 id=\"附录1-http请求\"><a href=\"#附录1-http请求\" class=\"headerlink\" title=\"附录1:http请求\"></a>附录1:http请求</h5><blockquote>\n<p>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.</p>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h4><blockquote>\n<p>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">从用户打开浏览器开始，到用户关闭浏览器这中间的过程。</div><div class=\"line\">这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）</div><div class=\"line\">放到会话中的变量，就可以在当前会话的所有请求里使用</div><div class=\"line\">session和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.</div></pre></td></tr></table></figure>\n<h5 id=\"session的实现\"><a href=\"#session的实现\" class=\"headerlink\" title=\"session的实现\"></a>session的实现</h5><blockquote>\n<p>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域</p>\n<ul>\n<li>变量的存放<ul>\n<li>Object HttpSession.getAttribute(String name) ：从session中获取信息</li>\n<li>void HttpSession.setAttribute(String name, Object value)： 向session中保存信息</li>\n</ul>\n</li>\n<li>获取session对象<ul>\n<li>HttpServletRequest.getSession()方法可以获得HttpSession对象</li>\n<li>浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.</li>\n<li>session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟</li>\n<li>vooid invalidate() 强制结束当前session</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"application\"><a href=\"#application\" class=\"headerlink\" title=\"application\"></a>application</h4><blockquote>\n<p>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)</div><div class=\"line\">此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效</div><div class=\"line\">application作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值</div><div class=\"line\">在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据</div></pre></td></tr></table></figure>\n<h5 id=\"application的实现\"><a href=\"#application的实现\" class=\"headerlink\" title=\"application的实现\"></a>application的实现</h5><blockquote>\n<p>application作用域上的信息传递就是通过ServetContext实现的</p>\n<ul>\n<li>变量存放<ul>\n<li>Object getAttribute(String name) 从application中获取信息</li>\n<li>void setAttribute(String name, Object value) 向application作用域中设置信息</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"page\"><a href=\"#page\" class=\"headerlink\" title=\"page\"></a>page</h4><blockquote>\n<p>page指当前页面。在一个jsp页面里有效</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Web开发过程中经常需要通过Http请求进行服务器和客户端的交互<br>不可避免得回使用到request、session、application、page等。<br>","more":"</p>\n</blockquote>\n<h2 id=\"了解几者的生命周期\"><a href=\"#了解几者的生命周期\" class=\"headerlink\" title=\"了解几者的生命周期\"></a>了解几者的生命周期</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><table>\n<thead>\n<tr>\n<th>对象</th>\n<th>生效时间</th>\n<th>作用域</th>\n<th>实现接口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td>HTTP请求开始到结束这段时间</td>\n<td>在当前请求中有效</td>\n<td>HttpServletRequest</td>\n</tr>\n<tr>\n<td>session</td>\n<td>HTTP会话开始到结束这段时间</td>\n<td>在当前会话中有效</td>\n<td>HttpSession</td>\n</tr>\n<tr>\n<td>application</td>\n<td>服务器启动到停止这段时间</td>\n<td>在所有应用程序中有效</td>\n<td>ServletContext</td>\n</tr>\n<tr>\n<td>page</td>\n<td>当前页面,在一个jsp页面里有效当前页面</td>\n<td>Jsp页面中有效</td>\n<td>java.lang.Object</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h4><blockquote>\n<p>指从http请求到服务器处理结束，返回响应的整个过程。在这个过程中使用forward方式跳转多个jsp。在这些页面里你都可以使用这个变量</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">在一个http的请求周期(见附录1)中都是有效的</div><div class=\"line\">可以通过请求转发跳转jsp使用变量,但是只要刷新页面，它们就会失效了,需要重新跳转</div></pre></td></tr></table></figure>\n<h5 id=\"request的实现\"><a href=\"#request的实现\" class=\"headerlink\" title=\"request的实现\"></a>request的实现</h5><blockquote>\n<p>Servlet之间的信息共享是通过HttpServletRequest接口的两个方法来实现的</p>\n<ul>\n<li>变量的存放<ul>\n<li>void setAttribute(String name, Object value) ：将对象 value 以 name 为名称保存到request作用域中</li>\n<li>Object getAttribute(String name) ：从request作用域中取得指定名字的信息</li>\n</ul>\n</li>\n<li>数据之间的传递<ul>\n<li>doGet()、doPost() 函数的第一个参数就是 HttpServletRequest 对象， 使用这个对象的 setAttribute 即可传递信息。</li>\n<li>设置好信息之后，要用到 RequestDispatcher 接口的 forward 方法，将请求转发给其他Servlet</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<h5 id=\"附录1-http请求\"><a href=\"#附录1-http请求\" class=\"headerlink\" title=\"附录1:http请求\"></a>附录1:http请求</h5><blockquote>\n<p>http请求周期 :从http请求发起，到服务器处理结束，返回响应的整个过程.</p>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"session\"><a href=\"#session\" class=\"headerlink\" title=\"session\"></a>session</h4><blockquote>\n<p>有效范围当前会话,在第一次请求的时候会话即被开启,有默认的作用时间,浏览器关闭的时候会话结束</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">从用户打开浏览器开始，到用户关闭浏览器这中间的过程。</div><div class=\"line\">这个过程可能包含多个请求响应。也就是说，只要用户不关浏览器，服务器就有办法知道这些请求是一个人发起的，整个过程被称为一个会话（session）</div><div class=\"line\">放到会话中的变量，就可以在当前会话的所有请求里使用</div><div class=\"line\">session和application里的变量一直在累加，开始时候两者作用是相同,当关闭浏览器重启重新访问该页面,session中的变量就失效了.</div></pre></td></tr></table></figure>\n<h5 id=\"session的实现\"><a href=\"#session的实现\" class=\"headerlink\" title=\"session的实现\"></a>session的实现</h5><blockquote>\n<p>session是通过HttpSession接口实现的,同一浏览器访问多次，在这多次访问之间传递信息，就是session作用域</p>\n<ul>\n<li>变量的存放<ul>\n<li>Object HttpSession.getAttribute(String name) ：从session中获取信息</li>\n<li>void HttpSession.setAttribute(String name, Object value)： 向session中保存信息</li>\n</ul>\n</li>\n<li>获取session对象<ul>\n<li>HttpServletRequest.getSession()方法可以获得HttpSession对象</li>\n<li>浏览器发送第一个http请求时session即开启,浏览器关闭的时session关闭,在服务器中,如果一定的时间内客户端没有反应，则认为会话结束.</li>\n<li>session在服务器中可以设置默认的作用时间,tomcat中默认超时时间是30分钟</li>\n<li>vooid invalidate() 强制结束当前session</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"application\"><a href=\"#application\" class=\"headerlink\" title=\"application\"></a>application</h4><blockquote>\n<p>它的有效范围是整个应用,在应用程序启动的时候生效,应用程序关闭的时候结束,在整个应用程序运行的期间都可以使用,实现的接口是ServletContext</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">指从应用启动，到应用结束(非服务器启动的时候,一个服务器可以部署多个应用程序)</div><div class=\"line\">此作用域的变量存活时间最长,在不进行手动删除的时候会一直有效</div><div class=\"line\">application作用域中的数据是共享的,如果用户甲的操作修改了application中的变量，用户乙访问时得到的是修改后的值</div><div class=\"line\">在，page, request, session这几个scope中数据都是完全隔离的，无论如何修改都不会影响其他人的数据</div></pre></td></tr></table></figure>\n<h5 id=\"application的实现\"><a href=\"#application的实现\" class=\"headerlink\" title=\"application的实现\"></a>application的实现</h5><blockquote>\n<p>application作用域上的信息传递就是通过ServetContext实现的</p>\n<ul>\n<li>变量存放<ul>\n<li>Object getAttribute(String name) 从application中获取信息</li>\n<li>void setAttribute(String name, Object value) 向application作用域中设置信息</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>[========]</p>\n<h4 id=\"page\"><a href=\"#page\" class=\"headerlink\" title=\"page\"></a>page</h4><blockquote>\n<p>page指当前页面。在一个jsp页面里有效</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">只能在当前jsp页面有效,当跳转到另一个jsp页面便失效了</div></pre></td></tr></table></figure>"},{"title":"深入理解Struts2-源码解读","date":"2017-06-20T08:28:09.185Z","keywords":"Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程","description":null,"_content":">进一步的学习Struts2的内部原理,能更好的使用Struts2\n<!-- more -->\n\n## 了解Struts2的发展\n\n### Struts1\n\n### WebWork\n![](index_files/dab8d273-6577-4c72-be46-933d13afae6d.jpg)\n>WebWork是在Xwork的基础上发展起来的\n```\n核心控制器 :ServletDispatch,由框架提供\n业务逻辑控制器 :用户自定义\n```\n>对比Struts1\n```\nAction无需与ServletAPI耦合,更容易进行单元测试\nAction无需与WebWork耦合,代码重用率高\n支持更多的表现层技术,有更好的适应性\n```\n\n### Struts2\n>Struts2是在WebWork的基础设计的,使用大量拦截器来处理用户请求,从而使用户的业务逻辑控制器与ServletAPI分离\n\n#### Struts处理流程\n```\n浏览器(客户端)发送请求\n核心控制器FilterDispatcher根据请求来调用合适的Action\nWebWork的拦截器自动对请求应用通用功能\n回调Action的execute方法,该方法先获取用户请求参数,然后执行相应的操作(数据库操作等),Action只是一个控制器,会调用业务逻辑组件来处理用户的请求\nAction的execute方法处理结果信息被输出到浏览器中,可以是Html页面,图像,也可以是PDF文档等,支持JSP,Velocity,FreeMarker等模板技术\n```\n\n#### 对比Struts1\n- 在Action实现类方面对比\n```\nStruts1要求Action继承一个抽象基类,Struts1的一个具体问题是使用抽象类编程而不是接口\nStruts2Action类实现一个Action接口,也可以实现其他接口,使得可选和定制的服务成为可能\nStruts2提供一个ActionSupport基类去实现常用的接口.\n即使Action接口不是必须实现的,只有一个包含execute方法的POJO类都可以用作Struts2的Action\n```\n- 线程方面的对比\n```\nStruts1Action是单例模式,线程必须是安全的,因为仅有Action实例来处理所有的请求;\n单例模式限制了Struts1Action能做的事,在开发中必须保证线程是安全或同步的\nStruts2Action对象为每一个请求产生一个实例,因此没有线程安全问题不是必须实现的,只有一个包含execute方法的POJO类也可以当作Struts2的Action\n```\n- Servlet依赖方面的对比\n```\nStruts1Action依赖于ServletAPI,因为Struts1Acton的execute方法中有HttpServletRequest和HttpServletReponse方法\nStruts2Action不再依赖于ServletApI,从而允许Action脱离Web容器运行,从而降低了测试Action的难度,Strus2Action中可以直接访问HttpServletRequest和HttpServletReponse\n```\n- 可测性方面的对比\n```\n测试Struts1Action的一个问题是execute方法依赖于ServletAPI,使得Action的测试需要依赖于Web容器,为了脱离Web容器测试Struts1Action,需要借助第三方扩展:StrutsTestCase,该扩展下包含了系列的Mock对象(模拟了HttpServletRequest和HttpServletReponse对象),从而脱离Web容器测试Struts1的Action类\nStruts2Action可以通过初始化、设置属性、调用方法来测试\n```\n- 封装请求参数的对比\n```\nStruts1使用ActionForm对象封装用户的请求参数,所有的ActionForm必须继承一个基类:ActionForm普通的JavaBean不能用作ActionForm,因此开发者必须创建大量的ActionForm类封装用户请求参数,虽然Struts1提供了动态ActionForm来简化ActionForm的开发,但依然需要在配置文件中定义ActionForm;\nStruts2直接使用Action属性来封装用户请求属性,避免开发者需要大量开发ActionForm的繁琐\n```\n- 表达是语言方面的对比\n```\nStruts1整合了JSTL,因此可以使用JSTL表达式语言\nStruts2可以使用JSTL,OGNL表达式\n```\n- 绑定值到视图的对比\n```\nStruts1使用标准JSP机制把对象绑定到视图页面\nStruts2使用ValueStack技术,使标签库能够访问值,从而不需要把对象和视图绑定在一起\n```\n- 类型转换的对比\n```\nStruts1ActionForm属性通常都是String类型,使用Commons-Beanutils进行类型转换,每个类一个转换器,转换器不可配置\nStruts2使用OGNL进行类型转换,支持数据类型和常用对象之间的转换\n```\n- 数据校验的对比\n```\nStruts1支持在ActionForm重写Validate方法中手动校验,或者通过整合Commons alidator框架来完成数据校验\nStruts2支持通过重写validate方法进行校验,也支持整合XWork校验框架进行校验\n```\n- Action执行控制的对比\n```\nStruts1支持每一个模块对应一个请求处理(即生命周期的概念),但是模块中的所有Action必须共享相同的生命周期\nStruts2支持通过拦截器堆栈为每一个Action创建不同的生命周期,开发者可以根据需要创建相应堆栈,从而和不同的Action一起使用\n```\n\n## Struts2的开发实践\n### Struts2的基本流程\n>核心控制器 :FilterDispatcher\n>业务控制器\n>业务逻辑组件\n\n#### 核心控制器 :FilterDispatcher\n>1. 基本原理 :Filter允许能在Web应用中,负责拦截所有的用户请求,客户端发送的请求,Filter会过滤用户请求\n>2. 处理用户请求的Action并不是用户实现的业务控制器,而是Action代理 - 用户实现的业务控制器并没有与ServletAPI耦合,显然无法处理用户请求\n>3. Struts2 提供了系列拦截器,负责将HttpServletRequest请求中的请求参数解析出来,传入到Action中,并回调Action的execute方法处理用户请求\n\n**AOP面向切面编程**\n![](index_files/63cd7851-d30b-463c-b88a-b7139a6ef84b.png)\n\n#### 业务控制器 - Action实现类\n>1. 用户实现的Action-业务控制器 Action中的execute方法,返回一个字符串对应配置文件中的逻辑视图\n>2. Struts配置的Action\n```\nAction所处理的请求\nAction组件所对应的实现类\nAction里包含的逻辑视图和物力资源之间的对应关系\n## 每个Action都处理一个请求,用户请求中包含指定URL,FilterDispatcher拦截到用户请求后,根据请求的URL和Action处理URL之间的对应关系来处理转发\n```\n\n#### 业务逻辑组件\n>`业务逻辑控制器`不会对客户端的请求做任何处理,只是中间负责调度的控制器,会调用`业务逻辑组件`对用户作出处理\n![](index_files/889d3ec0-fdc8-467b-9f40-fbfba6866b90.png)\n```\n在业务控制器Action中需要调用业务逻辑组件时,不会直接获取业务逻辑组件实例,而是通过工厂模式或者其他IOC容器(Spring容器),来管理业务逻辑组件实例\n```\n\n#### Struts2的视图组件\n>Struts2的控制器返回逻辑视图名时,逻辑视图并未与任何的视图技术关联,仅仅返回一个字符串,该字符串作为逻辑视图名\n>struts中配置的Action中result子元素定义了逻辑视图和物理视图之间的映射,默认使用JSP作为视图资源 通说type属性指定\n\n#### Struts2的运行流程\n>同WebWork的运行流程\n![](index_files/9fce1439-8fd6-49f1-bca8-d285b61025e7.jpg)\n\n### Struts2的基本配置\n>web.xml、struts.xml、struts.properties\n\n#### 配置web.xml文件\n>1. MVC框架需要与Web应用整合,只有配置在web.xml文件中Servlet才会被应用加载\n>2. MVC框架需要Web应用加载一个核心控制器,对于Struts2框架而言需要加载FilterDispatcher\n>3. 只要Web应用 加载FilterDispatcher,FilterDispatcher将会加载应用的Struts2框架,FilterDispatcher本质是一个Filter只需要在web.xml文件中配置FilterDispatcher即可\n```\n<!-- 配置ruts2框架的核心Filter -->\n<filter>\n<!-- 配置ruts2框架的核心Filter的名字 --\n        <filter-name>struts</filter-name>\n<!-- 配置ruts2框架的核心Filter的实现类 ->\n        <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>\n        <init-param>\n<!-- 配置ruts2框架默认加载的Action包结构 -->\n            <param-name>actionPackages</param-name>\n            <param-value>org.apache.struts2.showcase.person</param-value>\n        </init-param>\n<!-- 配置ruts2框架的配置提供者 -->\n        <init-param>\n            <param-name>configProviders </param-name>\n            <param-value>lee.MyConfigurationProvider</param-value>\n        </init>\n</filter>\n<!-- 配置Filter拦截的URL -->\n<filter-mapping>\n<!-- 配置Struts2核心FilterDispatcher拦截所有的请求,使用通配符/* -->\n        <filter-name>struts</filter-name>\n        <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n**初始化参数 :**`init-param`\n```\n<!-- 三个特殊意义的参数 -->\nconfig :该参数的值是一个以英文逗号`,`隔开的字符串,每个字符串都是一个XML配置文件的位置,Struts2框架将自动加载该属性指定的系列配置文件\nactionPackages :该参数的值也是一个以英文逗号`,`隔开的字符串,每个字符串都是一个包空间,Struts2框架将扫描这些包空间下的Action类\nconfigProviders :用户需要实现自己的ConfigurationProvider类,用户可以提供一个或多个实现了ConfigurationProvider接口的类,然后将这些类的类名设置成该属性的值,多个类名之间以英文`,`隔开\n<!-- 可以定义一些常量 -->\n```\n**加载Struts2标签库 :** `struts-tags.tld`\n>Web中Servlet-2.3版本规范之前,Struts标签库不能自动配置加载,需要手动进行配置加载\n```\n<!-- 手动配置Struts2标签库+ -->\n<taglib>\n<!-- 配置Struts2标签库URL -->\n        <taglib-uri>/s</taglib-uri>\n<!-- 指定Struts2标签库定义文件的位置 -->\n        <taglib-location>/WEB-INF/struts-tags.tld</taglib-location>\n</taglib>\n```\n\n#### struts.xml配置文件\n>负责管理应用中的Action和result映射\n>struts中为了避免Action过多导致配置文件臃肿,使用模块化管理,将配置文件分成多个然后包含进struts.xml中\n>struts2框架会自动加载jar文件中xx.xml文件,使用可插拔式的插件安装\n**struts.xml的文件结构**\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- 指定Struts2配置文件的DTD信息 -->\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n    \"http://struts.apache.org/dtds/struts-2.0.dtd\">\n<!-- struts是Struts2配置文件的根元素 -->\n<struts>\n    <!-- 可以出现0或多次 -->\n    <constant name=\"\" value=\"\" />\n    <!-- 可以出现0或多次 -->\n    <bean type=\"\" name=\"\" class=\"\" scope=\"\" static=\"\" optional=\"\" />\n    <!-- 可以出现0或多次 -->\n    <include file=\"\" />\n    <!-- 核心配置,可以出现0或多次,action请求会根据包名来进行处理,找不到则会按照上一级包下的action的处理 -->\n    <package name=\"包名\" extends=\"\" namespace=\"\" abstract=\"\"\nexternalReferenceResolver>\n        <!-- 可以出现0或1次 -->\n        <result-types>\n            <result-type name=\"\" class=\"\" default=\"true|false\">\n                <param name=\"参数名\">参数值</param>\n            </result-type>\n        </result-types>\n````\n\n### 拦截器配置\n> AOP(面向切面编程思想),拦截器允许在Acton处理之前,或者在处理结束之后,插入开发者自定义的代码\n>使用拦截器完成\n```\n进行权限控制(检查浏览者是否拥有足够权限)\n跟踪日志(记录用户所请求的Acton)\n跟踪系统的性能瓶颈\n```\n","source":"_posts/201706150927.md","raw":"---\ntitle: 深入理解Struts2-源码解读\ndate: 2017-06-15 09:27:55 星期四\ntags:\n- Java开发框架\n- Struts2\ncategories:\n- Java\n- Struts2\nkeywords: Blog,Java,Web,前端,后端,Python,PHP,开发者,程序员,javascript,Html,maven,gitHub,学习分享,编程\ndescription:\n---\n>进一步的学习Struts2的内部原理,能更好的使用Struts2\n<!-- more -->\n\n## 了解Struts2的发展\n\n### Struts1\n\n### WebWork\n![](index_files/dab8d273-6577-4c72-be46-933d13afae6d.jpg)\n>WebWork是在Xwork的基础上发展起来的\n```\n核心控制器 :ServletDispatch,由框架提供\n业务逻辑控制器 :用户自定义\n```\n>对比Struts1\n```\nAction无需与ServletAPI耦合,更容易进行单元测试\nAction无需与WebWork耦合,代码重用率高\n支持更多的表现层技术,有更好的适应性\n```\n\n### Struts2\n>Struts2是在WebWork的基础设计的,使用大量拦截器来处理用户请求,从而使用户的业务逻辑控制器与ServletAPI分离\n\n#### Struts处理流程\n```\n浏览器(客户端)发送请求\n核心控制器FilterDispatcher根据请求来调用合适的Action\nWebWork的拦截器自动对请求应用通用功能\n回调Action的execute方法,该方法先获取用户请求参数,然后执行相应的操作(数据库操作等),Action只是一个控制器,会调用业务逻辑组件来处理用户的请求\nAction的execute方法处理结果信息被输出到浏览器中,可以是Html页面,图像,也可以是PDF文档等,支持JSP,Velocity,FreeMarker等模板技术\n```\n\n#### 对比Struts1\n- 在Action实现类方面对比\n```\nStruts1要求Action继承一个抽象基类,Struts1的一个具体问题是使用抽象类编程而不是接口\nStruts2Action类实现一个Action接口,也可以实现其他接口,使得可选和定制的服务成为可能\nStruts2提供一个ActionSupport基类去实现常用的接口.\n即使Action接口不是必须实现的,只有一个包含execute方法的POJO类都可以用作Struts2的Action\n```\n- 线程方面的对比\n```\nStruts1Action是单例模式,线程必须是安全的,因为仅有Action实例来处理所有的请求;\n单例模式限制了Struts1Action能做的事,在开发中必须保证线程是安全或同步的\nStruts2Action对象为每一个请求产生一个实例,因此没有线程安全问题不是必须实现的,只有一个包含execute方法的POJO类也可以当作Struts2的Action\n```\n- Servlet依赖方面的对比\n```\nStruts1Action依赖于ServletAPI,因为Struts1Acton的execute方法中有HttpServletRequest和HttpServletReponse方法\nStruts2Action不再依赖于ServletApI,从而允许Action脱离Web容器运行,从而降低了测试Action的难度,Strus2Action中可以直接访问HttpServletRequest和HttpServletReponse\n```\n- 可测性方面的对比\n```\n测试Struts1Action的一个问题是execute方法依赖于ServletAPI,使得Action的测试需要依赖于Web容器,为了脱离Web容器测试Struts1Action,需要借助第三方扩展:StrutsTestCase,该扩展下包含了系列的Mock对象(模拟了HttpServletRequest和HttpServletReponse对象),从而脱离Web容器测试Struts1的Action类\nStruts2Action可以通过初始化、设置属性、调用方法来测试\n```\n- 封装请求参数的对比\n```\nStruts1使用ActionForm对象封装用户的请求参数,所有的ActionForm必须继承一个基类:ActionForm普通的JavaBean不能用作ActionForm,因此开发者必须创建大量的ActionForm类封装用户请求参数,虽然Struts1提供了动态ActionForm来简化ActionForm的开发,但依然需要在配置文件中定义ActionForm;\nStruts2直接使用Action属性来封装用户请求属性,避免开发者需要大量开发ActionForm的繁琐\n```\n- 表达是语言方面的对比\n```\nStruts1整合了JSTL,因此可以使用JSTL表达式语言\nStruts2可以使用JSTL,OGNL表达式\n```\n- 绑定值到视图的对比\n```\nStruts1使用标准JSP机制把对象绑定到视图页面\nStruts2使用ValueStack技术,使标签库能够访问值,从而不需要把对象和视图绑定在一起\n```\n- 类型转换的对比\n```\nStruts1ActionForm属性通常都是String类型,使用Commons-Beanutils进行类型转换,每个类一个转换器,转换器不可配置\nStruts2使用OGNL进行类型转换,支持数据类型和常用对象之间的转换\n```\n- 数据校验的对比\n```\nStruts1支持在ActionForm重写Validate方法中手动校验,或者通过整合Commons alidator框架来完成数据校验\nStruts2支持通过重写validate方法进行校验,也支持整合XWork校验框架进行校验\n```\n- Action执行控制的对比\n```\nStruts1支持每一个模块对应一个请求处理(即生命周期的概念),但是模块中的所有Action必须共享相同的生命周期\nStruts2支持通过拦截器堆栈为每一个Action创建不同的生命周期,开发者可以根据需要创建相应堆栈,从而和不同的Action一起使用\n```\n\n## Struts2的开发实践\n### Struts2的基本流程\n>核心控制器 :FilterDispatcher\n>业务控制器\n>业务逻辑组件\n\n#### 核心控制器 :FilterDispatcher\n>1. 基本原理 :Filter允许能在Web应用中,负责拦截所有的用户请求,客户端发送的请求,Filter会过滤用户请求\n>2. 处理用户请求的Action并不是用户实现的业务控制器,而是Action代理 - 用户实现的业务控制器并没有与ServletAPI耦合,显然无法处理用户请求\n>3. Struts2 提供了系列拦截器,负责将HttpServletRequest请求中的请求参数解析出来,传入到Action中,并回调Action的execute方法处理用户请求\n\n**AOP面向切面编程**\n![](index_files/63cd7851-d30b-463c-b88a-b7139a6ef84b.png)\n\n#### 业务控制器 - Action实现类\n>1. 用户实现的Action-业务控制器 Action中的execute方法,返回一个字符串对应配置文件中的逻辑视图\n>2. Struts配置的Action\n```\nAction所处理的请求\nAction组件所对应的实现类\nAction里包含的逻辑视图和物力资源之间的对应关系\n## 每个Action都处理一个请求,用户请求中包含指定URL,FilterDispatcher拦截到用户请求后,根据请求的URL和Action处理URL之间的对应关系来处理转发\n```\n\n#### 业务逻辑组件\n>`业务逻辑控制器`不会对客户端的请求做任何处理,只是中间负责调度的控制器,会调用`业务逻辑组件`对用户作出处理\n![](index_files/889d3ec0-fdc8-467b-9f40-fbfba6866b90.png)\n```\n在业务控制器Action中需要调用业务逻辑组件时,不会直接获取业务逻辑组件实例,而是通过工厂模式或者其他IOC容器(Spring容器),来管理业务逻辑组件实例\n```\n\n#### Struts2的视图组件\n>Struts2的控制器返回逻辑视图名时,逻辑视图并未与任何的视图技术关联,仅仅返回一个字符串,该字符串作为逻辑视图名\n>struts中配置的Action中result子元素定义了逻辑视图和物理视图之间的映射,默认使用JSP作为视图资源 通说type属性指定\n\n#### Struts2的运行流程\n>同WebWork的运行流程\n![](index_files/9fce1439-8fd6-49f1-bca8-d285b61025e7.jpg)\n\n### Struts2的基本配置\n>web.xml、struts.xml、struts.properties\n\n#### 配置web.xml文件\n>1. MVC框架需要与Web应用整合,只有配置在web.xml文件中Servlet才会被应用加载\n>2. MVC框架需要Web应用加载一个核心控制器,对于Struts2框架而言需要加载FilterDispatcher\n>3. 只要Web应用 加载FilterDispatcher,FilterDispatcher将会加载应用的Struts2框架,FilterDispatcher本质是一个Filter只需要在web.xml文件中配置FilterDispatcher即可\n```\n<!-- 配置ruts2框架的核心Filter -->\n<filter>\n<!-- 配置ruts2框架的核心Filter的名字 --\n        <filter-name>struts</filter-name>\n<!-- 配置ruts2框架的核心Filter的实现类 ->\n        <filter-class>org.apache.struts2.dispatcher.FilterDispatcher</filter-class>\n        <init-param>\n<!-- 配置ruts2框架默认加载的Action包结构 -->\n            <param-name>actionPackages</param-name>\n            <param-value>org.apache.struts2.showcase.person</param-value>\n        </init-param>\n<!-- 配置ruts2框架的配置提供者 -->\n        <init-param>\n            <param-name>configProviders </param-name>\n            <param-value>lee.MyConfigurationProvider</param-value>\n        </init>\n</filter>\n<!-- 配置Filter拦截的URL -->\n<filter-mapping>\n<!-- 配置Struts2核心FilterDispatcher拦截所有的请求,使用通配符/* -->\n        <filter-name>struts</filter-name>\n        <url-pattern>/*</url-pattern>\n</filter-mapping>\n```\n**初始化参数 :**`init-param`\n```\n<!-- 三个特殊意义的参数 -->\nconfig :该参数的值是一个以英文逗号`,`隔开的字符串,每个字符串都是一个XML配置文件的位置,Struts2框架将自动加载该属性指定的系列配置文件\nactionPackages :该参数的值也是一个以英文逗号`,`隔开的字符串,每个字符串都是一个包空间,Struts2框架将扫描这些包空间下的Action类\nconfigProviders :用户需要实现自己的ConfigurationProvider类,用户可以提供一个或多个实现了ConfigurationProvider接口的类,然后将这些类的类名设置成该属性的值,多个类名之间以英文`,`隔开\n<!-- 可以定义一些常量 -->\n```\n**加载Struts2标签库 :** `struts-tags.tld`\n>Web中Servlet-2.3版本规范之前,Struts标签库不能自动配置加载,需要手动进行配置加载\n```\n<!-- 手动配置Struts2标签库+ -->\n<taglib>\n<!-- 配置Struts2标签库URL -->\n        <taglib-uri>/s</taglib-uri>\n<!-- 指定Struts2标签库定义文件的位置 -->\n        <taglib-location>/WEB-INF/struts-tags.tld</taglib-location>\n</taglib>\n```\n\n#### struts.xml配置文件\n>负责管理应用中的Action和result映射\n>struts中为了避免Action过多导致配置文件臃肿,使用模块化管理,将配置文件分成多个然后包含进struts.xml中\n>struts2框架会自动加载jar文件中xx.xml文件,使用可插拔式的插件安装\n**struts.xml的文件结构**\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- 指定Struts2配置文件的DTD信息 -->\n<!DOCTYPE struts PUBLIC\n    \"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN\"\n    \"http://struts.apache.org/dtds/struts-2.0.dtd\">\n<!-- struts是Struts2配置文件的根元素 -->\n<struts>\n    <!-- 可以出现0或多次 -->\n    <constant name=\"\" value=\"\" />\n    <!-- 可以出现0或多次 -->\n    <bean type=\"\" name=\"\" class=\"\" scope=\"\" static=\"\" optional=\"\" />\n    <!-- 可以出现0或多次 -->\n    <include file=\"\" />\n    <!-- 核心配置,可以出现0或多次,action请求会根据包名来进行处理,找不到则会按照上一级包下的action的处理 -->\n    <package name=\"包名\" extends=\"\" namespace=\"\" abstract=\"\"\nexternalReferenceResolver>\n        <!-- 可以出现0或1次 -->\n        <result-types>\n            <result-type name=\"\" class=\"\" default=\"true|false\">\n                <param name=\"参数名\">参数值</param>\n            </result-type>\n        </result-types>\n````\n\n### 拦截器配置\n> AOP(面向切面编程思想),拦截器允许在Acton处理之前,或者在处理结束之后,插入开发者自定义的代码\n>使用拦截器完成\n```\n进行权限控制(检查浏览者是否拥有足够权限)\n跟踪日志(记录用户所请求的Acton)\n跟踪系统的性能瓶颈\n```\n","slug":"201706150927","published":1,"updated":"2017-06-20T08:28:51.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj45b6ig00003rchq538h6f68","content":"<blockquote>\n<p>进一步的学习Struts2的内部原理,能更好的使用Struts2<br><a id=\"more\"></a></p>\n</blockquote>\n<h2 id=\"了解Struts2的发展\"><a href=\"#了解Struts2的发展\" class=\"headerlink\" title=\"了解Struts2的发展\"></a>了解Struts2的发展</h2><h3 id=\"Struts1\"><a href=\"#Struts1\" class=\"headerlink\" title=\"Struts1\"></a>Struts1</h3><h3 id=\"WebWork\"><a href=\"#WebWork\" class=\"headerlink\" title=\"WebWork\"></a>WebWork</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/dab8d273-6577-4c72-be46-933d13afae6d.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>WebWork是在Xwork的基础上发展起来的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">核心控制器 :ServletDispatch,由框架提供</div><div class=\"line\">业务逻辑控制器 :用户自定义</div></pre></td></tr></table></figure></p>\n<p>对比Struts1<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Action无需与ServletAPI耦合,更容易进行单元测试</div><div class=\"line\">Action无需与WebWork耦合,代码重用率高</div><div class=\"line\">支持更多的表现层技术,有更好的适应性</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h3><blockquote>\n<p>Struts2是在WebWork的基础设计的,使用大量拦截器来处理用户请求,从而使用户的业务逻辑控制器与ServletAPI分离</p>\n</blockquote>\n<h4 id=\"Struts处理流程\"><a href=\"#Struts处理流程\" class=\"headerlink\" title=\"Struts处理流程\"></a>Struts处理流程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">浏览器(客户端)发送请求</div><div class=\"line\">核心控制器FilterDispatcher根据请求来调用合适的Action</div><div class=\"line\">WebWork的拦截器自动对请求应用通用功能</div><div class=\"line\">回调Action的execute方法,该方法先获取用户请求参数,然后执行相应的操作(数据库操作等),Action只是一个控制器,会调用业务逻辑组件来处理用户的请求</div><div class=\"line\">Action的execute方法处理结果信息被输出到浏览器中,可以是Html页面,图像,也可以是PDF文档等,支持JSP,Velocity,FreeMarker等模板技术</div></pre></td></tr></table></figure>\n<h4 id=\"对比Struts1\"><a href=\"#对比Struts1\" class=\"headerlink\" title=\"对比Struts1\"></a>对比Struts1</h4><ul>\n<li><p>在Action实现类方面对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1要求Action继承一个抽象基类,Struts1的一个具体问题是使用抽象类编程而不是接口</div><div class=\"line\">Struts2Action类实现一个Action接口,也可以实现其他接口,使得可选和定制的服务成为可能</div><div class=\"line\">Struts2提供一个ActionSupport基类去实现常用的接口.</div><div class=\"line\">即使Action接口不是必须实现的,只有一个包含execute方法的POJO类都可以用作Struts2的Action</div></pre></td></tr></table></figure>\n</li>\n<li><p>线程方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1Action是单例模式,线程必须是安全的,因为仅有Action实例来处理所有的请求;</div><div class=\"line\">单例模式限制了Struts1Action能做的事,在开发中必须保证线程是安全或同步的</div><div class=\"line\">Struts2Action对象为每一个请求产生一个实例,因此没有线程安全问题不是必须实现的,只有一个包含execute方法的POJO类也可以当作Struts2的Action</div></pre></td></tr></table></figure>\n</li>\n<li><p>Servlet依赖方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1Action依赖于ServletAPI,因为Struts1Acton的execute方法中有HttpServletRequest和HttpServletReponse方法</div><div class=\"line\">Struts2Action不再依赖于ServletApI,从而允许Action脱离Web容器运行,从而降低了测试Action的难度,Strus2Action中可以直接访问HttpServletRequest和HttpServletReponse</div></pre></td></tr></table></figure>\n</li>\n<li><p>可测性方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">测试Struts1Action的一个问题是execute方法依赖于ServletAPI,使得Action的测试需要依赖于Web容器,为了脱离Web容器测试Struts1Action,需要借助第三方扩展:StrutsTestCase,该扩展下包含了系列的Mock对象(模拟了HttpServletRequest和HttpServletReponse对象),从而脱离Web容器测试Struts1的Action类</div><div class=\"line\">Struts2Action可以通过初始化、设置属性、调用方法来测试</div></pre></td></tr></table></figure>\n</li>\n<li><p>封装请求参数的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1使用ActionForm对象封装用户的请求参数,所有的ActionForm必须继承一个基类:ActionForm普通的JavaBean不能用作ActionForm,因此开发者必须创建大量的ActionForm类封装用户请求参数,虽然Struts1提供了动态ActionForm来简化ActionForm的开发,但依然需要在配置文件中定义ActionForm;</div><div class=\"line\">Struts2直接使用Action属性来封装用户请求属性,避免开发者需要大量开发ActionForm的繁琐</div></pre></td></tr></table></figure>\n</li>\n<li><p>表达是语言方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1整合了JSTL,因此可以使用JSTL表达式语言</div><div class=\"line\">Struts2可以使用JSTL,OGNL表达式</div></pre></td></tr></table></figure>\n</li>\n<li><p>绑定值到视图的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1使用标准JSP机制把对象绑定到视图页面</div><div class=\"line\">Struts2使用ValueStack技术,使标签库能够访问值,从而不需要把对象和视图绑定在一起</div></pre></td></tr></table></figure>\n</li>\n<li><p>类型转换的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1ActionForm属性通常都是String类型,使用Commons-Beanutils进行类型转换,每个类一个转换器,转换器不可配置</div><div class=\"line\">Struts2使用OGNL进行类型转换,支持数据类型和常用对象之间的转换</div></pre></td></tr></table></figure>\n</li>\n<li><p>数据校验的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1支持在ActionForm重写Validate方法中手动校验,或者通过整合Commons alidator框架来完成数据校验</div><div class=\"line\">Struts2支持通过重写validate方法进行校验,也支持整合XWork校验框架进行校验</div></pre></td></tr></table></figure>\n</li>\n<li><p>Action执行控制的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1支持每一个模块对应一个请求处理(即生命周期的概念),但是模块中的所有Action必须共享相同的生命周期</div><div class=\"line\">Struts2支持通过拦截器堆栈为每一个Action创建不同的生命周期,开发者可以根据需要创建相应堆栈,从而和不同的Action一起使用</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Struts2的开发实践\"><a href=\"#Struts2的开发实践\" class=\"headerlink\" title=\"Struts2的开发实践\"></a>Struts2的开发实践</h2><h3 id=\"Struts2的基本流程\"><a href=\"#Struts2的基本流程\" class=\"headerlink\" title=\"Struts2的基本流程\"></a>Struts2的基本流程</h3><blockquote>\n<p>核心控制器 :FilterDispatcher<br>业务控制器<br>业务逻辑组件</p>\n</blockquote>\n<h4 id=\"核心控制器-FilterDispatcher\"><a href=\"#核心控制器-FilterDispatcher\" class=\"headerlink\" title=\"核心控制器 :FilterDispatcher\"></a>核心控制器 :FilterDispatcher</h4><blockquote>\n<ol>\n<li>基本原理 :Filter允许能在Web应用中,负责拦截所有的用户请求,客户端发送的请求,Filter会过滤用户请求</li>\n<li>处理用户请求的Action并不是用户实现的业务控制器,而是Action代理 - 用户实现的业务控制器并没有与ServletAPI耦合,显然无法处理用户请求</li>\n<li>Struts2 提供了系列拦截器,负责将HttpServletRequest请求中的请求参数解析出来,传入到Action中,并回调Action的execute方法处理用户请求</li>\n</ol>\n</blockquote>\n<p><strong>AOP面向切面编程</strong><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/63cd7851-d30b-463c-b88a-b7139a6ef84b.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<h4 id=\"业务控制器-Action实现类\"><a href=\"#业务控制器-Action实现类\" class=\"headerlink\" title=\"业务控制器 - Action实现类\"></a>业务控制器 - Action实现类</h4><blockquote>\n<ol>\n<li>用户实现的Action-业务控制器 Action中的execute方法,返回一个字符串对应配置文件中的逻辑视图</li>\n<li>Struts配置的Action<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Action所处理的请求</div><div class=\"line\">Action组件所对应的实现类</div><div class=\"line\">Action里包含的逻辑视图和物力资源之间的对应关系</div><div class=\"line\">## 每个Action都处理一个请求,用户请求中包含指定URL,FilterDispatcher拦截到用户请求后,根据请求的URL和Action处理URL之间的对应关系来处理转发</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"业务逻辑组件\"><a href=\"#业务逻辑组件\" class=\"headerlink\" title=\"业务逻辑组件\"></a>业务逻辑组件</h4><blockquote>\n<p><code>业务逻辑控制器</code>不会对客户端的请求做任何处理,只是中间负责调度的控制器,会调用<code>业务逻辑组件</code>对用户作出处理<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/889d3ec0-fdc8-467b-9f40-fbfba6866b90.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">在业务控制器Action中需要调用业务逻辑组件时,不会直接获取业务逻辑组件实例,而是通过工厂模式或者其他IOC容器(Spring容器),来管理业务逻辑组件实例</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"Struts2的视图组件\"><a href=\"#Struts2的视图组件\" class=\"headerlink\" title=\"Struts2的视图组件\"></a>Struts2的视图组件</h4><blockquote>\n<p>Struts2的控制器返回逻辑视图名时,逻辑视图并未与任何的视图技术关联,仅仅返回一个字符串,该字符串作为逻辑视图名<br>struts中配置的Action中result子元素定义了逻辑视图和物理视图之间的映射,默认使用JSP作为视图资源 通说type属性指定</p>\n</blockquote>\n<h4 id=\"Struts2的运行流程\"><a href=\"#Struts2的运行流程\" class=\"headerlink\" title=\"Struts2的运行流程\"></a>Struts2的运行流程</h4><blockquote>\n<p>同WebWork的运行流程<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/9fce1439-8fd6-49f1-bca8-d285b61025e7.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n</blockquote>\n<h3 id=\"Struts2的基本配置\"><a href=\"#Struts2的基本配置\" class=\"headerlink\" title=\"Struts2的基本配置\"></a>Struts2的基本配置</h3><blockquote>\n<p>web.xml、struts.xml、struts.properties</p>\n</blockquote>\n<h4 id=\"配置web-xml文件\"><a href=\"#配置web-xml文件\" class=\"headerlink\" title=\"配置web.xml文件\"></a>配置web.xml文件</h4><blockquote>\n<ol>\n<li>MVC框架需要与Web应用整合,只有配置在web.xml文件中Servlet才会被应用加载</li>\n<li>MVC框架需要Web应用加载一个核心控制器,对于Struts2框架而言需要加载FilterDispatcher</li>\n<li>只要Web应用 加载FilterDispatcher,FilterDispatcher将会加载应用的Struts2框架,FilterDispatcher本质是一个Filter只需要在web.xml文件中配置FilterDispatcher即可<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 配置ruts2框架的核心Filter --&gt;</div><div class=\"line\">&lt;filter&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架的核心Filter的名字 --</div><div class=\"line\">        &lt;filter-name&gt;struts&lt;/filter-name&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架的核心Filter的实现类 -&gt;</div><div class=\"line\">        &lt;filter-class&gt;org.apache.struts2.dispatcher.FilterDispatcher&lt;/filter-class&gt;</div><div class=\"line\">        &lt;init-param&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架默认加载的Action包结构 --&gt;</div><div class=\"line\">            &lt;param-name&gt;actionPackages&lt;/param-name&gt;</div><div class=\"line\">            &lt;param-value&gt;org.apache.struts2.showcase.person&lt;/param-value&gt;</div><div class=\"line\">        &lt;/init-param&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架的配置提供者 --&gt;</div><div class=\"line\">        &lt;init-param&gt;</div><div class=\"line\">            &lt;param-name&gt;configProviders &lt;/param-name&gt;</div><div class=\"line\">            &lt;param-value&gt;lee.MyConfigurationProvider&lt;/param-value&gt;</div><div class=\"line\">        &lt;/init&gt;</div><div class=\"line\">&lt;/filter&gt;</div><div class=\"line\">&lt;!-- 配置Filter拦截的URL --&gt;</div><div class=\"line\">&lt;filter-mapping&gt;</div><div class=\"line\">&lt;!-- 配置Struts2核心FilterDispatcher拦截所有的请求,使用通配符/* --&gt;</div><div class=\"line\">        &lt;filter-name&gt;struts&lt;/filter-name&gt;</div><div class=\"line\">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<p><strong>初始化参数 :</strong><code>init-param</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 三个特殊意义的参数 --&gt;</div><div class=\"line\">config :该参数的值是一个以英文逗号`,`隔开的字符串,每个字符串都是一个XML配置文件的位置,Struts2框架将自动加载该属性指定的系列配置文件</div><div class=\"line\">actionPackages :该参数的值也是一个以英文逗号`,`隔开的字符串,每个字符串都是一个包空间,Struts2框架将扫描这些包空间下的Action类</div><div class=\"line\">configProviders :用户需要实现自己的ConfigurationProvider类,用户可以提供一个或多个实现了ConfigurationProvider接口的类,然后将这些类的类名设置成该属性的值,多个类名之间以英文`,`隔开</div><div class=\"line\">&lt;!-- 可以定义一些常量 --&gt;</div></pre></td></tr></table></figure></p>\n<p><strong>加载Struts2标签库 :</strong> <code>struts-tags.tld</code></p>\n<blockquote>\n<p>Web中Servlet-2.3版本规范之前,Struts标签库不能自动配置加载,需要手动进行配置加载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 手动配置Struts2标签库+ --&gt;</div><div class=\"line\">&lt;taglib&gt;</div><div class=\"line\">&lt;!-- 配置Struts2标签库URL --&gt;</div><div class=\"line\">        &lt;taglib-uri&gt;/s&lt;/taglib-uri&gt;</div><div class=\"line\">&lt;!-- 指定Struts2标签库定义文件的位置 --&gt;</div><div class=\"line\">        &lt;taglib-location&gt;/WEB-INF/struts-tags.tld&lt;/taglib-location&gt;</div><div class=\"line\">&lt;/taglib&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"struts-xml配置文件\"><a href=\"#struts-xml配置文件\" class=\"headerlink\" title=\"struts.xml配置文件\"></a>struts.xml配置文件</h4><blockquote>\n<p>负责管理应用中的Action和result映射<br>struts中为了避免Action过多导致配置文件臃肿,使用模块化管理,将配置文件分成多个然后包含进struts.xml中<br>struts2框架会自动加载jar文件中xx.xml文件,使用可插拔式的插件安装<br><strong>struts.xml的文件结构</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!-- 指定Struts2配置文件的DTD信息 --&gt;</div><div class=\"line\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">    &quot;-//Apache Software Foundation//DTD Struts Configuration 2.0//EN&quot;</div><div class=\"line\">    &quot;http://struts.apache.org/dtds/struts-2.0.dtd&quot;&gt;</div><div class=\"line\">&lt;!-- struts是Struts2配置文件的根元素 --&gt;</div><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">    &lt;!-- 可以出现0或多次 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;&quot; value=&quot;&quot; /&gt;</div><div class=\"line\">    &lt;!-- 可以出现0或多次 --&gt;</div><div class=\"line\">    &lt;bean type=&quot;&quot; name=&quot;&quot; class=&quot;&quot; scope=&quot;&quot; static=&quot;&quot; optional=&quot;&quot; /&gt;</div><div class=\"line\">    &lt;!-- 可以出现0或多次 --&gt;</div><div class=\"line\">    &lt;include file=&quot;&quot; /&gt;</div><div class=\"line\">    &lt;!-- 核心配置,可以出现0或多次,action请求会根据包名来进行处理,找不到则会按照上一级包下的action的处理 --&gt;</div><div class=\"line\">    &lt;package name=&quot;包名&quot; extends=&quot;&quot; namespace=&quot;&quot; abstract=&quot;&quot;</div><div class=\"line\">externalReferenceResolver&gt;</div><div class=\"line\">        &lt;!-- 可以出现0或1次 --&gt;</div><div class=\"line\">        &lt;result-types&gt;</div><div class=\"line\">            &lt;result-type name=&quot;&quot; class=&quot;&quot; default=&quot;true|false&quot;&gt;</div><div class=\"line\">                &lt;param name=&quot;参数名&quot;&gt;参数值&lt;/param&gt;</div><div class=\"line\">            &lt;/result-type&gt;</div><div class=\"line\">        &lt;/result-types&gt;</div><div class=\"line\">`</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"拦截器配置\"><a href=\"#拦截器配置\" class=\"headerlink\" title=\"拦截器配置\"></a>拦截器配置</h3><blockquote>\n<p>AOP(面向切面编程思想),拦截器允许在Acton处理之前,或者在处理结束之后,插入开发者自定义的代码<br>使用拦截器完成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进行权限控制(检查浏览者是否拥有足够权限)</div><div class=\"line\">跟踪日志(记录用户所请求的Acton)</div><div class=\"line\">跟踪系统的性能瓶颈</div></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>进一步的学习Struts2的内部原理,能更好的使用Struts2<br>","more":"</p>\n</blockquote>\n<h2 id=\"了解Struts2的发展\"><a href=\"#了解Struts2的发展\" class=\"headerlink\" title=\"了解Struts2的发展\"></a>了解Struts2的发展</h2><h3 id=\"Struts1\"><a href=\"#Struts1\" class=\"headerlink\" title=\"Struts1\"></a>Struts1</h3><h3 id=\"WebWork\"><a href=\"#WebWork\" class=\"headerlink\" title=\"WebWork\"></a>WebWork</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/dab8d273-6577-4c72-be46-933d13afae6d.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<blockquote>\n<p>WebWork是在Xwork的基础上发展起来的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">核心控制器 :ServletDispatch,由框架提供</div><div class=\"line\">业务逻辑控制器 :用户自定义</div></pre></td></tr></table></figure></p>\n<p>对比Struts1<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Action无需与ServletAPI耦合,更容易进行单元测试</div><div class=\"line\">Action无需与WebWork耦合,代码重用率高</div><div class=\"line\">支持更多的表现层技术,有更好的适应性</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h3><blockquote>\n<p>Struts2是在WebWork的基础设计的,使用大量拦截器来处理用户请求,从而使用户的业务逻辑控制器与ServletAPI分离</p>\n</blockquote>\n<h4 id=\"Struts处理流程\"><a href=\"#Struts处理流程\" class=\"headerlink\" title=\"Struts处理流程\"></a>Struts处理流程</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">浏览器(客户端)发送请求</div><div class=\"line\">核心控制器FilterDispatcher根据请求来调用合适的Action</div><div class=\"line\">WebWork的拦截器自动对请求应用通用功能</div><div class=\"line\">回调Action的execute方法,该方法先获取用户请求参数,然后执行相应的操作(数据库操作等),Action只是一个控制器,会调用业务逻辑组件来处理用户的请求</div><div class=\"line\">Action的execute方法处理结果信息被输出到浏览器中,可以是Html页面,图像,也可以是PDF文档等,支持JSP,Velocity,FreeMarker等模板技术</div></pre></td></tr></table></figure>\n<h4 id=\"对比Struts1\"><a href=\"#对比Struts1\" class=\"headerlink\" title=\"对比Struts1\"></a>对比Struts1</h4><ul>\n<li><p>在Action实现类方面对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1要求Action继承一个抽象基类,Struts1的一个具体问题是使用抽象类编程而不是接口</div><div class=\"line\">Struts2Action类实现一个Action接口,也可以实现其他接口,使得可选和定制的服务成为可能</div><div class=\"line\">Struts2提供一个ActionSupport基类去实现常用的接口.</div><div class=\"line\">即使Action接口不是必须实现的,只有一个包含execute方法的POJO类都可以用作Struts2的Action</div></pre></td></tr></table></figure>\n</li>\n<li><p>线程方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1Action是单例模式,线程必须是安全的,因为仅有Action实例来处理所有的请求;</div><div class=\"line\">单例模式限制了Struts1Action能做的事,在开发中必须保证线程是安全或同步的</div><div class=\"line\">Struts2Action对象为每一个请求产生一个实例,因此没有线程安全问题不是必须实现的,只有一个包含execute方法的POJO类也可以当作Struts2的Action</div></pre></td></tr></table></figure>\n</li>\n<li><p>Servlet依赖方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1Action依赖于ServletAPI,因为Struts1Acton的execute方法中有HttpServletRequest和HttpServletReponse方法</div><div class=\"line\">Struts2Action不再依赖于ServletApI,从而允许Action脱离Web容器运行,从而降低了测试Action的难度,Strus2Action中可以直接访问HttpServletRequest和HttpServletReponse</div></pre></td></tr></table></figure>\n</li>\n<li><p>可测性方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">测试Struts1Action的一个问题是execute方法依赖于ServletAPI,使得Action的测试需要依赖于Web容器,为了脱离Web容器测试Struts1Action,需要借助第三方扩展:StrutsTestCase,该扩展下包含了系列的Mock对象(模拟了HttpServletRequest和HttpServletReponse对象),从而脱离Web容器测试Struts1的Action类</div><div class=\"line\">Struts2Action可以通过初始化、设置属性、调用方法来测试</div></pre></td></tr></table></figure>\n</li>\n<li><p>封装请求参数的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1使用ActionForm对象封装用户的请求参数,所有的ActionForm必须继承一个基类:ActionForm普通的JavaBean不能用作ActionForm,因此开发者必须创建大量的ActionForm类封装用户请求参数,虽然Struts1提供了动态ActionForm来简化ActionForm的开发,但依然需要在配置文件中定义ActionForm;</div><div class=\"line\">Struts2直接使用Action属性来封装用户请求属性,避免开发者需要大量开发ActionForm的繁琐</div></pre></td></tr></table></figure>\n</li>\n<li><p>表达是语言方面的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1整合了JSTL,因此可以使用JSTL表达式语言</div><div class=\"line\">Struts2可以使用JSTL,OGNL表达式</div></pre></td></tr></table></figure>\n</li>\n<li><p>绑定值到视图的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1使用标准JSP机制把对象绑定到视图页面</div><div class=\"line\">Struts2使用ValueStack技术,使标签库能够访问值,从而不需要把对象和视图绑定在一起</div></pre></td></tr></table></figure>\n</li>\n<li><p>类型转换的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1ActionForm属性通常都是String类型,使用Commons-Beanutils进行类型转换,每个类一个转换器,转换器不可配置</div><div class=\"line\">Struts2使用OGNL进行类型转换,支持数据类型和常用对象之间的转换</div></pre></td></tr></table></figure>\n</li>\n<li><p>数据校验的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1支持在ActionForm重写Validate方法中手动校验,或者通过整合Commons alidator框架来完成数据校验</div><div class=\"line\">Struts2支持通过重写validate方法进行校验,也支持整合XWork校验框架进行校验</div></pre></td></tr></table></figure>\n</li>\n<li><p>Action执行控制的对比</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Struts1支持每一个模块对应一个请求处理(即生命周期的概念),但是模块中的所有Action必须共享相同的生命周期</div><div class=\"line\">Struts2支持通过拦截器堆栈为每一个Action创建不同的生命周期,开发者可以根据需要创建相应堆栈,从而和不同的Action一起使用</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"Struts2的开发实践\"><a href=\"#Struts2的开发实践\" class=\"headerlink\" title=\"Struts2的开发实践\"></a>Struts2的开发实践</h2><h3 id=\"Struts2的基本流程\"><a href=\"#Struts2的基本流程\" class=\"headerlink\" title=\"Struts2的基本流程\"></a>Struts2的基本流程</h3><blockquote>\n<p>核心控制器 :FilterDispatcher<br>业务控制器<br>业务逻辑组件</p>\n</blockquote>\n<h4 id=\"核心控制器-FilterDispatcher\"><a href=\"#核心控制器-FilterDispatcher\" class=\"headerlink\" title=\"核心控制器 :FilterDispatcher\"></a>核心控制器 :FilterDispatcher</h4><blockquote>\n<ol>\n<li>基本原理 :Filter允许能在Web应用中,负责拦截所有的用户请求,客户端发送的请求,Filter会过滤用户请求</li>\n<li>处理用户请求的Action并不是用户实现的业务控制器,而是Action代理 - 用户实现的业务控制器并没有与ServletAPI耦合,显然无法处理用户请求</li>\n<li>Struts2 提供了系列拦截器,负责将HttpServletRequest请求中的请求参数解析出来,传入到Action中,并回调Action的execute方法处理用户请求</li>\n</ol>\n</blockquote>\n<p><strong>AOP面向切面编程</strong><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/63cd7851-d30b-463c-b88a-b7139a6ef84b.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<h4 id=\"业务控制器-Action实现类\"><a href=\"#业务控制器-Action实现类\" class=\"headerlink\" title=\"业务控制器 - Action实现类\"></a>业务控制器 - Action实现类</h4><blockquote>\n<ol>\n<li>用户实现的Action-业务控制器 Action中的execute方法,返回一个字符串对应配置文件中的逻辑视图</li>\n<li>Struts配置的Action<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Action所处理的请求</div><div class=\"line\">Action组件所对应的实现类</div><div class=\"line\">Action里包含的逻辑视图和物力资源之间的对应关系</div><div class=\"line\">## 每个Action都处理一个请求,用户请求中包含指定URL,FilterDispatcher拦截到用户请求后,根据请求的URL和Action处理URL之间的对应关系来处理转发</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<h4 id=\"业务逻辑组件\"><a href=\"#业务逻辑组件\" class=\"headerlink\" title=\"业务逻辑组件\"></a>业务逻辑组件</h4><blockquote>\n<p><code>业务逻辑控制器</code>不会对客户端的请求做任何处理,只是中间负责调度的控制器,会调用<code>业务逻辑组件</code>对用户作出处理<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/889d3ec0-fdc8-467b-9f40-fbfba6866b90.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">在业务控制器Action中需要调用业务逻辑组件时,不会直接获取业务逻辑组件实例,而是通过工厂模式或者其他IOC容器(Spring容器),来管理业务逻辑组件实例</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"Struts2的视图组件\"><a href=\"#Struts2的视图组件\" class=\"headerlink\" title=\"Struts2的视图组件\"></a>Struts2的视图组件</h4><blockquote>\n<p>Struts2的控制器返回逻辑视图名时,逻辑视图并未与任何的视图技术关联,仅仅返回一个字符串,该字符串作为逻辑视图名<br>struts中配置的Action中result子元素定义了逻辑视图和物理视图之间的映射,默认使用JSP作为视图资源 通说type属性指定</p>\n</blockquote>\n<h4 id=\"Struts2的运行流程\"><a href=\"#Struts2的运行流程\" class=\"headerlink\" title=\"Struts2的运行流程\"></a>Struts2的运行流程</h4><blockquote>\n<p>同WebWork的运行流程<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"index_files/9fce1439-8fd6-49f1-bca8-d285b61025e7.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n</blockquote>\n<h3 id=\"Struts2的基本配置\"><a href=\"#Struts2的基本配置\" class=\"headerlink\" title=\"Struts2的基本配置\"></a>Struts2的基本配置</h3><blockquote>\n<p>web.xml、struts.xml、struts.properties</p>\n</blockquote>\n<h4 id=\"配置web-xml文件\"><a href=\"#配置web-xml文件\" class=\"headerlink\" title=\"配置web.xml文件\"></a>配置web.xml文件</h4><blockquote>\n<ol>\n<li>MVC框架需要与Web应用整合,只有配置在web.xml文件中Servlet才会被应用加载</li>\n<li>MVC框架需要Web应用加载一个核心控制器,对于Struts2框架而言需要加载FilterDispatcher</li>\n<li>只要Web应用 加载FilterDispatcher,FilterDispatcher将会加载应用的Struts2框架,FilterDispatcher本质是一个Filter只需要在web.xml文件中配置FilterDispatcher即可<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 配置ruts2框架的核心Filter --&gt;</div><div class=\"line\">&lt;filter&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架的核心Filter的名字 --</div><div class=\"line\">        &lt;filter-name&gt;struts&lt;/filter-name&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架的核心Filter的实现类 -&gt;</div><div class=\"line\">        &lt;filter-class&gt;org.apache.struts2.dispatcher.FilterDispatcher&lt;/filter-class&gt;</div><div class=\"line\">        &lt;init-param&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架默认加载的Action包结构 --&gt;</div><div class=\"line\">            &lt;param-name&gt;actionPackages&lt;/param-name&gt;</div><div class=\"line\">            &lt;param-value&gt;org.apache.struts2.showcase.person&lt;/param-value&gt;</div><div class=\"line\">        &lt;/init-param&gt;</div><div class=\"line\">&lt;!-- 配置ruts2框架的配置提供者 --&gt;</div><div class=\"line\">        &lt;init-param&gt;</div><div class=\"line\">            &lt;param-name&gt;configProviders &lt;/param-name&gt;</div><div class=\"line\">            &lt;param-value&gt;lee.MyConfigurationProvider&lt;/param-value&gt;</div><div class=\"line\">        &lt;/init&gt;</div><div class=\"line\">&lt;/filter&gt;</div><div class=\"line\">&lt;!-- 配置Filter拦截的URL --&gt;</div><div class=\"line\">&lt;filter-mapping&gt;</div><div class=\"line\">&lt;!-- 配置Struts2核心FilterDispatcher拦截所有的请求,使用通配符/* --&gt;</div><div class=\"line\">        &lt;filter-name&gt;struts&lt;/filter-name&gt;</div><div class=\"line\">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</div><div class=\"line\">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure>\n</li>\n</ol>\n</blockquote>\n<p><strong>初始化参数 :</strong><code>init-param</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 三个特殊意义的参数 --&gt;</div><div class=\"line\">config :该参数的值是一个以英文逗号`,`隔开的字符串,每个字符串都是一个XML配置文件的位置,Struts2框架将自动加载该属性指定的系列配置文件</div><div class=\"line\">actionPackages :该参数的值也是一个以英文逗号`,`隔开的字符串,每个字符串都是一个包空间,Struts2框架将扫描这些包空间下的Action类</div><div class=\"line\">configProviders :用户需要实现自己的ConfigurationProvider类,用户可以提供一个或多个实现了ConfigurationProvider接口的类,然后将这些类的类名设置成该属性的值,多个类名之间以英文`,`隔开</div><div class=\"line\">&lt;!-- 可以定义一些常量 --&gt;</div></pre></td></tr></table></figure></p>\n<p><strong>加载Struts2标签库 :</strong> <code>struts-tags.tld</code></p>\n<blockquote>\n<p>Web中Servlet-2.3版本规范之前,Struts标签库不能自动配置加载,需要手动进行配置加载<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 手动配置Struts2标签库+ --&gt;</div><div class=\"line\">&lt;taglib&gt;</div><div class=\"line\">&lt;!-- 配置Struts2标签库URL --&gt;</div><div class=\"line\">        &lt;taglib-uri&gt;/s&lt;/taglib-uri&gt;</div><div class=\"line\">&lt;!-- 指定Struts2标签库定义文件的位置 --&gt;</div><div class=\"line\">        &lt;taglib-location&gt;/WEB-INF/struts-tags.tld&lt;/taglib-location&gt;</div><div class=\"line\">&lt;/taglib&gt;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"struts-xml配置文件\"><a href=\"#struts-xml配置文件\" class=\"headerlink\" title=\"struts.xml配置文件\"></a>struts.xml配置文件</h4><blockquote>\n<p>负责管理应用中的Action和result映射<br>struts中为了避免Action过多导致配置文件臃肿,使用模块化管理,将配置文件分成多个然后包含进struts.xml中<br>struts2框架会自动加载jar文件中xx.xml文件,使用可插拔式的插件安装<br><strong>struts.xml的文件结构</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class=\"line\">&lt;!-- 指定Struts2配置文件的DTD信息 --&gt;</div><div class=\"line\">&lt;!DOCTYPE struts PUBLIC</div><div class=\"line\">    &quot;-//Apache Software Foundation//DTD Struts Configuration 2.0//EN&quot;</div><div class=\"line\">    &quot;http://struts.apache.org/dtds/struts-2.0.dtd&quot;&gt;</div><div class=\"line\">&lt;!-- struts是Struts2配置文件的根元素 --&gt;</div><div class=\"line\">&lt;struts&gt;</div><div class=\"line\">    &lt;!-- 可以出现0或多次 --&gt;</div><div class=\"line\">    &lt;constant name=&quot;&quot; value=&quot;&quot; /&gt;</div><div class=\"line\">    &lt;!-- 可以出现0或多次 --&gt;</div><div class=\"line\">    &lt;bean type=&quot;&quot; name=&quot;&quot; class=&quot;&quot; scope=&quot;&quot; static=&quot;&quot; optional=&quot;&quot; /&gt;</div><div class=\"line\">    &lt;!-- 可以出现0或多次 --&gt;</div><div class=\"line\">    &lt;include file=&quot;&quot; /&gt;</div><div class=\"line\">    &lt;!-- 核心配置,可以出现0或多次,action请求会根据包名来进行处理,找不到则会按照上一级包下的action的处理 --&gt;</div><div class=\"line\">    &lt;package name=&quot;包名&quot; extends=&quot;&quot; namespace=&quot;&quot; abstract=&quot;&quot;</div><div class=\"line\">externalReferenceResolver&gt;</div><div class=\"line\">        &lt;!-- 可以出现0或1次 --&gt;</div><div class=\"line\">        &lt;result-types&gt;</div><div class=\"line\">            &lt;result-type name=&quot;&quot; class=&quot;&quot; default=&quot;true|false&quot;&gt;</div><div class=\"line\">                &lt;param name=&quot;参数名&quot;&gt;参数值&lt;/param&gt;</div><div class=\"line\">            &lt;/result-type&gt;</div><div class=\"line\">        &lt;/result-types&gt;</div><div class=\"line\">`</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h3 id=\"拦截器配置\"><a href=\"#拦截器配置\" class=\"headerlink\" title=\"拦截器配置\"></a>拦截器配置</h3><blockquote>\n<p>AOP(面向切面编程思想),拦截器允许在Acton处理之前,或者在处理结束之后,插入开发者自定义的代码<br>使用拦截器完成<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">进行权限控制(检查浏览者是否拥有足够权限)</div><div class=\"line\">跟踪日志(记录用户所请求的Acton)</div><div class=\"line\">跟踪系统的性能瓶颈</div></pre></td></tr></table></figure></p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj3wuhod100042whqjibwg86l","category_id":"cj3wuhofb000c2whq4ja0jd5d","_id":"cj3wuhoh1000l2whq15ppuzch"},{"post_id":"cj3wuhof5000a2whq8e975fc2","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhohw000u2whqswxdwm80"},{"post_id":"cj3wuhof5000a2whq8e975fc2","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhoi1000y2whqnwb54ixb"},{"post_id":"cj3wuhoce00022whqv0ek4dyh","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhoi2000z2whqy3v75ukp"},{"post_id":"cj3wuhoce00022whqv0ek4dyh","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhoig00132whqgofv2yqe"},{"post_id":"cj3wuhoem00082whqc1xthyyb","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhoke001i2whqh28evadx"},{"post_id":"cj3wuhoem00082whqc1xthyyb","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhokh001l2whqj8wot8q4"},{"post_id":"cj3wuhogp000k2whqjn3bv8lj","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhoko001m2whqfwdmg8db"},{"post_id":"cj3wuhogp000k2whqjn3bv8lj","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhoky001p2whqsvl2a3cf"},{"post_id":"cj3wuhof7000b2whqmz966deu","category_id":"cj3wuhohz000w2whqe8x2caux","_id":"cj3wuhol2001r2whq7vq5pjhu"},{"post_id":"cj3wuhof7000b2whqmz966deu","category_id":"cj3wuhokf001j2whqjp1m83wb","_id":"cj3wuhol7001v2whq1bg44ab9"},{"post_id":"cj3wuhofg000e2whqvm2wbhmn","category_id":"cj3wuhohz000w2whqe8x2caux","_id":"cj3wuhold001w2whqza2fx1gl"},{"post_id":"cj3wuhofg000e2whqvm2wbhmn","category_id":"cj3wuhokr001n2whqb0ek6nlh","_id":"cj3wuholp001y2whqquyi8qhi"},{"post_id":"cj3wuhofs000f2whqt6fc03gg","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuholw00202whqygdde323"},{"post_id":"cj3wuhofs000f2whqt6fc03gg","category_id":"cj3wuhol4001t2whqrwlb37dr","_id":"cj3wuhom400222whq5s8fam65"},{"post_id":"cj3wuhoga000i2whq3atwooha","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuhom500232whq58r65z99"},{"post_id":"cj3wuhoga000i2whq3atwooha","category_id":"cj3wuholl001x2whqftqzs0se","_id":"cj3wuhom900242whqqvpht90e"},{"post_id":"cj3wuhon700252whqlezhvljr","category_id":"cj3wuhofb000c2whq4ja0jd5d","_id":"cj3wuhoo000282whqiqvnviqo"},{"post_id":"cj3wuhono00262whq7rndhi70","category_id":"cj3wuhofb000c2whq4ja0jd5d","_id":"cj3wuhoo2002a2whqkmiy45qf"},{"post_id":"cj3wuhoog002b2whq9urrffmc","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuhopw002i2whqvg7wghab"},{"post_id":"cj3wuhoog002b2whq9urrffmc","category_id":"cj3wuhol4001t2whqrwlb37dr","_id":"cj3wuhoq7002k2whqcqjlnrev"},{"post_id":"cj3wuhooj002c2whq1ow51duo","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuhoqb002n2whqvnczriq1"},{"post_id":"cj3wuhooj002c2whq1ow51duo","category_id":"cj3wuhol4001t2whqrwlb37dr","_id":"cj3wuhoqf002p2whqqfcj4dej"},{"post_id":"cj3wuhoox002e2whqm6xienhx","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wuhoql002r2whqgs88inqe"},{"post_id":"cj3wuhoox002e2whqm6xienhx","category_id":"cj3wuholl001x2whqftqzs0se","_id":"cj3wuhoqq002t2whq0b6pcmwq"},{"post_id":"cj3wuhopn002h2whqt3eifg7m","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhoqt002v2whqa0kjmb54"},{"post_id":"cj3wuhopn002h2whqt3eifg7m","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhoqw002x2whqd8fptv5f"},{"post_id":"cj3wuhosj002z2whqd6noeyfg","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhou000352whq0ryzod76"},{"post_id":"cj3wuhosj002z2whqd6noeyfg","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhouc00382whqh4zddzhj"},{"post_id":"cj3wuhoso00302whqanvsugv7","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhouk003b2whqu5o1cloz"},{"post_id":"cj3wuhoso00302whqanvsugv7","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhous003e2whq7gcbfigg"},{"post_id":"cj3wuhot300322whqhqlagc8u","category_id":"cj3wuhoe900062whqf1nawf0q","_id":"cj3wuhouw003g2whq4adx139w"},{"post_id":"cj3wuhot300322whqhqlagc8u","category_id":"cj3wuhoh8000n2whq6khc67sl","_id":"cj3wuhouy003i2whqz6gsieyj"},{"post_id":"cj3wuhouh003a2whqyqfmpikw","category_id":"cj3wuhohz000w2whqe8x2caux","_id":"cj3wuhov0003k2whqo6g68cgz"},{"post_id":"cj3wuhouh003a2whqyqfmpikw","category_id":"cj3wuhokr001n2whqb0ek6nlh","_id":"cj3wuhov1003m2whq0arb2pp6"},{"post_id":"cj3wuhoun003d2whqcgrrr4pj","category_id":"cj3wuhohz000w2whqe8x2caux","_id":"cj3wuhow0003n2whqreyfnqz7"},{"post_id":"cj3wuhoun003d2whqcgrrr4pj","category_id":"cj3wuhokf001j2whqjp1m83wb","_id":"cj3wuhow1003o2whqetbfq93y"},{"post_id":"cj3wunqa70008mghqytd8snsv","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj3wunqal000bmghqizkuamy2"},{"post_id":"cj3wunqa70008mghqytd8snsv","category_id":"cj3wunq6g0002mghqid0opnq2","_id":"cj3wunqam000cmghq81g6lk2y"},{"post_id":"cj45b6ifo0001rchqfrrnpbrw","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj45b6ign0007rchqnawwit93"},{"post_id":"cj45b6ifo0001rchqfrrnpbrw","category_id":"cj3wunq6g0002mghqid0opnq2","_id":"cj45b6igp0009rchqpqlyobfs"},{"post_id":"cj45b6ig00003rchq538h6f68","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj45b6igp000brchqu7gq02b6"},{"post_id":"cj45b6ig00003rchq538h6f68","category_id":"cj3wuhol4001t2whqrwlb37dr","_id":"cj45b6igs000drchqru46bes6"},{"post_id":"cj45b6if50000rchq7wbpu8o3","category_id":"cj3wuhoik00162whqxfpnuqa1","_id":"cj45b6igt000erchqi8hrvkth"},{"post_id":"cj45b6if50000rchq7wbpu8o3","category_id":"cj45b6ig60004rchq2a2mv85b","_id":"cj45b6igu000frchq7a9taxp5"}],"PostTag":[{"post_id":"cj3wuhoce00022whqv0ek4dyh","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhogh000j2whqtu2ccjit"},{"post_id":"cj3wuhoce00022whqv0ek4dyh","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoh2000m2whqehawt6e9"},{"post_id":"cj3wuhogp000k2whqjn3bv8lj","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhohj000p2whqd3qmmlta"},{"post_id":"cj3wuhogp000k2whqjn3bv8lj","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhohu000s2whqamybfj19"},{"post_id":"cj3wuhod100042whqjibwg86l","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhohv000t2whqmanvnht5"},{"post_id":"cj3wuhod100042whqjibwg86l","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoi0000x2whq6omcuj0p"},{"post_id":"cj3wuhoem00082whqc1xthyyb","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhoib00122whquycpza1r"},{"post_id":"cj3wuhoem00082whqc1xthyyb","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoih00142whqtgu313bc"},{"post_id":"cj3wuhof5000a2whq8e975fc2","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhoil00172whquc5ahiut"},{"post_id":"cj3wuhof5000a2whq8e975fc2","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoio00182whqwelne8mu"},{"post_id":"cj3wuhof7000b2whqmz966deu","tag_id":"cj3wuhoih00152whqy900e1lg","_id":"cj3wuhojs001d2whqco5f5p6o"},{"post_id":"cj3wuhof7000b2whqmz966deu","tag_id":"cj3wuhoit00192whqm0upgty7","_id":"cj3wuhojs001e2whqfgndnc3k"},{"post_id":"cj3wuhofg000e2whqvm2wbhmn","tag_id":"cj3wuhojh001b2whq4kqtw7zv","_id":"cj3wuhok8001h2whq3h6kq03l"},{"post_id":"cj3wuhofs000f2whqt6fc03gg","tag_id":"cj3wuhok5001g2whqcmrw1gzf","_id":"cj3wuhol0001q2whqh86q4b6t"},{"post_id":"cj3wuhofs000f2whqt6fc03gg","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj3wuhol3001s2whqpebgx6qf"},{"post_id":"cj3wuhoga000i2whq3atwooha","tag_id":"cj3wuhokt001o2whq423kz1ve","_id":"cj3wuholr001z2whqg5n6lf59"},{"post_id":"cj3wuhoga000i2whq3atwooha","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj3wuhom200212whqmbm8niil"},{"post_id":"cj3wuhono00262whq7rndhi70","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhonz00272whq2h4aby96"},{"post_id":"cj3wuhono00262whq7rndhi70","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoo100292whqjyuhr3cq"},{"post_id":"cj3wuhoog002b2whq9urrffmc","tag_id":"cj3wuhok5001g2whqcmrw1gzf","_id":"cj3wuhoow002d2whqs8jpp4zu"},{"post_id":"cj3wuhoog002b2whq9urrffmc","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj3wuhopm002g2whqeu9pupfn"},{"post_id":"cj3wuhoox002e2whqm6xienhx","tag_id":"cj3wuhokt001o2whq423kz1ve","_id":"cj3wuhoq1002j2whqrro4zf3a"},{"post_id":"cj3wuhoox002e2whqm6xienhx","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj3wuhoq9002l2whq3jhm48q2"},{"post_id":"cj3wuhopn002h2whqt3eifg7m","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhoqc002o2whqrxt14vxy"},{"post_id":"cj3wuhopn002h2whqt3eifg7m","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoqg002q2whqw7n5go8t"},{"post_id":"cj3wuhooj002c2whq1ow51duo","tag_id":"cj3wuhok5001g2whqcmrw1gzf","_id":"cj3wuhoqp002s2whqjre9uf4t"},{"post_id":"cj3wuhooj002c2whq1ow51duo","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj3wuhoqr002u2whqr6wpzaoc"},{"post_id":"cj3wuhooj002c2whq1ow51duo","tag_id":"cj3wuhopk002f2whqlm33mouw","_id":"cj3wuhoqv002w2whqyopmor5c"},{"post_id":"cj3wuhooj002c2whq1ow51duo","tag_id":"cj3wuhoqa002m2whqgjouvyax","_id":"cj3wuhoqx002y2whqoyben76o"},{"post_id":"cj3wuhosj002z2whqd6noeyfg","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhot200312whqfffstjza"},{"post_id":"cj3wuhosj002z2whqd6noeyfg","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhotk00332whqai7lhhma"},{"post_id":"cj3wuhoso00302whqanvsugv7","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhou500362whqj3oo41xf"},{"post_id":"cj3wuhoso00302whqanvsugv7","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhoug00392whqzpjmbu4g"},{"post_id":"cj3wuhot300322whqhqlagc8u","tag_id":"cj3wuhoeh00072whqc7xngx3g","_id":"cj3wuhoul003c2whqsoyd2otw"},{"post_id":"cj3wuhot300322whqhqlagc8u","tag_id":"cj3wuhofb000d2whq2av0obcy","_id":"cj3wuhouw003f2whqwel3cuox"},{"post_id":"cj3wuhouh003a2whqyqfmpikw","tag_id":"cj3wuhojh001b2whq4kqtw7zv","_id":"cj3wuhouy003h2whqv7amr287"},{"post_id":"cj3wuhoun003d2whqcgrrr4pj","tag_id":"cj3wuhoih00152whqy900e1lg","_id":"cj3wuhouz003j2whqjjftw2yc"},{"post_id":"cj3wuhoun003d2whqcgrrr4pj","tag_id":"cj3wuhoit00192whqm0upgty7","_id":"cj3wuhov0003l2whqt7sh5z5k"},{"post_id":"cj3wunqa70008mghqytd8snsv","tag_id":"cj3wunq630001mghqog3ko573","_id":"cj3wunqak0009mghqsb8slmkc"},{"post_id":"cj3wunqa70008mghqytd8snsv","tag_id":"cj3wunq6n0003mghq22alim8y","_id":"cj3wunqal000amghqwwb9llls"},{"post_id":"cj45b6if50000rchq7wbpu8o3","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj45b6ify0002rchqisoifdzv"},{"post_id":"cj45b6if50000rchq7wbpu8o3","tag_id":"cj3wuhok5001g2whqcmrw1gzf","_id":"cj45b6igi0005rchqqvchsyac"},{"post_id":"cj45b6ifo0001rchqfrrnpbrw","tag_id":"cj3wunq630001mghqog3ko573","_id":"cj45b6ign0006rchqdbymggw9"},{"post_id":"cj45b6ifo0001rchqfrrnpbrw","tag_id":"cj3wunq6n0003mghq22alim8y","_id":"cj45b6igo0008rchqmoojcd7m"},{"post_id":"cj45b6ig00003rchq538h6f68","tag_id":"cj3wuhokg001k2whqp589aqgq","_id":"cj45b6igp000archqrn3bbh62"},{"post_id":"cj45b6ig00003rchq538h6f68","tag_id":"cj3wuhok5001g2whqcmrw1gzf","_id":"cj45b6igq000crchqr76k51bu"}],"Tag":[{"name":"Hexo","_id":"cj3wuhoeh00072whqc7xngx3g"},{"name":"Blog","_id":"cj3wuhofb000d2whq2av0obcy"},{"name":"MarkDown","_id":"cj3wuhoih00152whqy900e1lg"},{"name":"文本编辑","_id":"cj3wuhoit00192whqm0upgty7"},{"name":"Git","_id":"cj3wuhojh001b2whq4kqtw7zv"},{"name":"Struts2","_id":"cj3wuhok5001g2whqcmrw1gzf"},{"name":"Java开发框架","_id":"cj3wuhokg001k2whqp589aqgq"},{"name":"MVC","_id":"cj3wuhokt001o2whq423kz1ve"},{"name":"ValueStack","_id":"cj3wuhopk002f2whqlm33mouw"},{"name":"OGNL","_id":"cj3wuhoqa002m2whqgjouvyax"},{"name":"Http请求","_id":"cj3wunq630001mghqog3ko573"},{"name":"Servlet","_id":"cj3wunq6n0003mghq22alim8y"}]}}